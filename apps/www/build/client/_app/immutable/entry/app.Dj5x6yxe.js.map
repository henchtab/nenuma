{"version":3,"mappings":"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","names":["asClassComponent","component","Svelte4Component","options","__privateAdd","_events","_instance","props","proxy","__privateSet","hydrate","mount","key","__privateGet","define_property","value","next","unmount","event","callback","cb","args","fn","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","hint","isInstanceOf","originalException","truncateAggregateExceptions","aggregateExceptionsFromError","error","prevExceptions","exception","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","i","source","parentId","exceptions","maxValueLength","truncate","SentryError","message","logLevel","handlers","instrumented","addHandler","type","handler","maybeInstrument","instrumentFn","triggerHandlers","data","typeHandlers","e","DEBUG_BUILD","logger","getFunctionName","addConsoleInstrumentationHandler","instrumentConsole","GLOBAL_OBJ","CONSOLE_LEVELS","level","fill","originalConsoleMethod","originalConsoleMethods","log","WINDOW","supportsFetch","isNativeFunction","func","supportsNativeFetch","result","doc","sandbox","err","addFetchInstrumentationHandler","instrumentFetch","originalFetch","method","url","parseFetchArgs","handlerData","timestampInSeconds","virtualStackTrace","response","finishedHandlerData","erroredHandlerData","isError","addNonEnumerableProperty","hasProp","obj","prop","getUrlFromResource","resource","fetchArgs","arg","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","msg","line","column","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","isBrowserBundle","getSDKSource","isNodeEnv","process","isBrowser","isElectronNodeRenderer","makePromiseBuffer","buffer","isReady","remove","task","add","taskProducer","rejectedSyncPromise","drain","timeout","SyncPromise","resolve","reject","counter","capturedSetTimeout","item","resolvedSyncPromise","parseUrl","match","query","fragment","validSeverityLevels","severityLevelFromString","createClientReportEnvelope","discarded_events","dsn","timestamp","clientReportItem","dateTimestampInSeconds","createEnvelope","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","header","now","headerDelay","headerDate","disabledUntil","limits","dataCategory","isRateLimited","updateRateLimits","statusCode","headers","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","namespaces","delay","category","_nullishCoalesce","lhs","rhsFn","_optionalChain","ops","lastAccessLHS","op","supportsHistory","chromeVar","isChromePackagedApp","hasHistoryApi","errorsInstrumented","registerSpanErrorInstrumentation","errorCallback","activeSpan","getActiveSpan","rootSpan","getRootSpan","SPAN_STATUS_ERROR","TRACING_DEFAULTS","FINISH_REASON_HEARTBEAT_FAILED","FINISH_REASON_IDLE_TIMEOUT","FINISH_REASON_FINAL_TIMEOUT","FINISH_REASON_EXTERNAL_FINISH","startIdleSpan","startSpanOptions","activities","_finished","_idleTimeoutID","_finishReason","_autoFinishAllowed","idleTimeout","finalTimeout","childSpanTimeout","beforeSpanEnd","client","getClient","hasTracingEnabled","SentryNonRecordingSpan","scope","getCurrentScope","previousActiveSpan","span","_startIdleSpan","target","thisArg","definedEndTimestamp","rest","spanEndTimestamp","spanTimeInputToSeconds","spans","getSpanDescendants","child","onIdleSpanEnded","childEndTimestamps","spanToJSON","latestSpanEndTimestamp","spanStartTimestamp","endTimestamp","_cancelIdleTimeout","_restartIdleTimeout","_restartChildSpanTimeout","_pushActivity","spanId","_popActivity","_setSpanForScope","spanJSON","startTimestamp","SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON","childSpans","discardedSpans","childSpan","childSpanJSON","childEndTimestamp","childStartTimestamp","spanStartedBeforeIdleSpanEnd","timeoutWithMarginOfError","spanEndedBeforeFinalTimeout","stringifiedSpan","removeChildSpanFromSpan","startedSpan","endedSpan","spanToAllowAutoFinish","startInactiveSpan","SENTRY_API_VERSION","getBaseApiEndpoint","protocol","port","_getIngestEndpoint","_encodedAuth","sdkInfo","urlEncode","getEnvelopeEndpointWithUrlEncodedAuth","tunnel","installedIntegrations","filterDuplicates","integrations","integrationsByName","currentInstance","name","existingInstance","getIntegrationsToSetup","defaultIntegrations","userIntegrations","integration","arrayify","finalIntegrations","debugIndex","debugInstance","setupIntegrations","integrationIndex","setupIntegration","afterSetupIntegrations","processor","ALREADY_SEEN_ERROR","BaseClient","makeDsn","eventId","uuid4","checkOrSetAlreadyCaught","hintWithEventId","currentScope","eventMessage","isParameterizedString","promisedEvent","isPrimitive","capturedSpanScope","session","updateSession","transport","clientFinished","transportFlushed","eventProcessor","integrationName","isAlreadyInstalled","env","createEventEnvelope","attachment","addItemToEnvelope","createAttachmentEnvelopeItem","promise","sendResponse","createSessionEnvelope","reason","_event","hook","hooks","cbIndex","callbacks","envelope","crashed","errored","ex","mechanism","sessionNonTerminal","ticked","tick","interval","isolationScope","getIsolationScope","prepareEvent","evt","propagationContext","trace_id","parentSpanId","dsc","dropUndefinedKeys","dynamicSamplingContext","getDynamicSamplingContextFromClient","finalEvent","sentryError","sampleRate","isTransaction","isTransactionEvent","isErrorEvent","eventType","beforeSendLabel","parsedSampleRate","parseSampleRate","capturedSpanIsolationScope","prepared","processBeforeSend","_validateBeforeSendResult","processedEvent","spanCount","transactionInfo","outcomes","quantity","beforeSendResult","invalidValueError","isThenable","isPlainObject","beforeSend","beforeSendTransaction","beforeSendSpan","processedSpans","processedSpan","initAndBind","clientClass","consoleSandbox","setCurrentClient","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","rateLimits","flush","send","filteredEnvelopeItems","forEachEnvelopeItem","envelopeItemTypeToDataCategory","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","requestTask","serializeEnvelope","isSentryRequestUrl","checkDsn","checkTunnel","removeTrailingSlash","str","applySdkMetadata","names","metadata","SDK_VERSION","DEFAULT_BREADCRUMBS","addBreadcrumb","breadcrumb","beforeBreadcrumb","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","originalFunctionToString","INTEGRATION_NAME","SETUP_CLIENTS","_functionToStringIntegration","originalFunction","getOriginalFunction","context","functionToStringIntegration","DEFAULT_IGNORE_ERRORS","_inboundFiltersIntegration","_hint","clientOptions","mergedOptions","_mergeOptions","_shouldDropEvent","inboundFiltersIntegration","internalOptions","_isSentryError","getEventDescription","_isIgnoredError","_isUselessError","_isIgnoredTransaction","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreErrors","_getPossibleEventMessages","stringMatchesSomePattern","ignoreTransactions","denyUrls","allowUrls","possibleMessages","lastException","_getLastValidUrl","frames","frame","_dedupeIntegration","previousEvent","currentEvent","dedupeIntegration","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","previousException","_getExceptionFromEvent","currentException","currentFrames","getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","instrumentFetchRequest","shouldCreateSpan","shouldAttachHeaders","spanOrigin","shouldCreateSpanResult","endSpan","fullUrl","getFullURL","host","hasParent","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_OP","request","addTracingHeadersToFetchRequest","traceId","sampled","sentryTraceHeader","spanToTraceHeader","generateSentryTraceHeader","sentryBaggageHeader","dynamicSamplingContextToSentryBaggageHeader","getDynamicSamplingContextFromSpan","newHeaders","BAGGAGE_HEADER_NAME","existingBaggageHeader","newBaggageHeaders","setHttpStatus","contentLength","contentLengthNum","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","sentryWrapped","wrappedArguments","withScope","addExceptionTypeValue","addExceptionMechanism","captureException","property","markFunctionWrapped","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromPlainObject","syntheticException","isUnhandledRejection","normalizeDepth","errorFromProp","getErrorPropertyFromObject","extra","normalizeToSize","isEvent","getNonErrorObjectExceptionValue","eventFromError","stacktrace","skipLines","getSkipFirstStackStringLines","framesToPop","getPopFirstTopFrames","reactMinifiedRegexp","eventFromException","attachStacktrace","eventFromUnknownInput","eventFromMessage","eventFromString","isDOMError","isDOMException","domException","__sentry_template_string__","__sentry_template_values__","keys","extractExceptionKeysForMessage","captureType","getObjectClassName","prototype","createUserFeedbackEnvelope","feedback","dsnToString","createUserFeedbackEnvelopeItem","BrowserClient","opts","sdkSource","getRating","thresholds","bindReporter","metric","reportAllChanges","prevValue","delta","forceReport","generateUniqueID","getNavigationEntry","getActivationStart","navEntry","initMetric","navigationType","observe","po","list","onHidden","onHiddenOrPageHide","runOnce","called","firstHiddenTime","initHiddenTime","onVisibilityUpdate","addChangeListeners","getVisibilityWatcher","whenActivated","FCPThresholds","onFCP","onReport","visibilityWatcher","report","entries","entry","CLSThresholds","onCLS","sessionValue","sessionEntries","handleEntries","firstSessionEntry","lastSessionEntry","FIDThresholds","onFID","handleEntry","interactionCountEstimate","minKnownInteractionId","maxKnownInteractionId","updateEstimate","getInteractionCount","initInteractionCountPolyfill","INPThresholds","prevInteractionCount","getInteractionCountForNavigation","MAX_INTERACTIONS_TO_CONSIDER","longestInteractionList","longestInteractionMap","processEntry","minLongestInteraction","existingInteraction","interaction","a","b","estimateP98LongestInteraction","candidateInteractionIndex","onINP","prevEntry","inp","LCPThresholds","reportedMetricIDs","onLCP","lastEntry","stopListening","TTFBThresholds","whenReady","onTTFB","responseStart","_previousCls","_previousFid","_previousLcp","_previousTtfb","_previousInp","addClsInstrumentationHandler","stopOnCallback","addMetricObserver","instrumentCls","addLcpInstrumentationHandler","instrumentLcp","addFidInstrumentationHandler","instrumentFid","addTtfbInstrumentationHandler","instrumentTtfb","addInpInstrumentationHandler","instrumentInp","addPerformanceInstrumentationHandler","instrumentPerformanceObserver","getCleanupCallback","previousValue","index","isPerformanceEventTiming","isMeasurementValue","startAndEndSpan","parentSpan","startTimeInSeconds","endTime","ctx","parentStartTime","withActiveSpan","getBrowserPerformanceAPI","msToSec","time","MAX_INT_AS_BYTES","_performanceCursor","_measurements","_lcpEntry","_clsEntry","startTrackingWebVitals","performance","browserPerformanceTimeOrigin","fidCallback","_trackFID","clsCallback","_trackCLS","lcpCallback","_trackLCP","ttfbCallback","_trackTtfb","startTrackingLongTasks","startTime","duration","startTrackingInteractions","spanOptions","htmlTreeAsString","componentName","getComponentName","timeOrigin","addPerformanceEntries","performanceEntries","transactionStartTime","_addNavigationSpans","_addMeasureSpans","firstHidden","shouldRecord","_addResourceSpans","_trackNavigator","_addTtfbRequestTimeToMeasurements","measurement","oldValue","measurementTimestamp","normalizedValue","fidMark","measurementName","setMeasurement","_tagMetricInfo","requestTime","measureStartTimestamp","startTimeStamp","measureEndTimestamp","attributes","_addPerformanceNavigationTiming","_addRequest","eventEnd","end","start","requestStartTimestamp","responseEndTimestamp","responseStartTimestamp","resourceUrl","parsedUrl","setResourceEntrySizeData","navigator","connection","dataKey","entryVal","requestStart","DEBOUNCE_DURATION","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","addClickKeypressInstrumentationHandler","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","proto","originalAddEventListener","listener","el","handlerForType","originalRemoveEventListener","isSimilarToLastCapturedEvent","shouldSkipDOMEvent","globalListener","getEventTarget","lastHref","addHistoryInstrumentationHandler","instrumentHistory","oldOnPopState","to","from","historyReplacementFunction","originalHistoryFunction","cachedImplementations","getNativeImplementation","cached","impl","document","contentWindow","clearCachedImplementation","setTimeout","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","xhrproto","originalOpen","isString","onreadystatechangeHandler","xhrInfo","original","readyStateArgs","setRequestHeaderArgs","originalSend","sentryXhrData","LAST_INTERACTIONS","INTERACTIONS_ROUTE_MAP","startTrackingINP","inpCallback","_trackINP","INP_ENTRY_MAP","interactionId","interactionType","routeName","user","replay","replayId","userDisplay","profileId","SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE","registerInpInteractionListener","latestRoute","last","makeFetchTransport","nativeFetch","pendingBodySize","pendingCount","requestSize","requestOptions","CHROME_PRIORITY","GECKO_PRIORITY","createFrame","filename","lineno","colno","UNKNOWN_FUNCTION","chromeRegexNoFnName","chromeRegex","chromeEvalRegex","chromeStackParserFn","noFnParts","col","parts","subMatch","extractSafariExtensionDetails","chromeStackLineParser","geckoREgex","geckoEvalRegex","gecko","geckoStackLineParser","defaultStackLineParsers","defaultStackParser","createStackParser","isSafariExtension","isSafariWebExtension","MAX_ALLOWED_STRING_LENGTH","_breadcrumbsIntegration","_options","_getConsoleBreadcrumbHandler","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","_getFetchBreadcrumbHandler","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","breadcrumbsIntegration","dom","keyAttrs","maxStringLength","element","_isEvent","safeJoin","status_code","body","parsedLoc","parsedFrom","parsedTo","DEFAULT_EVENT_TARGET","_browserApiErrorsIntegration","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","browserApiErrorsIntegration","originalCallback","xhr","wrapOptions","globalObject","eventName","wrappedEventHandler","originalEventHandler","_globalHandlersIntegration","_installGlobalOnErrorHandler","globalHandlerLog","_installGlobalOnUnhandledRejectionHandler","globalHandlersIntegration","getOptions","_enhanceEventWithInitialFrame","captureEvent","_getUnhandledRejectionError","_eventFromRejectionWithPrimitive","ev","ev0","ev0s","ev0sf","getLocationHref","httpContextIntegration","referrer","userAgent","DEFAULT_KEY","DEFAULT_LIMIT","_linkedErrorsIntegration","linkedErrorsIntegration","getDefaultIntegrations","applyDefaultOptions","optionsArg","shouldShowBrowserExtensionError","windowWithMaybeExtension","extensionKey","extensionObject","runtimeId","href","extensionProtocols","isDedicatedExtensionPage","isNWjs","init","browserOptions","stackParserFromStackParserOptions","startSessionTracking","startSession","captureSession","REPLAY_SESSION_KEY","REPLAY_EVENT_NAME","UNABLE_TO_SEND_REPLAY","SESSION_IDLE_PAUSE_DURATION","SESSION_IDLE_EXPIRE_DURATION","DEFAULT_FLUSH_MIN_DELAY","DEFAULT_FLUSH_MAX_DELAY","BUFFER_CHECKOUT_TIME","RETRY_BASE_INTERVAL","RETRY_MAX_COUNT","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","SLOW_CLICK_THRESHOLD","SLOW_CLICK_SCROLL_TIMEOUT","REPLAY_MAX_EVENT_BUFFER_SIZE","MIN_REPLAY_DURATION","MIN_REPLAY_DURATION_LIMIT","MAX_REPLAY_DURATION","_nullishCoalesce$1","_optionalChain$5","NodeType$1","NodeType","isElement$1","n","isShadowRoot","_","_2","isNativeShadowDom","shadowRoot","fixBrowserCompatibilityIssuesInCSS","cssText","escapeImportStatement","rule","statement","stringifyStylesheet","s","rules","stringifyRule","importStringified","isCSSImportRule","isCSSStyleRule","fixSafariColons","cssStringified","regex","Mirror","id","_3","_4","_5","childNode","node","meta","oldNode","createMirror","shouldMaskInput","maskInputOptions","tagName","maskInputValue","isMasked","maskInputFn","text","toLowerCase","toUpperCase","ORIGINAL_ATTRIBUTE_NAME","is2DCanvasBlank","canvas","chunkSize","x","y","getImageData","originalGetImageData","pixel","getInputType","getInputValue","_id","tagNameRegex","IGNORED_NODE","genId","getValidTagName","processedTagName","extractOrigin","origin","canvasService","canvasCtx","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","stack","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","getAbsoluteSrcsetString","attributeValue","pos","collectCharacters","regEx","chars","output","absoluteToDoc","descriptorsStr","inParens","c","isSVGElement","getHref","transformAttribute","maskAttributeFn","ignoreAttribute","_value","_isBlockedElement","blockClass","blockSelector","unblockSelector","eIndex","className","elementClassMatchesRegex","distanceToMatch","matchPredicate","distance","createMatchPredicate","selector","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","autocomplete","maskDistance","unmaskDistance","onceIframeLoaded","iframeEl","iframeLoadTimeout","win","fired","readyState","timer","blankUrl","onceStylesheetLoaded","link","styleSheetLoadTimeout","styleSheetLoaded","serializeNode","mirror","inlineStylesheet","maskTextFn","dataURLOptions","inlineImages","recordCanvas","keepIframeSrcFn","newlyAddedElement","rootId","getRootId","serializeElementNode","serializeTextNode","docId","parentTagName","textContent","isStyle","isScript","isTextarea","_6","_7","_8","forceMask","isInputMasked","needBlock","len","attr","stylesheet","checked","canvasDataURL","blankCanvas","blankCanvasDataURL","image","recordInlineImage","width","height","isCustomElement","lowerIfExists","maybeAttr","slimDOMExcluded","sn","slimDOMOptions","serializeNodeWithId","skipChild","onSerialize","onIframeLoad","onStylesheetLoad","stylesheetLoadTimeout","preserveWhiteSpace","_serializedNode","serializedNode","recordChild","bypassOptions","childN","serializedChildNode","iframeDoc","serializedIframeNode","serializedLinkNode","snapshot","maskAllInputs","slimDOM","_optionalChain$4","on","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","receiver","throttle$1","wait","previous","remaining","clearTimeout$1","setTimeout$1","hookSetter","d","isRevoked","patch","replacement","wrapped","nowTimestamp","getWindowScroll","_9","_10","_11","_12","_13","_14","getWindowHeight","getWindowWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isSerialized","isIgnored","isAncestorRemoved","legacy_isTouchEvent","polyfill","isSerializedIframe","isSerializedStylesheet","hasShadowRoot","_18","StyleSheetMirror","newId","getShadowHost","shadowHost","_19","_20","_21","getRootShadowHost","rootShadowHost","shadowHostInDom","inDom","getImplementation","onRequestAnimationFrame","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","isNodeInLinkedList","DoubleLinkedList","position","current","moveKey","MutationBuffer","mutations","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframe","childSn","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","payload","attribute","diffAsStr","unchangedAsStr","m","attributeName","old","pname","newValue","newPriority","nodeId","deepDelete","targetId","addsSet","removes","_isParentRemoved","parentNode","r","set","_isAncestorInSet","errorHandler","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","mutationBuffers","path","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","angularZoneSymbol","observer","initMoveObserver","mousemoveCb","sampling","threshold","callbackThreshold","positions","timeBaseline","wrappedCb","totalOffset","p","updatePosition","clientX","clientY","h","initMouseInteractionObserver","mouseInteractionCb","disableMap","currentPointerType","getHandler","eventKey","pointerType","thisEventKey","initScrollObserver","scrollCb","scrollLeftTop","initViewportResizeObserver","viewportResizeCb","lastH","lastW","updateDimension","INPUT_TAGS","lastInputValueMap","initInputObserver","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isChecked","cbWithDedup","v","lastInputValue","currentWindow","propertyDescriptor","hookProperties","getNestedCSSRulePositions","recurse","childRule","hasNestedCSSRule","getIdAndStyleId","sheet","styleMirror","styleId","initStyleSheetObserver","styleSheetRuleCb","stylesheetManager","insertRule","argumentsList","deleteRule","replace","replaceSync","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","typeKey","initAdoptedStyleSheetObserver","hostId","patchTarget","originalPropertyDescriptor","sheets","_15","_16","initStyleDeclarationObserver","styleDeclarationCb","ignoreCSSAttributes","setProperty","priority","_17","removeProperty","initMediaInteractionObserver","mediaInteractionCb","currentTime","volume","muted","playbackRate","initFontObserver","fontCb","fontMap","originalFontFace","family","descriptors","fontFace","restoreHandler","initSelectionObserver","param","selectionCb","collapsed","updateSelection","selection","ranges","count","range","startContainer","startOffset","endContainer","endOffset","initCustomElementObserver","customElementCb","constructor","initObservers","o","_hooks","mutationObserver","mousemoveHandler","mouseInteractionHandler","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","styleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","fontObserver","selectionObserver","customElementObserver","pluginHandlers","plugin","CrossOriginIframeMirror","generateIdFn","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","remoteIdToIdMap","map","ids","_optionalChain$1","IframeManagerNoop","IframeManager","crossOriginMessageEvent","transformedEvent","style","iframeMirror","ShadowDomManagerNoop","ShadowDomManager","iframeElement","manager","option","CanvasManagerNoop","StylesheetManager","linkEl","adoptedStyleSheetData","styles","ProcessedNodeManager","thisBuffer","buffers","wrappedEmit","_takeFullSnapshot","record","emit","checkoutEveryNms","checkoutEveryNth","_maskInputOptions","_slimDOMOptions","maxCanvasSize","packFn","mousemoveWait","recordCrossOriginIframes","recordAfter","collectFonts","plugins","onMutation","getCanvasManager","inEmittingFrame","passEmitsToParent","lastFullSnapshotEvent","incrementalSnapshotCount","isCheckout","buf","exceedCount","exceedTime","takeFullSnapshot","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","wrappedAdoptedStyleSheetEmit","iframeManager","processedNodeManager","canvasManager","_getCanvasManager","shadowDomManager","getCanvasManagerFn","ReplayEventTypeIncrementalSnapshot","ReplayEventTypeCustom","timestampToMs","timestampToS","addBreadcrumbEvent","normalize","INTERACTIVE_SELECTOR","getClosestInteractive","getClickTargetNode","getTargetNode","isEventWithTarget","onWindowOpen","monkeyPatchWindowOpen","originalWindowOpen","handleClick","clickDetector","clickBreadcrumb","ClickDetector","slowClickConfig","_addBreadcrumbEvent","cleanupWindowOpen","nowInSeconds","ignoreElement","isClickBreadcrumb","newClick","click","timedOutClicks","hadScroll","hadMutation","isSlowClick","clickCount","timeAfterClickMs","endReason","setTimeout$2","SLOW_CLICK_TAGS","updateClickDetectorForRecordingEvent","isIncrementalEvent","isIncrementalMouseInteraction","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","handleDomListener","handleDom","isClick","getBaseDomBreadcrumb","isElement","getDomTarget","handleKeyboardEvent","getKeyboardBreadcrumb","metaKey","shiftKey","ctrlKey","altKey","isInputElement","hasModifierKey","isCharacterKey","baseBreadcrumb","ENTRY_TYPES","createResourceEntry","createPaintEntry","createNavigationEntry","webVitalHandler","getter","createPerformanceEntries","createPerformanceEntry","entryType","getAbsoluteTime","decodedBodySize","domComplete","encodedBodySize","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","transferSize","initiatorType","responseEnd","responseStatus","getLargestContentfulPaint","getWebVital","getCumulativeLayoutShift","firstEntry","getFirstInputDelay","getInteractionToNextPaint","rating","setupPerformanceObserver","addPerformanceEntry","onEntries","clearCallbacks","clearCallback","logInfo","shouldAddBreadcrumb","addLogBreadcrumb","logInfoNextTick","EventBufferSizeExceededError","EventBufferArray","eventSize","eventsRet","WorkerHandler","worker","EventBufferCompressionWorker","EventBufferProxy","events","hasCheckout","addEventPromises","createEventBuffer","useCompression","customWorkerUrl","_loadWorker","workerUrl","_getWorkerUrl","hasSessionStorage","clearSession","deleteSession","isSampled","makeSession","started","lastActivity","segmentId","previousSessionId","saveSession","getSessionSampleType","sessionSampleRate","allowBuffering","createSession","stickySession","fetchSession","traceInternals","sessionStringFromStorage","sessionObj","isExpired","initialTime","expiry","targetTime","isSessionExpired","maxReplayDuration","sessionIdleExpire","shouldRefreshSession","loadOrCreateSession","sessionOptions","existingSession","isCustomEvent","addEventSync","shouldAddEvent","_addEvent","addEvent","replayOptions","eventAfterPossibleCallback","maybeApplyCallback","timestampInMs","isReplayEvent","isFeedbackEvent","handleAfterSendEvent","handleTransactionEvent","handleErrorEvent","replayContext","beforeErrorSampling","handleBeforeSendEvent","handleHydrationError","exceptionValue","handleBreadcrumbs","beforeAddBreadcrumb","isBreadcrumbWithCategory","normalizeBreadcrumb","normalizeConsoleBreadcrumb","isTruncated","normalizedArgs","normalizedArg","isRrwebError","addFeedbackBreadcrumb","shouldSampleForBufferEvent","handleGlobalEventListener","createPerformanceSpans","handleHistory","handleHistorySpanListener","shouldFilterRequest","addNetworkBreadcrumb","getBodySize","textEncoder","formDataStr","_serializeFormData","parseContentLengthHeader","size","getBodyString","mergeWarning","info","warning","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","normalizedBody","warnings","normalizeNetworkBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","exceedsSizeLimit","isProbablyJson","_strIsProbablyJson","truncatedBody","first","urlMatches","urls","getFullUrl","baseURI","fixedUrl","captureFetchBreadcrumbToReplay","_prepareFetchData","enrichFetchBreadcrumb","input","_getFetchRequestArgBody","reqSize","resSize","requestBodySize","responseBodySize","captureDetails","_getRequestInfo","_getResponseInfo","networkCaptureBodies","networkRequestHeaders","getRequestHeaders","requestBody","bodyStr","networkResponseHeaders","getAllHeaders","bodyText","_parseFetchResponseBody","getResponseData","res","_tryCloneResponse","_tryGetResponseText","allHeaders","getHeadersFromOptions","_getResponseText","txt","captureXhrBreadcrumbToReplay","_prepareXhrData","enrichXhrBreadcrumb","_getBodySize","getResponseHeaders","requestWarning","responseBody","responseWarning","_getXhrResponseBody","acc","errors","_parseXhrResponse","responseType","handleNetworkBreadcrumbs","networkDetailAllowUrls","networkDetailDenyUrls","beforeAddNetworkBreadcrumb","_isXhrBreadcrumb","_isXhrHint","_isFetchBreadcrumb","_isFetchHint","addGlobalListeners","addEventProcessor","feedbackEvent","addMemoryEntry","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","debounce","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","debounced","getHandleRecordingEmit","hadFirstEvent","_isCheckout","addSettingsEvent","earliestEvent","createOptionsEvent","createReplayEnvelope","replayEvent","recordingData","createEventEnvelopeHeaders","getSdkMetadataForEnvelopeHeader","prepareRecordingData","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","event_id","eventHint","preparedEvent","version","sendReplayRequest","segment_id","eventContext","preparedRecordingData","errorIds","traceIds","initialTimestamp","baseEvent","TransportStatusCodeError","RateLimitError","sendReplay","replayData","retryConfig","setContext","THROTTLED","SKIPPED","throttle","maxCount","durationSeconds","_cleanup","_getTotalCount","isThrottled","wasThrottled","ReplayContainer","recordingOptions","slowClickTimeout","slowClickIgnoreSelectors","errorSampleRate","requiresManualStart","canvasOptions","forceFlush","continueRecording","activityTime","hasStoppedRecording","cbResult","urlPath","lastActiveSpan","lastRootSpan","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","currentSession","_lastActivity","eventBuffer","_context","force","tooShort","tooLong","mutationLimit","mutationBreadcrumbLimit","overMutationLimit","getOption","selectors","defaultSelectors","getPrivacyOptions","mask","unmask","block","unblock","ignore","defaultBlockedElements","maskSelector","unmaskSelector","maskAttribute","maskAttributes","privacyOptions","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","replayIntegration","Replay","flushMinDelay","flushMaxDelay","minReplayDuration","_experiments","blockAllMedia","maskFn","beforeAddRecordingEvent","_getMergedNetworkHeaders","finalOptions","loadReplayOptionsFromClient","canvasIntegration","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","defaultRequestInstrumentationOptions","instrumentOutgoingRequests","traceFetch","traceXHR","shouldCreateSpanForRequest","enableHTTPTimings","tracePropagationTargets","shouldAttachHeadersWithTargets","createdSpan","addHTTPTimings","xhrCallback","isPerformanceResourceTiming","cleanup","resourceTimingEntryToSpanData","extractNetworkProtocol","nextHopProtocol","_name","char","resourceTiming","timingSpanData","targetUrl","resolvedUrl","currentOrigin","isSameOriginRequest","isRelativeSameOriginRequest","addTracingHeadersToXhrRequest","setHeaderOnXhr","registerBackgroundTabDetection","cancelledStatus","status","BROWSER_TRACING_INTEGRATION_ID","DEFAULT_BROWSER_TRACING_OPTIONS","browserTracingIntegration","enableInp","enableLongTask","enableInteractions","beforeStartSpan","markBackgroundSpan","instrumentPageLoad","instrumentNavigation","_collectWebVitals","_createRouteSpan","isPageloadTransaction","finalStartSpanOptions","idleSpan","emitFinish","startingUrl","traceOptions","sentryTrace","getMetaContent","baggage","propagationContextFromHeaders","oldPropagationContext","spanIsSampled","startBrowserTracingPageLoadSpan","startBrowserTracingNavigationSpan","registerInteractionListener","generatePropagationContext","metaName","metaTag","getDomElement","inflightInteractionSpan","registerInteractionTransaction","currentRootSpanOp","init$1","detectAndReportSvelteKit","detectedSvelteKit","svelteKitProcessor","isSvelteKitApp","browserTracingIntegration$1","_instrumentPageload","_instrumentNavigations","initialPath","pageloadSpan","page","routeId","routingSpan","navigating","navigation","rawRouteOrigin","rawRouteDestination","parameterizedRouteOrigin","parameterizedRouteDestination","navigationInfo","actualFetch","switchToFetchProxy","restoreFetch","setTag","getDefaultIntegrations$1","globalWithSentryFetchProxy","defaultErrorHandler","handleErrorWithSentry","handleError","myErrorHandler","matchers","components","$.prop","$$props","$.proxy","data_0","data_1","data_2","$.user_pre_effect","mounted","navigated","title","onMount","unsubscribe","$$component","$$value","_a","$$anchor","root","Root","nodes","__vitePreload","server_loads","dictionary","client_hooks.handleError"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"sources":["../../../../../../../../node_modules/.pnpm/svelte@5.0.0-next.166/node_modules/svelte/src/legacy/legacy-client.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/aggregate-errors.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/error.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/instrument/handlers.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/instrument/console.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/supports.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/instrument/fetch.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/instrument/globalError.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/instrument/globalUnhandledRejection.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/env.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/node.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/isBrowser.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/promisebuffer.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/url.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/severity.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/clientreport.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/ratelimit.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/buildPolyfills/_nullishCoalesce.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/buildPolyfills/_optionalChain.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@8.17.0/node_modules/@sentry/utils/build/esm/vendor/supportsHistory.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/tracing/errors.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/tracing/idleSpan.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/api.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/integration.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/baseclient.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/sdk.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/transports/base.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/utils/isSentryRequestUrl.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/utils/sdkMetadata.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/breadcrumbs.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/integrations/functiontostring.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/integrations/inboundfilters.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/integrations/dedupe.js","../../../../../../../../node_modules/.pnpm/@sentry+core@8.17.0/node_modules/@sentry/core/build/esm/fetch.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/helpers.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/debug-build.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/eventbuilder.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/userfeedback.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/client.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/debug-build.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/bindReporter.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/types.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/generateUniqueID.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getNavigationEntry.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getActivationStart.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/initMetric.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/observe.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/onHidden.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/runOnce.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/getVisibilityWatcher.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/whenActivated.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/onFCP.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getCLS.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getFID.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getINP.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/getLCP.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/onTTFB.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/instrument.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/utils.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/browserMetrics.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/instrument/dom.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/instrument/history.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/getNativeImplementation.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/instrument/xhr.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+browser-utils@8.17.0/node_modules/@sentry-internal/browser-utils/build/esm/metrics/inp.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/transports/fetch.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/stack-parsers.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/integrations/breadcrumbs.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/integrations/browserapierrors.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/integrations/globalhandlers.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/integrations/httpcontext.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/integrations/linkederrors.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/sdk.js","../../../../../../../../node_modules/.pnpm/@sentry-internal+replay@8.17.0/node_modules/@sentry-internal/replay/build/npm/esm/index.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/tracing/request.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/tracing/backgroundtab.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@8.17.0/node_modules/@sentry/browser/build/npm/esm/tracing/browserTracingIntegration.js","../../../../../../../../node_modules/.pnpm/@sentry+svelte@8.17.0_svelte@5.0.0-next.166/node_modules/@sentry/svelte/build/esm/sdk.js","../../../../../../../../node_modules/.pnpm/@sentry+sveltekit@8.17.0_@opentelemetry+api@1.9.0_@opentelemetry+core@1.25.1_@opentelemetry+a_tyibqtmyeikp6oihshcyiz6ct4/node_modules/@sentry/sveltekit/build/esm/client/browserTracingIntegration.js","../../../../../../../../node_modules/.pnpm/@sentry+sveltekit@8.17.0_@opentelemetry+api@1.9.0_@opentelemetry+core@1.25.1_@opentelemetry+a_tyibqtmyeikp6oihshcyiz6ct4/node_modules/@sentry/sveltekit/build/esm/client/sdk.js","../../../../../../../../node_modules/.pnpm/@sentry+sveltekit@8.17.0_@opentelemetry+api@1.9.0_@opentelemetry+core@1.25.1_@opentelemetry+a_tyibqtmyeikp6oihshcyiz6ct4/node_modules/@sentry/sveltekit/build/esm/client/handleError.js","../../../../../../src/hooks.client.ts","../../../../../generated/client-optimized/matchers.js","../../../../../generated/root.svelte","../../../../../generated/root.js","../../../../../generated/client-optimized/app.js"],"sourcesContent":["import { proxy } from '../internal/client/proxy.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport { define_property } from '../internal/client/utils.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {import('svelte').ComponentConstructorOptions<Props> & {\n * \tcomponent: import('svelte').ComponentType<import('svelte').SvelteComponent<Props, Events, Slots>> | import('svelte').Component<Props>;\n * \timmutable?: boolean;\n * \thydrate?: boolean;\n * \trecover?: boolean;\n * }} options\n * @returns {import('svelte').SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {import('svelte').SvelteComponent<Props, Events, Slots> | import('svelte').Component<Props>} component\n * @returns {import('svelte').ComponentType<import('svelte').SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {import('svelte').ComponentConstructorOptions & {\n\t *  component: any;\n\t * \timmutable?: boolean;\n\t * \thydrate?: boolean;\n\t * \trecover?: false;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\t// Using proxy state here isn't completely mirroring the Svelte 4 behavior, because mutations to a property\n\t\t// cause fine-grained updates to only the places where that property is used, and not the entire property.\n\t\t// Reactive statements and actions (the things where this matters) are handling this properly regardless, so it should be fine in practise.\n\t\tconst props = proxy({ ...(options.props || {}), $$events: {} }, false);\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(fn);\n}\n","import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=handlers.js.map\n","import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { logger } from './logger.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFunction, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isError } from '../is.js';\nimport { fill, addNonEnumerableProperty } from '../object.js';\nimport { supportsNativeFetch } from '../supports.js';\nimport { timestampInSeconds } from '../time.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: timestampInSeconds() * 1000,\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // We capture the stack right here and not in the Promise error callback because Safari (and probably other\n      // browsers too) will wipe the stack trace up to this point, only leaving us with this file which is useless.\n\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n      //       it means the error, that was caused by your fetch call did not\n      //       have a stack trace, so the SDK backfilled the stack trace so\n      //       you can see which fetch call failed.\n      const virtualStackTrace = new Error().stack;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: timestampInSeconds() * 1000,\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: timestampInSeconds() * 1000,\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n\n          if (isError(error) && error.stack === undefined) {\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n            //       it means the error, that was caused by your fetch call did not\n            //       have a stack trace, so the SDK backfilled the stack trace so\n            //       you can see which fetch call failed.\n            error.stack = virtualStackTrace;\n            addNonEnumerableProperty(error, 'framesToPop', 1);\n          }\n\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nexport { addFetchInstrumentationHandler, parseFetchArgs };\n//# sourceMappingURL=fetch.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { isNodeEnv } from './node.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ ).process !== undefined && ((GLOBAL_OBJ ).process ).type === 'renderer'\n  );\n}\n\nexport { isBrowser };\n//# sourceMappingURL=isBrowser.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0] || Promise.resolve(undefined);\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  return (urlPath.split(/[?#]/, 1) )[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5) ;\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n\nconst WINDOW = GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW ).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { addGlobalErrorInstrumentationHandler, addGlobalUnhandledRejectionInstrumentationHandler, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getActiveSpan, getRootSpan } from '../utils/spanUtils.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Ensure that global errors automatically set the active span status.\n */\nfunction registerSpanErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active root span as failed\n */\nfunction errorCallback() {\n  const activeSpan = getActiveSpan();\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n  if (rootSpan) {\n    const message = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Root span: ${message} -> Global error occured`);\n    rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message });\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerSpanErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { timestampInSeconds, logger } from '@sentry/utils';\nimport { getClient, getCurrentScope } from '../currentScopes.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON } from '../semanticAttributes.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { _setSpanForScope } from '../utils/spanOnScope.js';\nimport { getActiveSpan, spanTimeInputToSeconds, getSpanDescendants, spanToJSON, removeChildSpanFromSpan } from '../utils/spanUtils.js';\nimport { SentryNonRecordingSpan } from './sentryNonRecordingSpan.js';\nimport { SPAN_STATUS_ERROR } from './spanstatus.js';\nimport { startInactiveSpan } from './trace.js';\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  childSpanTimeout: 15000,\n};\n\nconst FINISH_REASON_HEARTBEAT_FAILED = 'heartbeatFailed';\nconst FINISH_REASON_IDLE_TIMEOUT = 'idleTimeout';\nconst FINISH_REASON_FINAL_TIMEOUT = 'finalTimeout';\nconst FINISH_REASON_EXTERNAL_FINISH = 'externalFinish';\n\n/**\n * An idle span is a span that automatically finishes. It does this by tracking child spans as activities.\n * An idle span is always the active span.\n */\nfunction startIdleSpan(startSpanOptions, options = {}) {\n  // Activities store a list of active spans\n  const activities = new Map();\n\n  // We should not use heartbeat if we finished a span\n  let _finished = false;\n\n  // Timer that tracks idleTimeout\n  let _idleTimeoutID;\n\n  // The reason why the span was finished\n  let _finishReason = FINISH_REASON_EXTERNAL_FINISH;\n\n  let _autoFinishAllowed = !options.disableAutoFinish;\n\n  const {\n    idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    finalTimeout = TRACING_DEFAULTS.finalTimeout,\n    childSpanTimeout = TRACING_DEFAULTS.childSpanTimeout,\n    beforeSpanEnd,\n  } = options;\n\n  const client = getClient();\n\n  if (!client || !hasTracingEnabled()) {\n    return new SentryNonRecordingSpan();\n  }\n\n  const scope = getCurrentScope();\n  const previousActiveSpan = getActiveSpan();\n  const span = _startIdleSpan(startSpanOptions);\n\n  // We patch span.end to ensure we can run some things before the span is ended\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  span.end = new Proxy(span.end, {\n    apply(target, thisArg, args) {\n      if (beforeSpanEnd) {\n        beforeSpanEnd(span);\n      }\n\n      // Just ensuring that this keeps working, even if we ever have more arguments here\n      const [definedEndTimestamp, ...rest] = args;\n      const timestamp = definedEndTimestamp || timestampInSeconds();\n      const spanEndTimestamp = spanTimeInputToSeconds(timestamp);\n\n      // Ensure we end with the last span timestamp, if possible\n      const spans = getSpanDescendants(span).filter(child => child !== span);\n\n      // If we have no spans, we just end, nothing else to do here\n      if (!spans.length) {\n        onIdleSpanEnded(spanEndTimestamp);\n        return Reflect.apply(target, thisArg, [spanEndTimestamp, ...rest]);\n      }\n\n      const childEndTimestamps = spans\n        .map(span => spanToJSON(span).timestamp)\n        .filter(timestamp => !!timestamp) ;\n      const latestSpanEndTimestamp = childEndTimestamps.length ? Math.max(...childEndTimestamps) : undefined;\n\n      // In reality this should always exist here, but type-wise it may be undefined...\n      const spanStartTimestamp = spanToJSON(span).start_timestamp;\n\n      // The final endTimestamp should:\n      // * Never be before the span start timestamp\n      // * Be the latestSpanEndTimestamp, if there is one, and it is smaller than the passed span end timestamp\n      // * Otherwise be the passed end timestamp\n      // Final timestamp can never be after finalTimeout\n      const endTimestamp = Math.min(\n        spanStartTimestamp ? spanStartTimestamp + finalTimeout / 1000 : Infinity,\n        Math.max(spanStartTimestamp || -Infinity, Math.min(spanEndTimestamp, latestSpanEndTimestamp || Infinity)),\n      );\n\n      onIdleSpanEnded(endTimestamp);\n      return Reflect.apply(target, thisArg, [endTimestamp, ...rest]);\n    },\n  });\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   */\n  function _cancelIdleTimeout() {\n    if (_idleTimeoutID) {\n      clearTimeout(_idleTimeoutID);\n      _idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  function _restartIdleTimeout(endTimestamp) {\n    _cancelIdleTimeout();\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && activities.size === 0 && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_IDLE_TIMEOUT;\n        span.end(endTimestamp);\n      }\n    }, idleTimeout);\n  }\n\n  /**\n   * Restarts child span timeout, if there is none running it will start one.\n   */\n  function _restartChildSpanTimeout(endTimestamp) {\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_HEARTBEAT_FAILED;\n        span.end(endTimestamp);\n      }\n    }, childSpanTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  function _pushActivity(spanId) {\n    _cancelIdleTimeout();\n    activities.set(spanId, true);\n\n    const endTimestamp = timestampInSeconds();\n    // We need to add the timeout here to have the real endtimestamp of the idle span\n    // Remember timestampInSeconds is in seconds, timeout is in ms\n    _restartChildSpanTimeout(endTimestamp + childSpanTimeout / 1000);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  function _popActivity(spanId) {\n    if (activities.has(spanId)) {\n      activities.delete(spanId);\n    }\n\n    if (activities.size === 0) {\n      const endTimestamp = timestampInSeconds();\n      // We need to add the timeout here to have the real endtimestamp of the idle span\n      // Remember timestampInSeconds is in seconds, timeout is in ms\n      _restartIdleTimeout(endTimestamp + idleTimeout / 1000);\n    }\n  }\n\n  function onIdleSpanEnded(endTimestamp) {\n    _finished = true;\n    activities.clear();\n\n    _setSpanForScope(scope, previousActiveSpan);\n\n    const spanJSON = spanToJSON(span);\n\n    const { start_timestamp: startTimestamp } = spanJSON;\n    // This should never happen, but to make TS happy...\n    if (!startTimestamp) {\n      return;\n    }\n\n    const attributes = spanJSON.data || {};\n    if (!attributes[SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON]) {\n      span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, _finishReason);\n    }\n\n    logger.log(`[Tracing] Idle span \"${spanJSON.op}\" finished`);\n\n    const childSpans = getSpanDescendants(span).filter(child => child !== span);\n\n    let discardedSpans = 0;\n    childSpans.forEach(childSpan => {\n      // We cancel all pending spans with status \"cancelled\" to indicate the idle span was finished early\n      if (childSpan.isRecording()) {\n        childSpan.setStatus({ code: SPAN_STATUS_ERROR, message: 'cancelled' });\n        childSpan.end(endTimestamp);\n        DEBUG_BUILD &&\n          logger.log('[Tracing] Cancelling span since span ended early', JSON.stringify(childSpan, undefined, 2));\n      }\n\n      const childSpanJSON = spanToJSON(childSpan);\n      const { timestamp: childEndTimestamp = 0, start_timestamp: childStartTimestamp = 0 } = childSpanJSON;\n\n      const spanStartedBeforeIdleSpanEnd = childStartTimestamp <= endTimestamp;\n\n      // Add a delta with idle timeout so that we prevent false positives\n      const timeoutWithMarginOfError = (finalTimeout + idleTimeout) / 1000;\n      const spanEndedBeforeFinalTimeout = childEndTimestamp - childStartTimestamp <= timeoutWithMarginOfError;\n\n      if (DEBUG_BUILD) {\n        const stringifiedSpan = JSON.stringify(childSpan, undefined, 2);\n        if (!spanStartedBeforeIdleSpanEnd) {\n          logger.log('[Tracing] Discarding span since it happened after idle span was finished', stringifiedSpan);\n        } else if (!spanEndedBeforeFinalTimeout) {\n          logger.log('[Tracing] Discarding span since it finished after idle span final timeout', stringifiedSpan);\n        }\n      }\n\n      if (!spanEndedBeforeFinalTimeout || !spanStartedBeforeIdleSpanEnd) {\n        removeChildSpanFromSpan(span, childSpan);\n        discardedSpans++;\n      }\n    });\n\n    if (discardedSpans > 0) {\n      span.setAttribute('sentry.idle_span_discarded_spans', discardedSpans);\n    }\n  }\n\n  client.on('spanStart', startedSpan => {\n    // If we already finished the idle span,\n    // or if this is the idle span itself being started,\n    // or if the started span has already been closed,\n    // we don't care about it for activity\n    if (_finished || startedSpan === span || !!spanToJSON(startedSpan).timestamp) {\n      return;\n    }\n\n    const allSpans = getSpanDescendants(span);\n\n    // If the span that was just started is a child of the idle span, we should track it\n    if (allSpans.includes(startedSpan)) {\n      _pushActivity(startedSpan.spanContext().spanId);\n    }\n  });\n\n  client.on('spanEnd', endedSpan => {\n    if (_finished) {\n      return;\n    }\n\n    _popActivity(endedSpan.spanContext().spanId);\n  });\n\n  client.on('idleSpanEnableAutoFinish', spanToAllowAutoFinish => {\n    if (spanToAllowAutoFinish === span) {\n      _autoFinishAllowed = true;\n      _restartIdleTimeout();\n\n      if (activities.size) {\n        _restartChildSpanTimeout();\n      }\n    }\n  });\n\n  // We only start the initial idle timeout if we are not delaying the auto finish\n  if (!options.disableAutoFinish) {\n    _restartIdleTimeout();\n  }\n\n  setTimeout(() => {\n    if (!_finished) {\n      span.setStatus({ code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' });\n      _finishReason = FINISH_REASON_FINAL_TIMEOUT;\n      span.end();\n    }\n  }, finalTimeout);\n\n  return span;\n}\n\nfunction _startIdleSpan(options) {\n  const span = startInactiveSpan(options);\n\n  _setSpanForScope(getCurrentScope(), span);\n\n  DEBUG_BUILD && logger.log('[Tracing] Started span is an idle span');\n\n  return span;\n}\n\nexport { TRACING_DEFAULTS, startIdleSpan };\n//# sourceMappingURL=idleSpan.js.map\n","import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel, sdkInfo) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { arrayify, logger } from '@sentry/utils';\nimport { getClient } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex > -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1) ;\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\nexport { addIntegration, afterSetupIntegrations, defineIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { makeDsn, logger, uuid4, checkOrSetAlreadyCaught, isParameterizedString, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, dropUndefinedKeys, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { getIsolationScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegration, afterSetupIntegrations, setupIntegrations } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport { parseSampleRate } from './utils/parseSampleRate.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   captureException(exception, hint, scope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    level,\n    hint,\n    currentScope,\n  ) {\n    const hintWithEventId = {\n      event_id: uuid4(),\n      ...hint,\n    };\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, currentScope) {\n    const eventId = uuid4();\n\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(env, createAttachmentEnvelopeItem(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Adding outcome: \"${key}\"`);\n\n      this._outcomes[key] = (this._outcomes[key] || 0) + 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    // Note that the code below, with nullish coalescing assignment,\n    // may reduce the code, so it may be switched to when Node 14 support\n    // is dropped (the `??=` operator is supported since Node 15).\n    // (this._hooks[hook] ??= []).push(callback);\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n\n    // This function returns a callback execution handler that, when invoked,\n    // deregisters a callback. This is crucial for managing instances where callbacks\n    // need to be unregistered to prevent self-referencing in callback closures,\n    // ensuring proper garbage collection.\n    return () => {\n      const hooks = this._hooks[hook];\n\n      if (hooks) {\n        // @ts-expect-error We assue the types are correct\n        const cbIndex = hooks.indexOf(callback);\n        hooks.splice(cbIndex, 1);\n      }\n    };\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    const callbacks = this._hooks[hook];\n    if (callbacks) {\n      callbacks.forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n   sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n        return reason;\n      });\n    }\n\n    DEBUG_BUILD && logger.error('Transport disabled');\n\n    return resolvedSyncPromise({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    currentScope,\n    isolationScope = getIsolationScope(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return prepareEvent(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(currentScope ? currentScope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: dropUndefinedKeys({\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          }),\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, currentScope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, currentScope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(this, options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransactionEvent(event)) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this._outcomes['span'] = (this._outcomes['span'] || 0) + spanCount;\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = currentScope && currentScope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.entries(outcomes).map(([key, quantity]) => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity,\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  client,\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event)) {\n    if (event.spans && beforeSendSpan) {\n      const processedSpans = [];\n      for (const span of event.spans) {\n        const processedSpan = beforeSendSpan(span);\n        if (processedSpan) {\n          processedSpans.push(processedSpan);\n        } else {\n          client.recordDroppedEvent('before_send', 'span');\n        }\n      }\n      event.spans = processedSpans;\n    }\n\n    if (beforeSendTransaction) {\n      return beforeSendTransaction(event, hint);\n    }\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { logger, consoleSandbox } from '@sentry/utils';\nimport { getCurrentScope } from './currentScopes.js';\nimport { DEBUG_BUILD } from './debug-build.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  client.init();\n  return client;\n}\n\n/**\n * Make the given client the current client.\n */\nfunction setCurrentClient(client) {\n  getCurrentScope().setClient(client);\n}\n\nexport { initAndBind, setCurrentClient };\n//# sourceMappingURL=sdk.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","/**\n * Checks whether given url points to Sentry server\n *\n * @param url url to verify\n */\nfunction isSentryRequestUrl(url, client) {\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nexport { isSentryRequestUrl };\n//# sourceMappingURL=isSentryRequestUrl.js.map\n","import { SDK_VERSION } from '@sentry/utils';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\nexport { applySdkMetadata };\n//# sourceMappingURL=sdkMetadata.js.map\n","import { dateTimestampInSeconds, consoleSandbox } from '@sentry/utils';\nimport { getClient, getIsolationScope } from './currentScopes.js';\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nfunction addBreadcrumb(breadcrumb, hint) {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = dateTimestampInSeconds();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n\nexport { addBreadcrumb };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../currentScopes.js';\nimport { defineIntegration } from '../integration.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\nexport { functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { defineIntegration } from '../integration.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  \"undefined is not an object (evaluating 'a.L')\", // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isUselessError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${getEventDescription(\n          event,\n        )}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event) {\n  if (event.type) {\n    // event is not an error\n    return false;\n  }\n\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception || !event.exception.values || event.exception.values.length === 0) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n\nexport { inboundFiltersIntegration };\n//# sourceMappingURL=inboundfilters.js.map\n","import { logger, getFramesFromEvent } from '@sentry/utils';\nimport { defineIntegration } from '../integration.js';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) ;\n\n/**\n * Deduplication filter.\n */\nconst dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/** only exported for tests. */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = getFramesFromEvent(currentEvent);\n  let previousFrames = getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameA = previousFrames[i];\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nexport { _shouldDropEvent, dedupeIntegration };\n//# sourceMappingURL=dedupe.js.map\n","import { parseUrl, generateSentryTraceHeader, dynamicSamplingContextToSentryBaggageHeader, isInstanceOf, BAGGAGE_HEADER_NAME } from '@sentry/utils';\nimport { getCurrentScope, getClient, getIsolationScope } from './currentScopes.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP } from './semanticAttributes.js';\nimport './tracing/errors.js';\nimport './debug-build.js';\nimport { hasTracingEnabled } from './utils/hasTracingEnabled.js';\nimport { getActiveSpan, spanToTraceHeader } from './utils/spanUtils.js';\nimport { SentryNonRecordingSpan } from './tracing/sentryNonRecordingSpan.js';\nimport { setHttpStatus, SPAN_STATUS_ERROR } from './tracing/spanstatus.js';\nimport { startInactiveSpan } from './tracing/trace.js';\nimport { getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\n\n/**\n * Create and track fetch request spans for usage in combination with `addFetchInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction instrumentFetchRequest(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n  spanOrigin = 'auto.http.browser',\n) {\n  if (!handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = hasTracingEnabled() && shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${method} ${url}`,\n          attributes: {\n            url,\n            type: 'fetch',\n            'http.method': method,\n            'http.url': fullUrl,\n            'server.address': host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  handlerData.fetchData.__span = span.spanContext().spanId;\n  spans[span.spanContext().spanId] = span;\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    options.headers = addTracingHeadersToFetchRequest(\n      request,\n      client,\n      scope,\n      options,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasTracingEnabled() && hasParent ? span : undefined,\n    );\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nfunction addTracingHeadersToFetchRequest(\n  request, // unknown is actually type Request but we can't export DOM types from this package,\n  client,\n  scope,\n  options\n\n,\n  span,\n) {\n  const isolationScope = getIsolationScope();\n\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n    dsc || (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client)),\n  );\n\n  const headers =\n    options.headers ||\n    (typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request ).headers : undefined);\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nfunction getFullURL(url) {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction endSpan(span, handlerData) {\n  if (handlerData.response) {\n    setHttpStatus(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus({ code: SPAN_STATUS_ERROR, message: 'internal_error' });\n  }\n  span.end();\n}\n\nexport { addTracingHeadersToFetchRequest, instrumentFetchRequest };\n//# sourceMappingURL=fetch.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, addExceptionTypeValue, addExceptionMechanism } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { getClient } from '@sentry/core';\nimport { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, isParameterizedString, normalizeToSize, extractExceptionKeysForMessage } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: normalizeToSize(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } ,\n      ],\n    },\n    extra,\n  } ;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex) {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex) {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser,\n  message,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport { eventFromException, eventFromMessage, eventFromUnknownInput, exceptionFromError };\n//# sourceMappingURL=eventbuilder.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { BaseClient, applySdkMetadata } from '@sentry/core';\nimport { getSDKSource, logger, createClientReportEnvelope, dsnToString } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options,\n    };\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    if (opts.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   *\n   * @deprecated Use `captureFeedback` instead.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","const getRating = (value, thresholds) => {\n  if (value > thresholds[1]) {\n    return 'poor';\n  }\n  if (value > thresholds[0]) {\n    return 'needs-improvement';\n  }\n  return 'good';\n};\n\nconst bindReporter = (\n  callback,\n  metric,\n  thresholds,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          metric.rating = getRating(metric.value, thresholds);\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ\n\n;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getNavigationEntry = () => {\n  return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n};\n\nexport { getNavigationEntry };\n//# sourceMappingURL=getNavigationEntry.js.map\n","import { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getActivationStart = () => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\nexport { getActivationStart };\n//# sourceMappingURL=getActivationStart.js.map\n","import { WINDOW } from '../../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst initMetric = (name, value) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else if (WINDOW.document && WINDOW.document.wasDiscarded) {\n      navigationType = 'restore';\n    } else if (navEntry.type) {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  // Use `entries` type specific for the metric.\n  const entries = [];\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good' , // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n    delta: 0,\n    entries,\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        // Delay by a microtask to workaround a bug in Safari where the\n        // callback is invoked immediately, rather than in a separate task.\n        // See: https://github.com/GoogleChrome/web-vitals/issues/277\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        Promise.resolve().then(() => {\n          callback(list.getEntries() );\n        });\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst onHidden = (cb) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || (WINDOW.document && WINDOW.document.visibilityState === 'hidden')) {\n      cb(event);\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst runOnce = (cb) => {\n  let called = false;\n  return (arg) => {\n    if (!called) {\n      cb(arg);\n      called = true;\n    }\n  };\n};\n\nexport { runOnce };\n//# sourceMappingURL=runOnce.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden when this code runs, assume it was always\n  // hidden and the page was loaded in the background, with the one exception\n  // that visibility state is always 'hidden' during prerendering, so we have\n  // to ignore that case until prerendering finishes (see: `prerenderingchange`\n  // event logic below).\n  firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst onVisibilityUpdate = (event) => {\n  // If the document is 'hidden' and no previous hidden timestamp has been\n  // set, update it based on the current event data.\n  if (WINDOW.document.visibilityState === 'hidden' && firstHiddenTime > -1) {\n    // If the event is a 'visibilitychange' event, it means the page was\n    // visible prior to this change, so the event timestamp is the first\n    // hidden time.\n    // However, if the event is not a 'visibilitychange' event, then it must\n    // be a 'prerenderingchange' event, and the fact that the document is\n    // still 'hidden' from the above check means the tab was activated\n    // in a background state and so has always been hidden.\n    firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n\n    // Remove all listeners now that a `firstHiddenTime` value has been set.\n    removeEventListener('visibilitychange', onVisibilityUpdate, true);\n    removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n  }\n};\n\nconst addChangeListeners = () => {\n  addEventListener('visibilitychange', onVisibilityUpdate, true);\n  // IMPORTANT: when a page is prerendering, its `visibilityState` is\n  // 'hidden', so in order to account for cases where this module checks for\n  // visibility during prerendering, an additional check after prerendering\n  // completes is also required.\n  addEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst getVisibilityWatcher = () => {\n  if (WINDOW.document && firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    addChangeListeners();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { WINDOW } from '../../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst whenActivated = (callback) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => callback(), true);\n  } else {\n    callback();\n  }\n};\n\nexport { whenActivated };\n//# sourceMappingURL=whenActivated.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FCP. See https://web.dev/articles/fcp#what_is_a_good_fcp_score */\nconst FCPThresholds = [1800, 3000];\n\n/**\n * Calculates the [FCP](https://web.dev/articles/fcp) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `paint` performance entry used to determine the value. The reported\n * value is a `DOMHighResTimeStamp`.\n */\nconst onFCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(entry => {\n        if (entry.name === 'first-contentful-paint') {\n          po.disconnect();\n\n          // Only report if the page wasn't hidden prior to the first paint.\n          if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n            // The activationStart reference is used because FCP should be\n            // relative to page activation rather than navigation start if the\n            // page was prerendered. But in cases where `activationStart` occurs\n            // after the FCP, this time should be clamped at 0.\n            metric.value = Math.max(entry.startTime - getActivationStart(), 0);\n            metric.entries.push(entry);\n            report(true);\n          }\n        }\n      });\n    };\n\n    const po = observe('paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, FCPThresholds, opts.reportAllChanges);\n    }\n  });\n};\n\nexport { FCPThresholds, onFCP };\n//# sourceMappingURL=onFCP.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { onFCP } from './onFCP.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\nconst CLSThresholds = [0.1, 0.25];\n\n/**\n * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport, opts = {}) => {\n  // Start monitoring FCP so we can only report CLS if FCP is also reported.\n  // Note: this is done to match the current behavior of CrUX.\n  onFCP(\n    runOnce(() => {\n      const metric = initMetric('CLS', 0);\n      let report;\n\n      let sessionValue = 0;\n      let sessionEntries = [];\n\n      const handleEntries = (entries) => {\n        entries.forEach(entry => {\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            const firstSessionEntry = sessionEntries[0];\n            const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n            // If the entry occurred less than 1 second after the previous entry\n            // and less than 5 seconds after the first entry in the session,\n            // include the entry in the current session. Otherwise, start a new\n            // session.\n            if (\n              sessionValue &&\n              firstSessionEntry &&\n              lastSessionEntry &&\n              entry.startTime - lastSessionEntry.startTime < 1000 &&\n              entry.startTime - firstSessionEntry.startTime < 5000\n            ) {\n              sessionValue += entry.value;\n              sessionEntries.push(entry);\n            } else {\n              sessionValue = entry.value;\n              sessionEntries = [entry];\n            }\n          }\n        });\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          report();\n        }\n      };\n\n      const po = observe('layout-shift', handleEntries);\n      if (po) {\n        report = bindReporter(onReport, metric, CLSThresholds, opts.reportAllChanges);\n\n        onHidden(() => {\n          handleEntries(po.takeRecords() );\n          report(true);\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        setTimeout(report, 0);\n      }\n    }),\n  );\n};\n\nexport { CLSThresholds, onCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nconst FIDThresholds = [100, 300];\n\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('FID');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntry = (entry) => {\n      // Only report if the page wasn't hidden prior to the first input.\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.processingStart - entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    };\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(handleEntry);\n    };\n\n    const po = observe('first-input', handleEntries);\n    report = bindReporter(onReport, metric, FIDThresholds, opts.reportAllChanges);\n\n    if (po) {\n      onHidden(\n        runOnce(() => {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n        }),\n      );\n    }\n  });\n};\n\nexport { FIDThresholds, onFID };\n//# sourceMappingURL=getFID.js.map\n","import { observe } from '../observe.js';\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries) => {\n  (entries ).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nconst getInteractionCount = () => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nconst initInteractionCountPolyfill = () => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } );\n};\n\nexport { getInteractionCount, initInteractionCountPolyfill };\n//# sourceMappingURL=interactionCountPolyfill.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { initInteractionCountPolyfill, getInteractionCount } from './lib/polyfills/interactionCountPolyfill.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for INP. See https://web.dev/articles/inp#what_is_a_good_inp_score */\nconst INPThresholds = [200, 500];\n\n// Used to store the interaction count after a bfcache restore, since p98\n// interaction latencies should only consider the current navigation.\nconst prevInteractionCount = 0;\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = () => {\n  return getInteractionCount() - prevInteractionCount;\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry) => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    (minLongestInteraction && entry.duration > minLongestInteraction.latency)\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = () => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/articles/inp) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/articles/inp#what_is_a_good_inp_score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onINP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    // TODO(philipwalton): remove once the polyfill is no longer needed.\n    initInteractionCountPolyfill();\n\n    const metric = initMetric('INP');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntries = (entries) => {\n      entries.forEach(entry => {\n        if (entry.interactionId) {\n          processEntry(entry);\n        }\n\n        // Entries of type `first-input` don't currently have an `interactionId`,\n        // so to consider them in INP we have to first check that an existing\n        // entry doesn't match the `duration` and `startTime`.\n        // Note that this logic assumes that `event` entries are dispatched\n        // before `first-input` entries. This is true in Chrome (the only browser\n        // that currently supports INP).\n        // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n        if (entry.entryType === 'first-input') {\n          const noMatchingEntry = !longestInteractionList.some(interaction => {\n            return interaction.entries.some(prevEntry => {\n              return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n            });\n          });\n          if (noMatchingEntry) {\n            processEntry(entry);\n          }\n        }\n      });\n\n      const inp = estimateP98LongestInteraction();\n\n      if (inp && inp.latency !== metric.value) {\n        metric.value = inp.latency;\n        metric.entries = inp.entries;\n        report();\n      }\n    };\n\n    const po = observe('event', handleEntries, {\n      // Event Timing entries have their durations rounded to the nearest 8ms,\n      // so a duration of 40ms would be any event that spans 2.5 or more frames\n      // at 60Hz. This threshold is chosen to strike a balance between usefulness\n      // and performance. Running this callback for any interaction that spans\n      // just one or two frames is likely not worth the insight that could be\n      // gained.\n      durationThreshold: opts.durationThreshold != null ? opts.durationThreshold : 40,\n    } );\n\n    report = bindReporter(onReport, metric, INPThresholds, opts.reportAllChanges);\n\n    if (po) {\n      // If browser supports interactionId (and so supports INP), also\n      // observe entries of type `first-input`. This is useful in cases\n      // where the first interaction is less than the `durationThreshold`.\n      if ('PerformanceEventTiming' in WINDOW && 'interactionId' in PerformanceEventTiming.prototype) {\n        po.observe({ type: 'first-input', buffered: true });\n      }\n\n      onHidden(() => {\n        handleEntries(po.takeRecords() );\n\n        // If the interaction count shows that there were interactions but\n        // none were captured by the PerformanceObserver, report a latency of 0.\n        if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n          metric.value = 0;\n          metric.entries = [];\n        }\n\n        report(true);\n      });\n    }\n  });\n};\n\nexport { INPThresholds, onINP };\n//# sourceMappingURL=getINP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\nimport { runOnce } from './lib/runOnce.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for LCP. See https://web.dev/articles/lcp#what_is_a_good_lcp_score */\nconst LCPThresholds = [2500, 4000];\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/articles/lcp) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called any time a new `largest-contentful-paint`\n * performance entry is dispatched, or once the final value of the metric has\n * been determined.\n */\nconst onLCP = (onReport, opts = {}) => {\n  whenActivated(() => {\n    const visibilityWatcher = getVisibilityWatcher();\n    const metric = initMetric('LCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      const lastEntry = entries[entries.length - 1] ;\n      if (lastEntry) {\n        // Only report if the page wasn't hidden prior to LCP.\n        if (lastEntry.startTime < visibilityWatcher.firstHiddenTime) {\n          // The startTime attribute returns the value of the renderTime if it is\n          // not 0, and the value of the loadTime otherwise. The activationStart\n          // reference is used because LCP should be relative to page activation\n          // rather than navigation start if the page was prerendered. But in cases\n          // where `activationStart` occurs after the LCP, this time should be\n          // clamped at 0.\n          metric.value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n          metric.entries = [lastEntry];\n          report();\n        }\n      }\n    };\n\n    const po = observe('largest-contentful-paint', handleEntries);\n\n    if (po) {\n      report = bindReporter(onReport, metric, LCPThresholds, opts.reportAllChanges);\n\n      const stopListening = runOnce(() => {\n        if (!reportedMetricIDs[metric.id]) {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n          reportedMetricIDs[metric.id] = true;\n          report(true);\n        }\n      });\n\n      // Stop listening after input. Note: while scrolling is an input that\n      // stops LCP observation, it's unreliable since it can be programmatically\n      // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n      ['keydown', 'click'].forEach(type => {\n        if (WINDOW.document) {\n          // Wrap in a setTimeout so the callback is run in a separate task\n          // to avoid extending the keyboard/click handler to reduce INP impact\n          // https://github.com/GoogleChrome/web-vitals/issues/383\n          addEventListener(type, () => setTimeout(stopListening, 0), true);\n        }\n      });\n\n      onHidden(stopListening);\n    }\n  });\n};\n\nexport { LCPThresholds, onLCP };\n//# sourceMappingURL=getLCP.js.map\n","import { WINDOW } from '../../types.js';\nimport { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getNavigationEntry } from './lib/getNavigationEntry.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { whenActivated } from './lib/whenActivated.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\nconst TTFBThresholds = [800, 1800];\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback) => {\n  if (WINDOW.document && WINDOW.document.prerendering) {\n    whenActivated(() => whenReady(callback));\n  } else if (WINDOW.document && WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nconst onTTFB = (onReport, opts = {}) => {\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = getNavigationEntry();\n\n    if (navEntry) {\n      const responseStart = navEntry.responseStart;\n\n      // In some cases no value is reported by the browser (for\n      // privacy/security reasons), and in other cases (bugs) the value is\n      // negative or is larger than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      // https://github.com/GoogleChrome/web-vitals/issues/275\n      if (responseStart <= 0 || responseStart > performance.now()) return;\n\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(responseStart - getActivationStart(), 0);\n\n      metric.entries = [navEntry];\n      report(true);\n    }\n  });\n};\n\nexport { TTFBThresholds, onTTFB };\n//# sourceMappingURL=onTTFB.js.map\n","import { logger, getFunctionName } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { onCLS } from './web-vitals/getCLS.js';\nimport { onFID } from './web-vitals/getFID.js';\nimport { onINP } from './web-vitals/getINP.js';\nimport { onLCP } from './web-vitals/getLCP.js';\nimport { observe } from './web-vitals/lib/observe.js';\nimport { onTTFB } from './web-vitals/onTTFB.js';\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\nlet _previousTtfb;\nlet _previousInp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nfunction addClsInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nfunction addLcpInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nfunction addTtfbInstrumentationHandler(callback) {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addInpInstrumentationHandler(\n  callback,\n) {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    // We want the callback to be called whenever the CLS value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid() {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  return onLCP(\n    metric => {\n      triggerHandlers('lcp', {\n        metric,\n      });\n      _previousLcp = metric;\n    },\n    // We want the callback to be called whenever the LCP value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentTtfb() {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp() {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n  stopOnCallback = false,\n) {\n  addHandler(type, callback);\n\n  let stopListening;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type,\n  callback,\n  stopListening,\n) {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n/**\n * Check if a PerformanceEntry is a PerformanceEventTiming by checking for the `duration` property.\n */\nfunction isPerformanceEventTiming(entry) {\n  return 'duration' in entry;\n}\n\nexport { addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, addLcpInstrumentationHandler, addPerformanceInstrumentationHandler, addTtfbInstrumentationHandler, isPerformanceEventTiming };\n//# sourceMappingURL=instrument.js.map\n","import { spanToJSON, withActiveSpan, startInactiveSpan } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction startAndEndSpan(\n  parentSpan,\n  startTimeInSeconds,\n  endTime,\n  { ...ctx },\n) {\n  const parentStartTime = spanToJSON(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan ).updateStartTime === 'function') {\n      (parentSpan ).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return withActiveSpan(parentSpan, () => {\n    const span = startInactiveSpan({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/** Get the browser performance API. */\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nexport { getBrowserPerformanceAPI, isMeasurementValue, msToSec, startAndEndSpan };\n//# sourceMappingURL=utils.js.map\n","import { spanToJSON, setMeasurement, getActiveSpan, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport { browserPerformanceTimeOrigin, logger, parseUrl, htmlTreeAsString, getComponentName } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../types.js';\nimport { addPerformanceInstrumentationHandler, addClsInstrumentationHandler, addLcpInstrumentationHandler, addFidInstrumentationHandler, addTtfbInstrumentationHandler } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec, startAndEndSpan, isMeasurementValue } from './utils.js';\nimport { getNavigationEntry } from './web-vitals/lib/getNavigationEntry.js';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher.js';\n\n/* eslint-disable max-lines */\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return () => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      if (!getActiveSpan()) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      const span = startInactiveSpan({\n        name: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTime,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n      if (span) {\n        span.end(startTime + duration);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      if (!getActiveSpan()) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const spanOptions = {\n          name: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTime: startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n          },\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          spanOptions.attributes['ui.component_name'] = componentName;\n        }\n\n        const span = startInactiveSpan(spanOptions);\n        if (span) {\n          span.end(startTime + duration);\n        }\n      }\n    }\n  });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb() {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(span) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(span);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(span, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(span, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(span, entry, entry.name , startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(span);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      const measurement = _measurements[name];\n      if (!measurement || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the span span data, so these web vitals will need\n      // to be adjusted to be relative to span.startTimestamp.\n      const oldValue = measurement.value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      DEBUG_BUILD && logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      measurement.value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      startAndEndSpan(span, fidMark.value, fidMark.value + msToSec(_measurements['fid'].value), {\n        name: 'first input delay',\n        op: 'ui.action',\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.entries(_measurements).forEach(([measurementName, measurement]) => {\n      setMeasurement(measurementName, measurement.value, measurement.unit);\n    });\n\n    _tagMetricInfo(span);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  span,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const navEntry = getNavigationEntry();\n  const requestTime = msToSec(navEntry ? navEntry.requestStart : 0);\n  // Because performance.measure accepts arbitrary timestamps it can produce\n  // spans that happen before the browser even makes a request for the page.\n  //\n  // An example of this is the automatically generated Next.js-before-hydration\n  // spans created by the Next.js framework.\n  //\n  // To prevent this we will pin the start timestamp to the request start time\n  // This does make duration inaccruate, so if this does happen, we will add\n  // an attribute to the span\n  const measureStartTimestamp = timeOrigin + Math.max(startTime, requestTime);\n  const startTimeStamp = timeOrigin + startTime;\n  const measureEndTimestamp = startTimeStamp + duration;\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n\n  if (measureStartTimestamp !== startTimeStamp) {\n    attributes['sentry.browser.measure_happened_before_request'] = true;\n    attributes['sentry.browser.measure_start_time'] = measureStartTimestamp;\n  }\n\n  startAndEndSpan(span, measureStartTimestamp, measureEndTimestamp, {\n    name: entry.name ,\n    op: entry.entryType ,\n    attributes,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(span, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(span, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(span, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(span, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(span, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(span, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  span,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  name,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  startAndEndSpan(span, timeOrigin + msToSec(start), timeOrigin + msToSec(end), {\n    op: 'browser',\n    name: name || event,\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n    },\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(span, entry, timeOrigin) {\n  const requestStartTimestamp = timeOrigin + msToSec(entry.requestStart );\n  const responseEndTimestamp = timeOrigin + msToSec(entry.responseEnd );\n  const responseStartTimestamp = timeOrigin + msToSec(entry.responseStart );\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire span if it contained faulty spans.\n    startAndEndSpan(span, requestStartTimestamp, responseEndTimestamp, {\n      op: 'browser',\n      name: 'request',\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n\n    startAndEndSpan(span, responseStartTimestamp, responseEndTimestamp, {\n      op: 'browser',\n      name: 'response',\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n      },\n    });\n  }\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  span,\n  entry,\n  resourceUrl,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n  setResourceEntrySizeData(attributes, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(attributes, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(attributes, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    attributes['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    attributes['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    attributes['server.address'] = parsedUrl.host;\n  }\n\n  attributes['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  startAndEndSpan(span, startTimestamp, endTimestamp, {\n    name: resourceUrl.replace(WINDOW.location.origin, ''),\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    attributes,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(span) {\n  const navigator = WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      span.setAttribute('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      span.setAttribute('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    span.setAttribute('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    span.setAttribute('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to span to allow debugging */\nfunction _tagMetricInfo(span) {\n  if (_lcpEntry) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      span.setAttribute('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      span.setAttribute('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      span.setAttribute('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    span.setAttribute('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      span.setAttribute(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  attributes,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    attributes[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements) {\n  const navEntry = getNavigationEntry();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingInteractions, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=browserMetrics.js.map\n","import { addHandler, maybeInstrument, triggerHandlers, fill, addNonEnumerableProperty, uuid4 } from '@sentry/utils';\nimport { WINDOW } from '../types.js';\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID;\nlet lastCapturedEventType;\nlet lastCapturedEventTargetId;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addClickKeypressInstrumentationHandler(handler) {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType, target) {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler,\n  globalListener = false,\n) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event) {\n  try {\n    return event.target ;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n\nexport { addClickKeypressInstrumentationHandler, instrumentDOM };\n//# sourceMappingURL=dom.js.map\n","import { addHandler, maybeInstrument, supportsHistory, triggerHandlers, fill } from '@sentry/utils';\nimport { WINDOW } from '../types.js';\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nexport { addHistoryInstrumentationHandler };\n//# sourceMappingURL=history.js.map\n","import { isNativeFunction, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW } from './types.js';\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\nconst cachedImplementations = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nfunction getNativeImplementation(\n  name,\n) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = WINDOW[name] ;\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFunction(impl)) {\n    return (cachedImplementations[name] = impl.bind(WINDOW) );\n  }\n\n  const document = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = contentWindow[name] ;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      DEBUG_BUILD && logger.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(WINDOW) );\n}\n\n/** Clear a cached implementation. */\nfunction clearCachedImplementation(name) {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction fetch(...rest) {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nfunction setTimeout(...rest) {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n\nexport { clearCachedImplementation, fetch, getNativeImplementation, setTimeout };\n//# sourceMappingURL=getNativeImplementation.js.map\n","import { addHandler, maybeInstrument, fill, timestampInSeconds, isString, triggerHandlers } from '@sentry/utils';\nimport { WINDOW } from '../types.js';\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const startTimestamp = timestampInSeconds() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            endTimestamp: timestampInSeconds() * 1000,\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData = {\n        startTimestamp: timestampInSeconds() * 1000,\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url) {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler, instrumentXHR };\n//# sourceMappingURL=xhr.js.map\n","import { getClient, getCurrentScope, getActiveSpan, getRootSpan, spanToJSON, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE } from '@sentry/core';\nimport { browserPerformanceTimeOrigin, htmlTreeAsString, dropUndefinedKeys } from '@sentry/utils';\nimport { addInpInstrumentationHandler, addPerformanceInstrumentationHandler, isPerformanceEventTiming } from './instrument.js';\nimport { getBrowserPerformanceAPI, msToSec } from './utils.js';\n\n// We only care about name here\n\nconst LAST_INTERACTIONS = [];\nconst INTERACTIONS_ROUTE_MAP = new Map();\n\n/**\n * Start tracking INP webvital events.\n */\nfunction startTrackingINP() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP();\n\n    return () => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\nconst INP_ENTRY_MAP = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP() {\n  return addInpInstrumentationHandler(({ metric }) => {\n    const client = getClient();\n    if (!client || metric.value == undefined) {\n      return;\n    }\n\n    const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n\n    if (!entry) {\n      return;\n    }\n\n    const { interactionId } = entry;\n    const interactionType = INP_ENTRY_MAP[entry.name];\n\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const scope = getCurrentScope();\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan ? getRootSpan(activeSpan) : undefined;\n\n    // We first try to lookup the route name from our INTERACTIONS_ROUTE_MAP,\n    // where we cache the route per interactionId\n    const cachedRouteName = interactionId != null ? INTERACTIONS_ROUTE_MAP.get(interactionId) : undefined;\n\n    // Else, we try to use the active span.\n    // Finally, we fall back to look at the transactionName on the scope\n    const routeName =\n      cachedRouteName || (rootSpan ? spanToJSON(rootSpan).description : scope.getScopeData().transactionName);\n\n    const user = scope.getUser();\n\n    // We need to get the replay, user, and activeTransaction from the current scope\n    // so that we can associate replay id, profile id, and a user display to the span\n    const replay = client.getIntegrationByName('Replay');\n\n    const replayId = replay && replay.getReplayId();\n\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    let profileId = undefined;\n    try {\n      // @ts-expect-error skip optional chaining to save bundle size with try catch\n      profileId = scope.getScopeData().contexts.profile.profile_id;\n    } catch (e) {\n      // do nothing\n    }\n\n    const name = htmlTreeAsString(entry.target);\n    const attributes = dropUndefinedKeys({\n      release: options.release,\n      environment: options.environment,\n      transaction: routeName,\n      [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: metric.value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.inp',\n      user: userDisplay || undefined,\n      profile_id: profileId || undefined,\n      replay_id: replayId || undefined,\n    });\n\n    const span = startInactiveSpan({\n      name,\n      op: `ui.interaction.${interactionType}`,\n      attributes,\n      startTime: startTime,\n      experimental: {\n        standalone: true,\n      },\n    });\n\n    span.addEvent('inp', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value,\n    });\n\n    span.end(startTime + duration);\n  });\n}\n\n/** Register a listener to cache route information for INP interactions. */\nfunction registerInpInteractionListener(latestRoute) {\n  const handleEntries = ({ entries }) => {\n    entries.forEach(entry => {\n      if (!isPerformanceEventTiming(entry) || !latestRoute.name) {\n        return;\n      }\n\n      const interactionId = entry.interactionId;\n      if (interactionId == null) {\n        return;\n      }\n\n      // If the interaction was already recorded before, nothing more to do\n      if (INTERACTIONS_ROUTE_MAP.has(interactionId)) {\n        return;\n      }\n\n      // We keep max. 10 interactions in the list, then remove the oldest one & clean up\n      if (LAST_INTERACTIONS.length > 10) {\n        const last = LAST_INTERACTIONS.shift() ;\n        INTERACTIONS_ROUTE_MAP.delete(last);\n      }\n\n      // We add the interaction to the list of recorded interactions\n      // and store the route information for this interaction\n      // (we clone the object because it is mutated when it changes)\n      LAST_INTERACTIONS.push(interactionId);\n      INTERACTIONS_ROUTE_MAP.set(interactionId, latestRoute.name);\n    });\n  };\n\n  addPerformanceInstrumentationHandler('event', handleEntries);\n  addPerformanceInstrumentationHandler('first-input', handleEntries);\n}\n\nexport { registerInpInteractionListener, startTrackingINP };\n//# sourceMappingURL=inp.js.map\n","import { getNativeImplementation, clearCachedImplementation } from '@sentry-internal/browser-utils';\nimport { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeImplementation('fetch'),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      clearCachedImplementation('fetch');\n      return rejectedSyncPromise('No fetch implementation available');\n    }\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedImplementation('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createStackParser, UNKNOWN_FUNCTION } from '@sentry/utils';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func === '<anonymous>' ? UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line) ;\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line) ;\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]) ;\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line) ;\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]) ;\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line) ;\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line) ;\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line) ;\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? (func.split('@')[0] ) : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { addClickKeypressInstrumentationHandler, addXhrInstrumentationHandler, addHistoryInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { defineIntegration, getClient, addBreadcrumb } from '@sentry/core';\nimport { addConsoleInstrumentationHandler, addFetchInstrumentationHandler, getEventDescription, logger, htmlTreeAsString, getComponentName, severityLevelFromString, safeJoin, parseUrl } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) ;\n\nconst breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client) {\n  return function addSentryBreadcrumb(event) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client,\n  dom,\n) {\n  return function _innerDomBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client) {\n  return function _consoleBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client) {\n  return function _xhrBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client) {\n  return function _fetchBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data = handlerData.fetchData;\n      const hint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response ;\n      const data = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client) {\n  return function _historyBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { breadcrumbsIntegration };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\nconst _browserApiErrorsIntegration = ((options = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) ;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nconst browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original,)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { browserApiErrorsIntegration };\n//# sourceMappingURL=browserapierrors.js.map\n","import { defineIntegration, getClient, captureEvent } from '@sentry/core';\nimport { addGlobalErrorInstrumentationHandler, addGlobalUnhandledRejectionInstrumentationHandler, isPrimitive, isString, getLocationHref, UNKNOWN_FUNCTION, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) ;\n\nconst globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client) {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client) {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e );\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error) {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error )) {\n      return (error ).reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error ) && 'reason' in (error ).detail) {\n      return (error ).detail.reason;\n    }\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions() {\n  const client = getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n\nexport { globalHandlersIntegration };\n//# sourceMappingURL=globalhandlers.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nconst httpContextIntegration = defineIntegration(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n});\n\nexport { httpContextIntegration };\n//# sourceMappingURL=httpcontext.js.map\n","import { defineIntegration } from '@sentry/core';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\n/**\n * Aggregrate linked errors in an event.\n */\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\nexport { linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n","import { inboundFiltersIntegration, functionToStringIntegration, dedupeIntegration, getIntegrationsToSetup, initAndBind, getCurrentScope, lastEventId, getReportDialogEndpoint, startSession, captureSession, getClient } from '@sentry/core';\nimport { consoleSandbox, supportsFetch, logger, stackParserFromStackParserOptions } from '@sentry/utils';\nimport { addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\nimport { BrowserClient } from './client.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW } from './helpers.js';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nimport { browserApiErrorsIntegration } from './integrations/browserapierrors.js';\nimport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nimport { httpContextIntegration } from './integrations/httpcontext.js';\nimport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\n\n/** Get the default integrations for the browser SDK. */\nfunction getDefaultIntegrations(_options) {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  return [\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    browserApiErrorsIntegration(),\n    breadcrumbsIntegration(),\n    globalHandlersIntegration(),\n    linkedErrorsIntegration(),\n    dedupeIntegration(),\n    httpContextIntegration(),\n  ];\n}\n\nfunction applyDefaultOptions(optionsArg = {}) {\n  const defaultOptions = {\n    defaultIntegrations: getDefaultIntegrations(),\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id // This supports the variable that sentry-webpack-plugin injects\n          ? WINDOW.SENTRY_RELEASE.id\n          : undefined,\n    autoSessionTracking: true,\n    sendClientReports: true,\n  };\n\n  return { ...defaultOptions, ...optionsArg };\n}\n\nfunction shouldShowBrowserExtensionError() {\n  const windowWithMaybeExtension = WINDOW ;\n\n  const extensionKey = windowWithMaybeExtension.chrome ? 'chrome' : 'browser';\n  const extensionObject = windowWithMaybeExtension[extensionKey];\n\n  const runtimeId = extensionObject && extensionObject.runtime && extensionObject.runtime.id;\n  const href = (WINDOW.location && WINDOW.location.href) || '';\n\n  const extensionProtocols = ['chrome-extension:', 'moz-extension:', 'ms-browser-extension:'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    !!runtimeId && WINDOW === WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}//`));\n\n  // Running the SDK in NW.js, which appears like a browser extension but isn't, is also fine\n  // see: https://github.com/getsentry/sentry-javascript/issues/12668\n  const isNWjs = typeof windowWithMaybeExtension.nw !== 'undefined';\n\n  return !!runtimeId && !isDedicatedExtensionPage && !isNWjs;\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(browserOptions = {}) {\n  const options = applyDefaultOptions(browserOptions);\n\n  if (shouldShowBrowserExtensionError()) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n      );\n    });\n    return;\n  }\n\n  if (DEBUG_BUILD) {\n    if (!supportsFetch()) {\n      logger.warn(\n        'No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill.',\n      );\n    }\n  }\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || makeFetchTransport,\n  };\n\n  const client = initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n\n  return client;\n}\n\n/**\n * All properties the report dialog supports\n */\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}) {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const scope = getCurrentScope();\n  const client = scope.getClient();\n  const dsn = client && client.getDsn();\n\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    const eventId = lastEventId();\n    if (eventId) {\n      options.eventId = eventId;\n    }\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event) => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n *\n * @deprecated Use `captureFeedback` instead.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getClient();\n  if (client) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, forceLoad, getDefaultIntegrations, init, onLoad, showReportDialog };\n//# sourceMappingURL=sdk.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport { addBreadcrumb, getClient, isSentryRequestUrl, addEventProcessor, prepareEvent, getIsolationScope, getCurrentScope, setContext, captureException, getActiveSpan, getRootSpan, spanToJSON, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, parseSampleRate } from '@sentry/core';\nimport { GLOBAL_OBJ, normalize, fill, htmlTreeAsString, browserPerformanceTimeOrigin, logger, uuid4, getLocationHref, dropUndefinedKeys, stringMatchesSomePattern, createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader, resolvedSyncPromise, updateRateLimits, isRateLimited, isBrowser, consoleSandbox } from '@sentry/utils';\nimport { setTimeout as setTimeout$2, addPerformanceInstrumentationHandler, addLcpInstrumentationHandler, addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, SENTRY_XHR_DATA_KEY, addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry-internal/browser-utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\n/** The max. length of a replay. */\nconst MAX_REPLAY_DURATION = 3600000; // 60 minutes in ms;\n\nfunction _nullishCoalesce$1(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }function _optionalChain$5(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement$1(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = _optionalChain$5([n, 'optionalAccess', _ => _.host]);\n    return Boolean(_optionalChain$5([host, 'optionalAccess', _2 => _2.shadowRoot]) === n);\n}\nfunction isNativeShadowDom(shadowRoot) {\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n    if (cssText.includes(' background-clip: text;') &&\n        !cssText.includes(' -webkit-background-clip: text;')) {\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\n    }\n    return cssText;\n}\nfunction escapeImportStatement(rule) {\n    const { cssText } = rule;\n    if (cssText.split('\"').length < 3)\n        return cssText;\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\n    if (rule.layerName === '') {\n        statement.push(`layer`);\n    }\n    else if (rule.layerName) {\n        statement.push(`layer(${rule.layerName})`);\n    }\n    if (rule.supportsText) {\n        statement.push(`supports(${rule.supportsText})`);\n    }\n    if (rule.media.length) {\n        statement.push(rule.media.mediaText);\n    }\n    return statement.join(' ') + ';';\n}\nfunction stringifyStylesheet(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\n            : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction stringifyRule(rule) {\n    let importStringified;\n    if (isCSSImportRule(rule)) {\n        try {\n            importStringified =\n                stringifyStylesheet(rule.styleSheet) ||\n                    escapeImportStatement(rule);\n        }\n        catch (error) {\n        }\n    }\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\n        return fixSafariColons(rule.cssText);\n    }\n    return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n    return cssStringified.replace(regex, '$1\\\\$2');\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction isCSSStyleRule(rule) {\n    return 'selectorText' in rule;\n}\nclass Mirror {\n    constructor() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n    getId(n) {\n        if (!n)\n            return -1;\n        const id = _optionalChain$5([this, 'access', _3 => _3.getMeta, 'call', _4 => _4(n), 'optionalAccess', _5 => _5.id]);\n        return _nullishCoalesce$1(id, () => ( -1));\n    }\n    getNode(id) {\n        return this.idNodeMap.get(id) || null;\n    }\n    getIds() {\n        return Array.from(this.idNodeMap.keys());\n    }\n    getMeta(n) {\n        return this.nodeMetaMap.get(n) || null;\n    }\n    removeNodeFromMap(n) {\n        const id = this.getId(n);\n        this.idNodeMap.delete(id);\n        if (n.childNodes) {\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n        }\n    }\n    has(id) {\n        return this.idNodeMap.has(id);\n    }\n    hasNode(node) {\n        return this.nodeMetaMap.has(node);\n    }\n    add(n, meta) {\n        const id = meta.id;\n        this.idNodeMap.set(id, n);\n        this.nodeMetaMap.set(n, meta);\n    }\n    replace(id, n) {\n        const oldNode = this.getNode(id);\n        if (oldNode) {\n            const meta = this.nodeMetaMap.get(oldNode);\n            if (meta)\n                this.nodeMetaMap.set(n, meta);\n        }\n        this.idNodeMap.set(id, n);\n    }\n    reset() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n}\nfunction createMirror() {\n    return new Mirror();\n}\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\n    if (tagName === 'OPTION') {\n        tagName = 'SELECT';\n    }\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\n        (type && maskInputOptions[type]) ||\n        type === 'password' ||\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\n}\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\n    let text = value || '';\n    if (!isMasked) {\n        return text;\n    }\n    if (maskInputFn) {\n        text = maskInputFn(text, element);\n    }\n    return '*'.repeat(text.length);\n}\nfunction toLowerCase(str) {\n    return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ?\n                toLowerCase(type)\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = toLowerCase(element.tagName);\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        const match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    const output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                const c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n    if (!value) {\n        return value;\n    }\n    if (name === 'src' ||\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    if (typeof maskAttributeFn === 'function') {\n        return maskAttributeFn(name, value, element);\n    }\n    return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    try {\n        if (unblockSelector && element.matches(unblockSelector)) {\n            return false;\n        }\n        if (typeof blockClass === 'string') {\n            if (element.classList.contains(blockClass)) {\n                return true;\n            }\n        }\n        else {\n            for (let eIndex = element.classList.length; eIndex--;) {\n                const className = element.classList[eIndex];\n                if (blockClass.test(className)) {\n                    return true;\n                }\n            }\n        }\n        if (blockSelector) {\n            return element.matches(blockSelector);\n        }\n    }\n    catch (e) {\n    }\n    return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n    try {\n        const el = node.nodeType === node.ELEMENT_NODE\n            ? node\n            : node.parentElement;\n        if (el === null)\n            return false;\n        if (el.tagName === 'INPUT') {\n            const autocomplete = el.getAttribute('autocomplete');\n            const disallowedAutocompleteValues = [\n                'current-password',\n                'new-password',\n                'cc-number',\n                'cc-exp',\n                'cc-exp-month',\n                'cc-exp-year',\n                'cc-csc',\n            ];\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\n                return true;\n            }\n        }\n        let maskDistance = -1;\n        let unmaskDistance = -1;\n        if (maskAllText) {\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\n            if (unmaskDistance < 0) {\n                return true;\n            }\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\n        }\n        else {\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\n            if (maskDistance < 0) {\n                return false;\n            }\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\n        }\n        return maskDistance >= 0\n            ? unmaskDistance >= 0\n                ? maskDistance <= unmaskDistance\n                : true\n            : unmaskDistance >= 0\n                ? false\n                : !!maskAllText;\n    }\n    catch (e) {\n    }\n    return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return iframeEl.addEventListener('load', listener);\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n    let fired = false;\n    let styleSheetLoaded;\n    try {\n        styleSheetLoaded = link.sheet;\n    }\n    catch (error) {\n        return;\n    }\n    if (styleSheetLoaded)\n        return;\n    const timer = setTimeout(() => {\n        if (!fired) {\n            listener();\n            fired = true;\n        }\n    }, styleSheetLoadTimeout);\n    link.addEventListener('load', () => {\n        clearTimeout(timer);\n        fired = true;\n        listener();\n    });\n}\nfunction serializeNode(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\n    const rootId = getRootId(doc, mirror);\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            return serializeElementNode(n, {\n                doc,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                inlineStylesheet,\n                maskAttributeFn,\n                maskInputOptions,\n                maskInputFn,\n                dataURLOptions,\n                inlineImages,\n                recordCanvas,\n                keepIframeSrcFn,\n                newlyAddedElement,\n                rootId,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n            });\n        case n.TEXT_NODE:\n            return serializeTextNode(n, {\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskTextFn,\n                maskInputOptions,\n                maskInputFn,\n                rootId,\n            });\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction getRootId(doc, mirror) {\n    if (!mirror.hasNode(doc))\n        return undefined;\n    const docId = mirror.getId(doc);\n    return docId === 1 ? undefined : docId;\n}\nfunction serializeTextNode(n, options) {\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\n    const parentTagName = n.parentNode && n.parentNode.tagName;\n    let textContent = n.textContent;\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\n    if (isStyle && textContent) {\n        try {\n            if (n.nextSibling || n.previousSibling) {\n            }\n            else if (_optionalChain$5([n, 'access', _6 => _6.parentNode, 'access', _7 => _7.sheet, 'optionalAccess', _8 => _8.cssRules])) {\n                textContent = stringifyStylesheet(n.parentNode.sheet);\n            }\n        }\n        catch (err) {\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n        }\n        textContent = absoluteToStylesheet(textContent, getHref());\n    }\n    if (isScript) {\n        textContent = 'SCRIPT_PLACEHOLDER';\n    }\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n        textContent = maskTextFn\n            ? maskTextFn(textContent, n.parentElement)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n        textContent = maskInputFn\n            ? maskInputFn(textContent, n.parentNode)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (parentTagName === 'OPTION' && textContent) {\n        const isInputMasked = shouldMaskInput({\n            type: null,\n            tagName: parentTagName,\n            maskInputOptions,\n        });\n        textContent = maskInputValue({\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\n            element: n,\n            value: textContent,\n            maskInputFn,\n        });\n    }\n    return {\n        type: NodeType$1.Text,\n        textContent: textContent || '',\n        isStyle,\n        rootId,\n    };\n}\nfunction serializeElementNode(n, options) {\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n    const tagName = getValidTagName(n);\n    let attributes = {};\n    const len = n.attributes.length;\n    for (let i = 0; i < len; i++) {\n        const attr = n.attributes[i];\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\n        }\n    }\n    if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\n            return s.href === n.href;\n        });\n        let cssText = null;\n        if (stylesheet) {\n            cssText = stringifyStylesheet(stylesheet);\n        }\n        if (cssText) {\n            delete attributes.rel;\n            delete attributes.href;\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n        }\n    }\n    if (tagName === 'style' &&\n        n.sheet &&\n        !(n.innerText || n.textContent || '').trim().length) {\n        const cssText = stringifyStylesheet(n.sheet);\n        if (cssText) {\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\n        }\n    }\n    if (tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select' ||\n        tagName === 'option') {\n        const el = n;\n        const type = getInputType(el);\n        const value = getInputValue(el, toUpperCase(tagName), type);\n        const checked = el.checked;\n        if (type !== 'submit' && type !== 'button' && value) {\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\n                type,\n                tagName: toUpperCase(tagName),\n                maskInputOptions,\n            }));\n            attributes.value = maskInputValue({\n                isMasked: forceMask,\n                element: el,\n                value,\n                maskInputFn,\n            });\n        }\n        if (checked) {\n            attributes.checked = checked;\n        }\n    }\n    if (tagName === 'option') {\n        if (n.selected && !maskInputOptions['select']) {\n            attributes.selected = true;\n        }\n        else {\n            delete attributes.selected;\n        }\n    }\n    if (tagName === 'canvas' && recordCanvas) {\n        if (n.__context === '2d') {\n            if (!is2DCanvasBlank(n)) {\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n        }\n        else if (!('__context' in n)) {\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            const blankCanvas = document.createElement('canvas');\n            blankCanvas.width = n.width;\n            blankCanvas.height = n.height;\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            if (canvasDataURL !== blankCanvasDataURL) {\n                attributes.rr_dataURL = canvasDataURL;\n            }\n        }\n    }\n    if (tagName === 'img' && inlineImages) {\n        if (!canvasService) {\n            canvasService = doc.createElement('canvas');\n            canvasCtx = canvasService.getContext('2d');\n        }\n        const image = n;\n        const oldValue = image.crossOrigin;\n        image.crossOrigin = 'anonymous';\n        const recordInlineImage = () => {\n            image.removeEventListener('load', recordInlineImage);\n            try {\n                canvasService.width = image.naturalWidth;\n                canvasService.height = image.naturalHeight;\n                canvasCtx.drawImage(image, 0, 0);\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n            catch (err) {\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n            }\n            oldValue\n                ? (attributes.crossOrigin = oldValue)\n                : image.removeAttribute('crossorigin');\n        };\n        if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n        else\n            image.addEventListener('load', recordInlineImage);\n    }\n    if (tagName === 'audio' || tagName === 'video') {\n        attributes.rr_mediaState = n.paused\n            ? 'paused'\n            : 'played';\n        attributes.rr_mediaCurrentTime = n.currentTime;\n    }\n    if (!newlyAddedElement) {\n        if (n.scrollLeft) {\n            attributes.rr_scrollLeft = n.scrollLeft;\n        }\n        if (n.scrollTop) {\n            attributes.rr_scrollTop = n.scrollTop;\n        }\n    }\n    if (needBlock) {\n        const { width, height } = n.getBoundingClientRect();\n        attributes = {\n            class: attributes.class,\n            rr_width: `${width}px`,\n            rr_height: `${height}px`,\n        };\n    }\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n        if (!n.contentDocument) {\n            attributes.rr_src = attributes.src;\n        }\n        delete attributes.src;\n    }\n    let isCustomElement;\n    try {\n        if (customElements.get(tagName))\n            isCustomElement = true;\n    }\n    catch (e) {\n    }\n    return {\n        type: NodeType$1.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n) || undefined,\n        needBlock,\n        rootId,\n        isCustom: isCustomElement,\n    };\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        mirror,\n        blockClass,\n        blockSelector,\n        maskAllText,\n        unblockSelector,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if (mirror.hasNode(n)) {\n        id = mirror.getId(n);\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    mirror.add(n, serializedNode);\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        const shadowRoot = n.shadowRoot;\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            serializedNode.type === NodeType$1.Element &&\n            serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            maskAllText,\n            unblockSelector,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement$1(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    isNativeShadowDom(n.shadowRoot) &&\n                        (serializedChildNode.isShadow = true);\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode &&\n        isShadowRoot(n.parentNode) &&\n        isNativeShadowDom(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'link' &&\n        serializedNode.attributes.rel === 'stylesheet') {\n        onceStylesheetLoaded(n, () => {\n            if (onStylesheetLoad) {\n                const serializedLinkNode = serializeNodeWithId(n, {\n                    doc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedLinkNode) {\n                    onStylesheetLoad(n, serializedLinkNode);\n                }\n            }\n        }, stylesheetLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return serializeNodeWithId(n, {\n        doc: n,\n        mirror,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        skipChild: false,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        slimDOMOptions,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        preserveWhiteSpace,\n        onSerialize,\n        onIframeLoad,\n        iframeLoadTimeout,\n        onStylesheetLoad,\n        stylesheetLoadTimeout,\n        keepIframeSrcFn,\n        newlyAddedElement: false,\n    });\n}\n\nfunction _optionalChain$4(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (...args) {\n        const now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        const context = this;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout$1(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout$1(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout$1(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nlet nowTimestamp = Date.now;\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\n    nowTimestamp = () => new Date().getTime();\n}\nfunction getWindowScroll(win) {\n    const doc = win.document;\n    return {\n        left: doc.scrollingElement\n            ? doc.scrollingElement.scrollLeft\n            : win.pageXOffset !== undefined\n                ? win.pageXOffset\n                : _optionalChain$4([doc, 'optionalAccess', _ => _.documentElement, 'access', _2 => _2.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _3 => _3.body, 'optionalAccess', _4 => _4.parentElement, 'optionalAccess', _5 => _5.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _6 => _6.body, 'optionalAccess', _7 => _7.scrollLeft]) ||\n                    0,\n        top: doc.scrollingElement\n            ? doc.scrollingElement.scrollTop\n            : win.pageYOffset !== undefined\n                ? win.pageYOffset\n                : _optionalChain$4([doc, 'optionalAccess', _8 => _8.documentElement, 'access', _9 => _9.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _10 => _10.body, 'optionalAccess', _11 => _11.parentElement, 'optionalAccess', _12 => _12.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _13 => _13.body, 'optionalAccess', _14 => _14.scrollTop]) ||\n                    0,\n    };\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction closestElementOfNode(node) {\n    if (!node) {\n        return null;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    return el;\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = closestElementOfNode(node);\n    if (!el) {\n        return false;\n    }\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nfunction isSerialized(n, mirror) {\n    return mirror.getId(n) !== -1;\n}\nfunction isIgnored(n, mirror) {\n    return mirror.getId(n) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction legacy_isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = (...args) => {\n            let node = args[0];\n            if (!(0 in args)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isSerializedIframe(n, mirror) {\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\n}\nfunction isSerializedStylesheet(n, mirror) {\n    return Boolean(n.nodeName === 'LINK' &&\n        n.nodeType === n.ELEMENT_NODE &&\n        n.getAttribute &&\n        n.getAttribute('rel') === 'stylesheet' &&\n        mirror.getMeta(n));\n}\nfunction hasShadowRoot(n) {\n    return Boolean(_optionalChain$4([n, 'optionalAccess', _18 => _18.shadowRoot]));\n}\nclass StyleSheetMirror {\n    constructor() {\n        this.id = 1;\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n    }\n    getId(stylesheet) {\n        return _nullishCoalesce(this.styleIDMap.get(stylesheet), () => ( -1));\n    }\n    has(stylesheet) {\n        return this.styleIDMap.has(stylesheet);\n    }\n    add(stylesheet, id) {\n        if (this.has(stylesheet))\n            return this.getId(stylesheet);\n        let newId;\n        if (id === undefined) {\n            newId = this.id++;\n        }\n        else\n            newId = id;\n        this.styleIDMap.set(stylesheet, newId);\n        this.idStyleMap.set(newId, stylesheet);\n        return newId;\n    }\n    getStyle(id) {\n        return this.idStyleMap.get(id) || null;\n    }\n    reset() {\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n        this.id = 1;\n    }\n    generateId() {\n        return this.id++;\n    }\n}\nfunction getShadowHost(n) {\n    let shadowHost = null;\n    if (_optionalChain$4([n, 'access', _19 => _19.getRootNode, 'optionalCall', _20 => _20(), 'optionalAccess', _21 => _21.nodeType]) === Node.DOCUMENT_FRAGMENT_NODE &&\n        n.getRootNode().host)\n        shadowHost = n.getRootNode().host;\n    return shadowHost;\n}\nfunction getRootShadowHost(n) {\n    let rootShadowHost = n;\n    let shadowHost;\n    while ((shadowHost = getShadowHost(rootShadowHost)))\n        rootShadowHost = shadowHost;\n    return rootShadowHost;\n}\nfunction shadowHostInDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    const shadowHost = getRootShadowHost(n);\n    return doc.contains(shadowHost);\n}\nfunction inDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    return doc.contains(n) || shadowHostInDom(n);\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n        return cached;\n    }\n    const document = window.document;\n    let impl = window[name];\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow[name]) {\n                impl =\n                    contentWindow[name];\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedImplementations[name] = impl.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getImplementation('requestAnimationFrame')(...rest);\n}\nfunction setTimeout$1(...rest) {\n    return getImplementation('setTimeout')(...rest);\n}\nfunction clearTimeout$1(...rest) {\n    return getImplementation('clearTimeout')(...rest);\n}\n\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\n\nfunction _optionalChain$3(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n        this.tail = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = _optionalChain$3([current, 'optionalAccess', _ => _.next]) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        if (node.next === null) {\n            this.tail = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n            else {\n                this.tail = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n            else {\n                this.tail = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.attributeMap = new WeakMap();\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addedIds = new Set();\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                if (!n.parentNode || !inDom(n)) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(getShadowHost(n))\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                const sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    mirror: this.mirror,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    maskAllText: this.maskAllText,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    unmaskTextClass: this.unmaskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    skipChild: true,\n                    newlyAddedElement: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskInputOptions: this.maskInputOptions,\n                    maskAttributeFn: this.maskAttributeFn,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    dataURLOptions: this.dataURLOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isSerializedIframe(currentN, this.mirror)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\n                            this.stylesheetManager.trackLinkElement(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                    onStylesheetLoad: (link, childSn) => {\n                        this.stylesheetManager.attachLinkElement(link, childSn);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                    addedIds.add(sn.id);\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    let tailNode = addList.tail;\n                    while (tailNode) {\n                        const _node = tailNode;\n                        tailNode = tailNode.previous;\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (nextId === -1)\n                                continue;\n                            else if (parentId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                            else {\n                                const unhandledNode = _node.value;\n                                if (unhandledNode.parentNode &&\n                                    unhandledNode.parentNode.nodeType ===\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\n                                    const shadowHost = unhandledNode.parentNode\n                                        .host;\n                                    const parentId = this.mirror.getId(shadowHost);\n                                    if (parentId !== -1) {\n                                        node = _node;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => !addedIds.has(text.id))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => {\n                    const { attributes } = attribute;\n                    if (typeof attributes.style === 'string') {\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n                        if (diffAsStr.length < attributes.style.length) {\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\n                                attributes.style.split('var(').length) {\n                                attributes.style = attribute.styleDiff;\n                            }\n                        }\n                    }\n                    return {\n                        id: this.mirror.getId(attribute.node),\n                        attributes: attributes,\n                    };\n                })\n                    .filter((attribute) => !addedIds.has(attribute.id))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.attributeMap = new WeakMap();\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target, this.mirror)) {\n                return;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\n                        value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let attributeName = m.attributeName;\n                    let value = m.target.getAttribute(attributeName);\n                    if (attributeName === 'value') {\n                        const type = getInputType(target);\n                        const tagName = target.tagName;\n                        value = getInputValue(target, tagName, type);\n                        const isInputMasked = shouldMaskInput({\n                            maskInputOptions: this.maskInputOptions,\n                            tagName,\n                            type,\n                        });\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\n                        value = maskInputValue({\n                            isMasked: forceMask,\n                            element: target,\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                        value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributeMap.get(m.target);\n                    if (target.tagName === 'IFRAME' &&\n                        attributeName === 'src' &&\n                        !this.keepIframeSrcFn(value)) {\n                        if (!target.contentDocument) {\n                            attributeName = 'rr_src';\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                            styleDiff: {},\n                            _unchangedStyles: {},\n                        };\n                        this.attributes.push(item);\n                        this.attributeMap.set(m.target, item);\n                    }\n                    if (attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\n                        if (attributeName === 'style') {\n                            if (!this.unattachedDoc) {\n                                try {\n                                    this.unattachedDoc =\n                                        document.implementation.createHTMLDocument();\n                                }\n                                catch (e) {\n                                    this.unattachedDoc = this.doc;\n                                }\n                            }\n                            const old = this.unattachedDoc.createElement('span');\n                            if (m.oldValue) {\n                                old.setAttribute('style', m.oldValue);\n                            }\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        item.styleDiff[pname] = newValue;\n                                    }\n                                    else {\n                                        item.styleDiff[pname] = [newValue, newPriority];\n                                    }\n                                }\n                                else {\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    item.styleDiff[pname] = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 'childList': {\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\n                        return;\n                    }\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                            isIgnored(n, this.mirror) ||\n                            !isSerialized(n, this.mirror)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\n                                    ? true\n                                    : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (this.processedNodeManager.inOtherBuffer(n, this))\n                return;\n            if (this.addedSet.has(n) || this.movedSet.has(n))\n                return;\n            if (this.mirror.hasNode(n)) {\n                if (isIgnored(n, this.mirror)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && this.mirror.hasNode(target)) {\n                    targetId = this.mirror.getId(target);\n                }\n                if (targetId && targetId !== -1) {\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n                if (hasShadowRoot(n)) {\n                    n.shadowRoot.childNodes.forEach((childN) => {\n                        this.processedNodeManager.add(childN, this);\n                        this.genAdds(childN, n);\n                    });\n                }\n            }\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskAllText',\n            'maskTextClass',\n            'unmaskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'inlineStylesheet',\n            'maskInputOptions',\n            'maskAttributeFn',\n            'maskTextFn',\n            'maskInputFn',\n            'keepIframeSrcFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'dataURLOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'stylesheetManager',\n            'shadowDomManager',\n            'canvasManager',\n            'processedNodeManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    if (removes.length === 0)\n        return false;\n    return _isParentRemoved(removes, n, mirror);\n}\nfunction _isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return _isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    if (set.size === 0)\n        return false;\n    return _isAncestorInSet(set, n);\n}\nfunction _isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return _isAncestorInSet(set, parentNode);\n}\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n    errorHandler = undefined;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\nfunction _optionalChain$2(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (e2) {\n    }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = _optionalChain$2([window, 'optionalAccess', _ => _.Zone, 'optionalAccess', _2 => _2.__symbol__, 'optionalCall', _3 => _3('MutationObserver')]);\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => {\n        };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1(callbackWrapper((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }), callbackThreshold);\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = nowTimestamp();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: nowTimestamp() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }), threshold, {\n        trailing: false,\n    }));\n    const handlers = [\n        on('mousemove', updatePosition, doc),\n        on('touchmove', updatePosition, doc),\n        on('drag', updatePosition, doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => {\n        };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    let currentPointerType = null;\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n                return;\n            }\n            let pointerType = null;\n            let thisEventKey = eventKey;\n            if ('pointerType' in event) {\n                switch (event.pointerType) {\n                    case 'mouse':\n                        pointerType = PointerTypes.Mouse;\n                        break;\n                    case 'touch':\n                        pointerType = PointerTypes.Touch;\n                        break;\n                    case 'pen':\n                        pointerType = PointerTypes.Pen;\n                        break;\n                }\n                if (pointerType === PointerTypes.Touch) {\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n                        thisEventKey = 'TouchStart';\n                    }\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n                        thisEventKey = 'TouchEnd';\n                    }\n                }\n                else if (pointerType === PointerTypes.Pen) ;\n            }\n            else if (legacy_isTouchEvent(event)) {\n                pointerType = PointerTypes.Touch;\n            }\n            if (pointerType !== null) {\n                currentPointerType = pointerType;\n                if ((thisEventKey.startsWith('Touch') &&\n                    pointerType === PointerTypes.Touch) ||\n                    (thisEventKey.startsWith('Mouse') &&\n                        pointerType === PointerTypes.Mouse)) {\n                    pointerType = null;\n                }\n            }\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n                pointerType = currentPointerType;\n                currentPointerType = null;\n            }\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[thisEventKey],\n                id,\n                x: clientX,\n                y: clientY,\n                ...(pointerType !== null && { pointerType }),\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        let eventName = toLowerCase(eventKey);\n        const handler = getHandler(eventKey);\n        if (window.PointerEvent) {\n            switch (MouseInteractions[eventKey]) {\n                case MouseInteractions.MouseDown:\n                case MouseInteractions.MouseUp:\n                    eventName = eventName.replace('mouse', 'pointer');\n                    break;\n                case MouseInteractions.TouchStart:\n                case MouseInteractions.TouchEnd:\n                    return;\n            }\n        }\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc && doc.defaultView) {\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\n            scrollCb({\n                id,\n                x: scrollLeftTop.left,\n                y: scrollLeftTop.top,\n            });\n        }\n        else {\n            scrollCb({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }), sampling.scroll || 100));\n    return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = callbackWrapper(throttle$1(callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            viewportResizeCb({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }), 200));\n    return on('resize', updateDimension, win);\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const userTriggered = event.isTrusted;\n        const tagName = target && toUpperCase(target.tagName);\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const el = target;\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        const type = getInputType(target);\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        const isInputMasked = shouldMaskInput({\n            maskInputOptions,\n            tagName,\n            type,\n        });\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        text = maskInputValue({\n            isMasked: forceMask,\n            element: target,\n            value: text,\n            maskInputFn,\n        });\n        cbWithDedup(target, userTriggeredOnInput\n            ? { text, isChecked, userTriggered }\n            : { text, isChecked });\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        isMasked: forceMask,\n                        element: el,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, userTriggeredOnInput\n                        ? { text, isChecked: !isChecked, userTriggered: false }\n                        : { text, isChecked: !isChecked });\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            callbackWrapper(inputCb)({\n                ...v,\n                id,\n            });\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const currentWindow = doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [currentWindow.HTMLInputElement.prototype, 'value'],\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({\n                    target: this,\n                    isTrusted: false,\n                });\n            },\n        }, false, currentWindow)));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else if (childRule.parentStyleSheet) {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\n    let id, styleId;\n    if (!sheet)\n        return {};\n    if (sheet.ownerNode)\n        id = mirror.getId(sheet.ownerNode);\n    else\n        styleId = styleMirror.getId(sheet);\n    return {\n        styleId,\n        id,\n    };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => {\n        };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    let replace;\n    if (win.CSSStyleSheet.prototype.replace) {\n        replace = win.CSSStyleSheet.prototype.replace;\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replace: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    let replaceSync;\n    if (win.CSSStyleSheet.prototype.replaceSync) {\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replaceSync: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\n    let hostId = null;\n    if (host.nodeName === '#document')\n        hostId = mirror.getId(host);\n    else\n        hostId = mirror.getId(host.host);\n    const patchTarget = host.nodeName === '#document'\n        ? _optionalChain$2([host, 'access', _4 => _4.defaultView, 'optionalAccess', _5 => _5.Document])\n        : _optionalChain$2([host, 'access', _6 => _6.ownerDocument, 'optionalAccess', _7 => _7.defaultView, 'optionalAccess', _8 => _8.ShadowRoot]);\n    const originalPropertyDescriptor = _optionalChain$2([patchTarget, 'optionalAccess', _9 => _9.prototype])\n        ? Object.getOwnPropertyDescriptor(_optionalChain$2([patchTarget, 'optionalAccess', _10 => _10.prototype]), 'adoptedStyleSheets')\n        : undefined;\n    if (hostId === null ||\n        hostId === -1 ||\n        !patchTarget ||\n        !originalPropertyDescriptor)\n        return () => {\n        };\n    Object.defineProperty(host, 'adoptedStyleSheets', {\n        configurable: originalPropertyDescriptor.configurable,\n        enumerable: originalPropertyDescriptor.enumerable,\n        get() {\n            return _optionalChain$2([originalPropertyDescriptor, 'access', _11 => _11.get, 'optionalAccess', _12 => _12.call, 'call', _13 => _13(this)]);\n        },\n        set(sheets) {\n            const result = _optionalChain$2([originalPropertyDescriptor, 'access', _14 => _14.set, 'optionalAccess', _15 => _15.call, 'call', _16 => _16(this, sheets)]);\n            if (hostId !== null && hostId !== -1) {\n                try {\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\n                }\n                catch (e) {\n                }\n            }\n            return result;\n        },\n    });\n    return callbackWrapper(() => {\n        Object.defineProperty(host, 'adoptedStyleSheets', {\n            configurable: originalPropertyDescriptor.configurable,\n            enumerable: originalPropertyDescriptor.enumerable,\n            get: originalPropertyDescriptor.get,\n            set: originalPropertyDescriptor.set,\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property, value, priority] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return setProperty.apply(thisArg, [property, value, priority]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _17 => _17.parentRule, 'optionalAccess', _18 => _18.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return removeProperty.apply(thisArg, [property]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _19 => _19.parentRule, 'optionalAccess', _20 => _20.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\n    const handler = callbackWrapper((type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n            playbackRate,\n        });\n    }), sampling.media || 500));\n    const handlers = [\n        on('play', handler(0), doc),\n        on('pause', handler(1), doc),\n        on('seeked', handler(2), doc),\n        on('volumechange', handler(3), doc),\n        on('ratechange', handler(4), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => {\n        };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                : JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout$1(callbackWrapper(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }), 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initSelectionObserver(param) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\n    let collapsed = true;\n    const updateSelection = callbackWrapper(() => {\n        const selection = doc.getSelection();\n        if (!selection || (collapsed && _optionalChain$2([selection, 'optionalAccess', _21 => _21.isCollapsed])))\n            return;\n        collapsed = selection.isCollapsed || false;\n        const ranges = [];\n        const count = selection.rangeCount || 0;\n        for (let i = 0; i < count; i++) {\n            const range = selection.getRangeAt(i);\n            const { startContainer, startOffset, endContainer, endOffset } = range;\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\n            if (blocked)\n                continue;\n            ranges.push({\n                start: mirror.getId(startContainer),\n                startOffset,\n                end: mirror.getId(endContainer),\n                endOffset,\n            });\n        }\n        selectionCb({ ranges });\n    });\n    updateSelection();\n    return on('selectionchange', updateSelection);\n}\nfunction initCustomElementObserver({ doc, customElementCb, }) {\n    const win = doc.defaultView;\n    if (!win || !win.customElements)\n        return () => { };\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\n        return function (name, constructor, options) {\n            try {\n                customElementCb({\n                    define: {\n                        name,\n                    },\n                });\n            }\n            catch (e) {\n            }\n            return original.apply(this, [name, constructor, options]);\n        };\n    });\n    return restoreHandler;\n}\nfunction initObservers(o, _hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n        };\n    }\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o, {\n        win: currentWindow,\n    });\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts\n        ? initFontObserver(o)\n        : () => {\n        };\n    const selectionObserver = initSelectionObserver(o);\n    const customElementObserver = initCustomElementObserver(o);\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        styleSheetObserver();\n        adoptedStyleSheetObserver();\n        styleDeclarationObserver();\n        fontObserver();\n        selectionObserver();\n        customElementObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass CrossOriginIframeMirror {\n    constructor(generateIdFn) {\n        this.generateIdFn = generateIdFn;\n        this.iframeIdToRemoteIdMap = new WeakMap();\n        this.iframeRemoteIdToIdMap = new WeakMap();\n    }\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n        let id = idToRemoteIdMap.get(remoteId);\n        if (!id) {\n            id = this.generateIdFn();\n            idToRemoteIdMap.set(remoteId, id);\n            remoteIdToIdMap.set(id, remoteId);\n        }\n        return id;\n    }\n    getIds(iframe, remoteId) {\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\n    }\n    getRemoteId(iframe, id, map) {\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n        if (typeof id !== 'number')\n            return id;\n        const remoteId = remoteIdToIdMap.get(id);\n        if (!remoteId)\n            return -1;\n        return remoteId;\n    }\n    getRemoteIds(iframe, ids) {\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n    }\n    reset(iframe) {\n        if (!iframe) {\n            this.iframeIdToRemoteIdMap = new WeakMap();\n            this.iframeRemoteIdToIdMap = new WeakMap();\n            return;\n        }\n        this.iframeIdToRemoteIdMap.delete(iframe);\n        this.iframeRemoteIdToIdMap.delete(iframe);\n    }\n    getIdToRemoteIdMap(iframe) {\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n        if (!idToRemoteIdMap) {\n            idToRemoteIdMap = new Map();\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n        }\n        return idToRemoteIdMap;\n    }\n    getRemoteIdToIdMap(iframe) {\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n        if (!remoteIdToIdMap) {\n            remoteIdToIdMap = new Map();\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n        }\n        return remoteIdToIdMap;\n    }\n}\n\nfunction _optionalChain$1(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nclass IframeManagerNoop {\n    constructor() {\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n    }\n    addIframe() {\n    }\n    addLoadListener() {\n    }\n    attachIframe() {\n    }\n}\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.crossOriginIframeMap = new WeakMap();\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n        this.mutationCb = options.mutationCb;\n        this.wrappedEmit = options.wrappedEmit;\n        this.stylesheetManager = options.stylesheetManager;\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\n        this.mirror = options.mirror;\n        if (this.recordCrossOriginIframes) {\n            window.addEventListener('message', this.handleMessage.bind(this));\n        }\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n        if (iframeEl.contentWindow)\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: this.mirror.getId(iframeEl),\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        _optionalChain$1([this, 'access', _ => _.loadListener, 'optionalCall', _2 => _2(iframeEl)]);\n        if (iframeEl.contentDocument &&\n            iframeEl.contentDocument.adoptedStyleSheets &&\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\n    }\n    handleMessage(message) {\n        const crossOriginMessageEvent = message;\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n            return;\n        const iframeSourceWindow = message.source;\n        if (!iframeSourceWindow)\n            return;\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\n        if (!iframeEl)\n            return;\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\n        if (transformedEvent)\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\n    }\n    transformCrossOriginEvent(iframeEl, e) {\n        switch (e.type) {\n            case EventType.FullSnapshot: {\n                this.crossOriginIframeMirror.reset(iframeEl);\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\n                this.replaceIdOnNode(e.data.node, iframeEl);\n                const rootId = e.data.node.id;\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n                this.patchRootIdOnNode(e.data.node, rootId);\n                return {\n                    timestamp: e.timestamp,\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Mutation,\n                        adds: [\n                            {\n                                parentId: this.mirror.getId(iframeEl),\n                                nextId: null,\n                                node: e.data.node,\n                            },\n                        ],\n                        removes: [],\n                        texts: [],\n                        attributes: [],\n                        isAttachIframe: true,\n                    },\n                };\n            }\n            case EventType.Meta:\n            case EventType.Load:\n            case EventType.DomContentLoaded: {\n                return false;\n            }\n            case EventType.Plugin: {\n                return e;\n            }\n            case EventType.Custom: {\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\n                return e;\n            }\n            case EventType.IncrementalSnapshot: {\n                switch (e.data.source) {\n                    case IncrementalSource.Mutation: {\n                        e.data.adds.forEach((n) => {\n                            this.replaceIds(n, iframeEl, [\n                                'parentId',\n                                'nextId',\n                                'previousId',\n                            ]);\n                            this.replaceIdOnNode(n.node, iframeEl);\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\n                        });\n                        e.data.removes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\n                        });\n                        e.data.attributes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        e.data.texts.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.Drag:\n                    case IncrementalSource.TouchMove:\n                    case IncrementalSource.MouseMove: {\n                        e.data.positions.forEach((p) => {\n                            this.replaceIds(p, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.ViewportResize: {\n                        return false;\n                    }\n                    case IncrementalSource.MediaInteraction:\n                    case IncrementalSource.MouseInteraction:\n                    case IncrementalSource.Scroll:\n                    case IncrementalSource.CanvasMutation:\n                    case IncrementalSource.Input: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        return e;\n                    }\n                    case IncrementalSource.StyleSheetRule:\n                    case IncrementalSource.StyleDeclaration: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\n                        return e;\n                    }\n                    case IncrementalSource.Font: {\n                        return e;\n                    }\n                    case IncrementalSource.Selection: {\n                        e.data.ranges.forEach((range) => {\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.AdoptedStyleSheet: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\n                        _optionalChain$1([e, 'access', _3 => _3.data, 'access', _4 => _4.styles, 'optionalAccess', _5 => _5.forEach, 'call', _6 => _6((style) => {\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\n                        })]);\n                        return e;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    replace(iframeMirror, obj, iframeEl, keys) {\n        for (const key of keys) {\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\n                continue;\n            if (Array.isArray(obj[key])) {\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\n            }\n            else {\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n            }\n        }\n        return obj;\n    }\n    replaceIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n    }\n    replaceStyleIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n    }\n    replaceIdOnNode(node, iframeEl) {\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.replaceIdOnNode(child, iframeEl);\n            });\n        }\n    }\n    patchRootIdOnNode(node, rootId) {\n        if (node.type !== NodeType$1.Document && !node.rootId)\n            node.rootId = rootId;\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.patchRootIdOnNode(child, rootId);\n            });\n        }\n    }\n}\n\nclass ShadowDomManagerNoop {\n    init() {\n    }\n    addShadowRoot() {\n    }\n    observeAttachShadow() {\n    }\n    reset() {\n    }\n}\nclass ShadowDomManager {\n    constructor(options) {\n        this.shadowDoms = new WeakSet();\n        this.restoreHandlers = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        this.init();\n    }\n    init() {\n        this.reset();\n        this.patchAttachShadow(Element, document);\n    }\n    addShadowRoot(shadowRoot, doc) {\n        if (!isNativeShadowDom(shadowRoot))\n            return;\n        if (this.shadowDoms.has(shadowRoot))\n            return;\n        this.shadowDoms.add(shadowRoot);\n        const observer = initMutationObserver({\n            ...this.bypassOptions,\n            doc,\n            mutationCb: this.mutationCb,\n            mirror: this.mirror,\n            shadowDomManager: this,\n        }, shadowRoot);\n        this.restoreHandlers.push(() => observer.disconnect());\n        this.restoreHandlers.push(initScrollObserver({\n            ...this.bypassOptions,\n            scrollCb: this.scrollCb,\n            doc: shadowRoot,\n            mirror: this.mirror,\n        }));\n        setTimeout$1(() => {\n            if (shadowRoot.adoptedStyleSheets &&\n                shadowRoot.adoptedStyleSheets.length > 0)\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\n                mirror: this.mirror,\n                stylesheetManager: this.bypassOptions.stylesheetManager,\n            }, shadowRoot));\n        }, 0);\n    }\n    observeAttachShadow(iframeElement) {\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\n            return;\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\n    }\n    patchAttachShadow(element, doc) {\n        const manager = this;\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\n            return function (option) {\n                const shadowRoot = original.call(this, option);\n                if (this.shadowRoot && inDom(this))\n                    manager.addShadowRoot(this.shadowRoot, doc);\n                return shadowRoot;\n            };\n        }));\n    }\n    reset() {\n        this.restoreHandlers.forEach((handler) => {\n            try {\n                handler();\n            }\n            catch (e) {\n            }\n        });\n        this.restoreHandlers = [];\n        this.shadowDoms = new WeakSet();\n    }\n}\n\nclass CanvasManagerNoop {\n    reset() {\n    }\n    freeze() {\n    }\n    unfreeze() {\n    }\n    lock() {\n    }\n    unlock() {\n    }\n    snapshot() {\n    }\n}\n\nclass StylesheetManager {\n    constructor(options) {\n        this.trackedLinkElements = new WeakSet();\n        this.styleMirror = new StyleSheetMirror();\n        this.mutationCb = options.mutationCb;\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n    }\n    attachLinkElement(linkEl, childSn) {\n        if ('_cssText' in childSn.attributes)\n            this.mutationCb({\n                adds: [],\n                removes: [],\n                texts: [],\n                attributes: [\n                    {\n                        id: childSn.id,\n                        attributes: childSn\n                            .attributes,\n                    },\n                ],\n            });\n        this.trackLinkElement(linkEl);\n    }\n    trackLinkElement(linkEl) {\n        if (this.trackedLinkElements.has(linkEl))\n            return;\n        this.trackedLinkElements.add(linkEl);\n        this.trackStylesheetInLinkElement(linkEl);\n    }\n    adoptStyleSheets(sheets, hostId) {\n        if (sheets.length === 0)\n            return;\n        const adoptedStyleSheetData = {\n            id: hostId,\n            styleIds: [],\n        };\n        const styles = [];\n        for (const sheet of sheets) {\n            let styleId;\n            if (!this.styleMirror.has(sheet)) {\n                styleId = this.styleMirror.add(sheet);\n                styles.push({\n                    styleId,\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\n                        rule: stringifyRule(r),\n                        index,\n                    })),\n                });\n            }\n            else\n                styleId = this.styleMirror.getId(sheet);\n            adoptedStyleSheetData.styleIds.push(styleId);\n        }\n        if (styles.length > 0)\n            adoptedStyleSheetData.styles = styles;\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\n    }\n    reset() {\n        this.styleMirror.reset();\n        this.trackedLinkElements = new WeakSet();\n    }\n    trackStylesheetInLinkElement(linkEl) {\n    }\n}\n\nclass ProcessedNodeManager {\n    constructor() {\n        this.nodeMap = new WeakMap();\n        this.loop = true;\n        this.periodicallyClear();\n    }\n    periodicallyClear() {\n        onRequestAnimationFrame(() => {\n            this.clear();\n            if (this.loop)\n                this.periodicallyClear();\n        });\n    }\n    inOtherBuffer(node, thisBuffer) {\n        const buffers = this.nodeMap.get(node);\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\n    }\n    add(node, buffer) {\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\n    }\n    clear() {\n        this.nodeMap = new WeakMap();\n    }\n    destroy() {\n        this.loop = false;\n    }\n}\n\nlet wrappedEmit;\nlet _takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\n        ? options.recordAfter\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\n    registerErrorHandler(errorHandler);\n    const inEmittingFrame = recordCrossOriginIframes\n        ? window.parent === window\n        : true;\n    let passEmitsToParent = false;\n    if (!inEmittingFrame) {\n        try {\n            if (window.parent.document) {\n                passEmitsToParent = false;\n            }\n        }\n        catch (e) {\n            passEmitsToParent = true;\n        }\n    }\n    if (inEmittingFrame && !emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    mirror.reset();\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn &&\n            !passEmitsToParent) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = (r, isCheckout) => {\n        const e = r;\n        e.timestamp = nowTimestamp();\n        if (_optionalChain([mutationBuffers, 'access', _ => _[0], 'optionalAccess', _2 => _2.isFrozen, 'call', _3 => _3()]) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        if (inEmittingFrame) {\n            _optionalChain([emit, 'optionalCall', _4 => _4(eventProcessor(e), isCheckout)]);\n        }\n        else if (passEmitsToParent) {\n            const message = {\n                type: 'rrweb',\n                event: eventProcessor(e),\n                origin: window.location.origin,\n                isCheckout,\n            };\n            window.parent.postMessage(message, '*');\n        }\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                lastFullSnapshotEvent &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.Mutation,\n                ...m,\n            },\n        });\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.Scroll,\n            ...p,\n        },\n    });\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.CanvasMutation,\n            ...p,\n        },\n    });\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.AdoptedStyleSheet,\n            ...a,\n        },\n    });\n    const stylesheetManager = new StylesheetManager({\n        mutationCb: wrappedMutationEmit,\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\n    });\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\n        ? new IframeManagerNoop()\n        : new IframeManager({\n            mirror,\n            mutationCb: wrappedMutationEmit,\n            stylesheetManager: stylesheetManager,\n            recordCrossOriginIframes,\n            wrappedEmit,\n        });\n    for (const plugin of plugins || []) {\n        if (plugin.getMirror)\n            plugin.getMirror({\n                nodeMirror: mirror,\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\n            });\n    }\n    const processedNodeManager = new ProcessedNodeManager();\n    const canvasManager = _getCanvasManager(getCanvasManager, {\n        mirror,\n        win: window,\n        mutationCb: (p) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.CanvasMutation,\n                ...p,\n            },\n        }),\n        recordCanvas,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maxCanvasSize,\n        sampling: sampling['canvas'],\n        dataURLOptions,\n        errorHandler,\n    });\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\n        __RRWEB_EXCLUDE_SHADOW_DOM__\n        ? new ShadowDomManagerNoop()\n        : new ShadowDomManager({\n            mutationCb: wrappedMutationEmit,\n            scrollCb: wrappedScrollEmit,\n            bypassOptions: {\n                onMutation,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                inlineStylesheet,\n                maskInputOptions,\n                dataURLOptions,\n                maskAttributeFn,\n                maskTextFn,\n                maskInputFn,\n                recordCanvas,\n                inlineImages,\n                sampling,\n                slimDOMOptions,\n                iframeManager,\n                stylesheetManager,\n                canvasManager,\n                keepIframeSrcFn,\n                processedNodeManager,\n            },\n            mirror,\n        });\n    const takeFullSnapshot = (isCheckout = false) => {\n        wrappedEmit({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }, isCheckout);\n        stylesheetManager.reset();\n        shadowDomManager.init();\n        mutationBuffers.forEach((buf) => buf.lock());\n        const node = snapshot(document, {\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            inlineStylesheet,\n            maskAllInputs: maskInputOptions,\n            maskAttributeFn,\n            maskInputFn,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            dataURLOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isSerializedIframe(n, mirror)) {\n                    iframeManager.addIframe(n);\n                }\n                if (isSerializedStylesheet(n, mirror)) {\n                    stylesheetManager.trackLinkElement(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            onStylesheetLoad: (linkEl, childSn) => {\n                stylesheetManager.attachLinkElement(linkEl, childSn);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        wrappedEmit({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: getWindowScroll(window),\n            },\n        });\n        mutationBuffers.forEach((buf) => buf.unlock());\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\n    };\n    _takeFullSnapshot = takeFullSnapshot;\n    try {\n        const handlers = [];\n        const observe = (doc) => {\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                }),\n                mouseInteractionCb: (d) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MouseInteraction,\n                        ...d,\n                    },\n                }),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.ViewportResize,\n                        ...d,\n                    },\n                }),\n                inputCb: (v) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Input,\n                        ...v,\n                    },\n                }),\n                mediaInteractionCb: (p) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MediaInteraction,\n                        ...p,\n                    },\n                }),\n                styleSheetRuleCb: (r) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleSheetRule,\n                        ...r,\n                    },\n                }),\n                styleDeclarationCb: (r) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleDeclaration,\n                        ...r,\n                    },\n                }),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Font,\n                        ...p,\n                    },\n                }),\n                selectionCb: (p) => {\n                    wrappedEmit({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.Selection,\n                            ...p,\n                        },\n                    });\n                },\n                customElementCb: (c) => {\n                    wrappedEmit({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.CustomElement,\n                            ...c,\n                        },\n                    });\n                },\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAttributeFn,\n                maskInputFn,\n                maskTextFn,\n                keepIframeSrcFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                dataURLOptions,\n                mirror,\n                iframeManager,\n                stylesheetManager,\n                shadowDomManager,\n                processedNodeManager,\n                canvasManager,\n                ignoreCSSAttributes,\n                plugins: _optionalChain([plugins\n, 'optionalAccess', _5 => _5.filter, 'call', _6 => _6((p) => p.observer)\n, 'optionalAccess', _7 => _7.map, 'call', _8 => _8((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    }),\n                }))]) || [],\n            }, {});\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('DOMContentLoaded', () => {\n                wrappedEmit({\n                    type: EventType.DomContentLoaded,\n                    data: {},\n                });\n                if (recordAfter === 'DOMContentLoaded')\n                    init();\n            }));\n            handlers.push(on('load', () => {\n                wrappedEmit({\n                    type: EventType.Load,\n                    data: {},\n                });\n                if (recordAfter === 'load')\n                    init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n            processedNodeManager.destroy();\n            _takeFullSnapshot = undefined;\n            unregisterErrorHandler();\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nfunction takeFullSnapshot(isCheckout) {\n    if (!_takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    _takeFullSnapshot(isCheckout);\n}\nrecord.mirror = mirror;\nrecord.takeFullSnapshot = takeFullSnapshot;\nfunction _getCanvasManager(getCanvasManagerFn, options) {\n    try {\n        return getCanvasManagerFn\n            ? getCanvasManagerFn(options)\n            : new CanvasManagerNoop();\n    }\n    catch (e2) {\n        console.warn('Unable to initialize CanvasManager');\n        return new CanvasManagerNoop();\n    }\n}\n\nconst ReplayEventTypeIncrementalSnapshot = 3;\nconst ReplayEventTypeCustom = 5;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nfunction getClosestInteractive(element) {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  fill(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n   registerMutation(timestamp = Date.now()) {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerScroll(timestamp = Date.now()) {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerClick(element) {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node );\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout$2(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nfunction updateClickDetectorForRecordingEvent(clickDetector, event) {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch (e) {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event) {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event,\n) {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  if (!attributes['data-sentry-component'] && attributes['data-sentry-element']) {\n    attributes['data-sentry-component'] = attributes['data-sentry-element'];\n  }\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event ) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event ) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text ).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event ) : getTargetNode(handlerData.event );\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node) {\n  return node.type === NodeType.Element;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES\n\n = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Handler creater for web vitals\n */\nfunction webVitalHandler(\n  getter,\n  replay,\n) {\n  return ({ metric }) => void replay.replayPerformanceEntries.push(getter(metric));\n}\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  const entryType = ENTRY_TYPES[entry.entryType];\n  if (!entryType) {\n    return null;\n  }\n\n  return entryType(entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on a LCP metric.\n */\nfunction getLargestContentfulPaint(metric) {\n  const lastEntry = metric.entries[metric.entries.length - 1] ;\n  const node = lastEntry ? lastEntry.element : undefined;\n  return getWebVital(metric, 'largest-contentful-paint', node);\n}\n\n/**\n * Add a CLS event to the replay based on a CLS metric.\n */\nfunction getCumulativeLayoutShift(metric) {\n  // get first node that shifts\n  const firstEntry = metric.entries[0] ;\n  const node = firstEntry\n    ? firstEntry.sources && firstEntry.sources[0]\n      ? firstEntry.sources[0].node\n      : undefined\n    : undefined;\n  return getWebVital(metric, 'cumulative-layout-shift', node);\n}\n\n/**\n * Add a FID event to the replay based on a FID metric.\n */\nfunction getFirstInputDelay(metric) {\n  const lastEntry = metric.entries[metric.entries.length - 1] ;\n  const node = lastEntry ? lastEntry.target : undefined;\n  return getWebVital(metric, 'first-input-delay', node);\n}\n\n/**\n * Add an INP event to the replay based on an INP metric.\n */\nfunction getInteractionToNextPaint(metric) {\n  const lastEntry = metric.entries[metric.entries.length - 1] ;\n  const node = lastEntry ? lastEntry.target : undefined;\n  return getWebVital(metric, 'interaction-to-next-paint', node);\n}\n\n/**\n * Add an web vital event to the replay based on the web vital metric.\n */\nfunction getWebVital(\n  metric,\n  name,\n  node,\n) {\n  const value = metric.value;\n  const rating = metric.rating;\n\n  const end = getAbsoluteTime(value);\n\n  const data = {\n    type: 'web-vital',\n    name,\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      rating,\n      nodeId: node ? record.mirror.getId(node) : undefined,\n    },\n  };\n\n  return data;\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nfunction setupPerformanceObserver(replay) {\n  function addPerformanceEntry(entry) {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }) {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks = [];\n\n  (['navigation', 'paint', 'resource'] ).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(webVitalHandler(getLargestContentfulPaint, replay)),\n    addClsInstrumentationHandler(webVitalHandler(getCumulativeLayoutShift, replay)),\n    addFidInstrumentationHandler(webVitalHandler(getFirstInputDelay, replay)),\n    addInpInstrumentationHandler(webVitalHandler(getInteractionToNextPaint, replay)),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nconst r = `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J=\"undefined\"!=typeof TextEncoder&&new TextEncoder,K=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(J)return J.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&\"function\"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nfunction logInfo(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nfunction logInfoNextTick(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout$2(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message) {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n  /** @inheritdoc */\n\n   constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n  /** @inheritdoc */\n\n   constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n   get hasCheckout() {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n   set hasCheckout(value) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}) {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl) {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl() {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return e();\n  }\n\n  return '';\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false },\n  { previousSessionId } = {},\n) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession(traceInternals) {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(\n  session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  },\n) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n\n/** If the session should be refreshed or not. */\nfunction shouldRefreshSession(\n  session,\n  { sessionIdleExpire, maxReplayDuration },\n) {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nfunction loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }\n\n,\n  sessionOptions,\n) {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEventSync(replay, event, isCheckout) {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nfunction shouldAddEvent(replay, event) {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfoNextTick(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nfunction isFeedbackEvent(event) {\n  return event.type === 'feedback';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  return (event, sendResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (!statusCode || statusCode < 200 || statusCode >= 300) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id );\n  }\n}\n\nfunction handleErrorEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout$2(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleBeforeSendEvent(replay) {\n  return (event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay, event) {\n  const exceptionValue =\n    event.exception && event.exception.values && event.exception.values[0] && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    // With newer React versions, the messages changed to a different website https://react.dev/errors/418\n    exceptionValue.match(\n      /(reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=|react\\.dev\\/errors\\/)(418|419|422|423|425)/,\n    ) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n      data: {\n        url: getLocationHref(),\n      },\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n\n/**\n * Handle breadcrumbs that Sentry captures, and make sure to capture relevant breadcrumbs to Replay as well.\n */\nfunction handleBreadcrumbs(replay) {\n  const client = getClient();\n\n  if (!client) {\n    return;\n  }\n\n  client.on('beforeAddBreadcrumb', breadcrumb => beforeAddBreadcrumb(replay, breadcrumb));\n}\n\nfunction beforeAddBreadcrumb(replay, breadcrumb) {\n  if (!replay.isEnabled() || !isBreadcrumbWithCategory(breadcrumb)) {\n    return;\n  }\n\n  const result = normalizeBreadcrumb(breadcrumb);\n  if (result) {\n    addBreadcrumbEvent(replay, result);\n  }\n}\n\n/** Exported only for tests. */\nfunction normalizeBreadcrumb(breadcrumb) {\n  if (\n    !isBreadcrumbWithCategory(breadcrumb) ||\n    [\n      // fetch & xhr are handled separately,in handleNetworkBreadcrumbs\n      'fetch',\n      'xhr',\n      // These two are breadcrumbs for emitted sentry events, we don't care about them\n      'sentry.event',\n      'sentry.transaction',\n    ].includes(breadcrumb.category) ||\n    // We capture UI breadcrumbs separately\n    breadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (breadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(breadcrumb);\n  }\n\n  return createBreadcrumb(breadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nfunction addFeedbackBreadcrumb(replay, event) {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } );\n\n    return false;\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(replay) {\n  return Object.assign(\n    (event, hint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** Get the size of a body. */\nfunction getBodySize(body) {\n  if (!body) {\n    return undefined;\n  }\n\n  const textEncoder = new TextEncoder();\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nfunction mergeWarning(\n  info,\n  warning,\n) {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.entries(headers).reduce((filteredHeaders, [key, value]) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = value;\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch (e3) {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n) {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    networkResponseHeaders,\n  },\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText,\n  {\n    networkCaptureBodies,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }\n\n,\n) {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined ? getBodySize(bodyText) : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response) {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response) {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response) {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout$2(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n}\n\nasync function _getResponseText(response) {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n) {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ') ;\n    if (value) {\n      acc[key.toLowerCase()] = value;\n    }\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr) {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nfunction _parseXhrResponse(\n  body,\n  responseType,\n) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body,\n  responseType,\n) {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr);\n  } catch (e3) {\n    return undefined;\n  }\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = getClient();\n\n  try {\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const client = getClient();\n\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleBreadcrumbs(replay);\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay);\n  addEventProcessor(eventProcessor);\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (client) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('spanStart', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We may be missing the initial spanStart due to timing issues,\n    // so we capture it on finish again.\n    client.on('spanEnd', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout$2(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout$2(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return createEnvelope(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint = { event_id, integrations };\n\n  client.emit('preprocessEvent', event, eventHint);\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return resolvedSyncPromise({});\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return resolvedSyncPromise({});\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nclass RateLimitError extends Error {\n\n   constructor(rateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout$2(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n\n  /**\n   * The current or last active span.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n\n  /** The replay has to be manually started, because no sample rate (neither session or error) was provided. */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n\n  /**\n   * Is the integration currently active?\n   */\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n\n  /**\n   * Function to stop recording\n   */\n\n  /**\n   * Internal use for canvas recording options\n   */\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } ;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._requiresManualStart = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n   isRecordingCanvas() {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling(previousSessionId) {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    const requiresManualStart = errorSampleRate <= 0 && sessionSampleRate <= 0;\n\n    this._requiresManualStart = requiresManualStart;\n\n    if (requiresManualStart) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop({ forceFlush = false, reason } = {}) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode ) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    const lastActiveSpan = this.lastActiveSpan || getActiveSpan();\n    const lastRootSpan = lastActiveSpan && getRootSpan(lastActiveSpan);\n\n    const attributes = (lastRootSpan && spanToJSON(lastRootSpan).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastRootSpan || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastRootSpan).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n   _initializeSessionForSampling(previousSessionId) {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n   _checkSession() {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n   async _refreshSession(session) {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init2() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init3() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init4() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    // If replay was started manually (=no sample rate was given),\n    // We do not want to back-port the initial timestamp\n    if (!session || !eventBuffer || this._requiresManualStart) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init5() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init6() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(selectors, defaultSelectors) {\n  return [\n    ...selectors,\n    // sentry defaults\n    ...defaultSelectors,\n  ].join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({ mask, unmask, block, unblock, ignore }) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]']);\n  const unmaskSelector = getOption(unmask, []);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements]),\n    unblockSelector: getOption(unblock, []),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]']),\n  };\n\n  return options;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nfunction maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}) {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * Sentry integration for [Session Replay](https://sentry.io/for/session-replay/).\n *\n * See the [Replay documentation](https://docs.sentry.io/platforms/javascript/guides/session-replay/) for more information.\n *\n * @example\n *\n * ```\n * Sentry.init({\n *   dsn: '__DSN__',\n *   integrations: [Sentry.replayIntegration()],\n * });\n * ```\n */\nconst replayIntegration = ((options) => {\n  return new Replay(options);\n}) ;\n\n/**\n * Replay integration\n *\n * TODO: Rewrite this to be functional integration\n * Exported for tests.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n  } = {}) {\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key, value, el) =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   afterAllSetup(client) {\n    if (!isBrowser() || this._replay) {\n      return;\n    }\n\n    this._setup(client);\n    this._initialize(client);\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n   _initialize(client) {\n    if (!this._replay) {\n      return;\n    }\n\n    this._maybeLoadFromReplayCanvasIntegration(client);\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup(client) {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions, client);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n   _maybeLoadFromReplayCanvasIntegration(client) {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas')\n\n;\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay['_canvas'] = canvasIntegration.getOptions();\n    } catch (e) {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions, client) {\n  const opt = client.getOptions() ;\n\n  const finalOptions = {\n    sessionSampleRate: 0,\n    errorSampleRate: 0,\n    ...dropUndefinedKeys(initialOptions),\n  };\n\n  const replaysSessionSampleRate = parseSampleRate(opt.replaysSessionSampleRate);\n  const replaysOnErrorSampleRate = parseSampleRate(opt.replaysOnErrorSampleRate);\n\n  if (replaysSessionSampleRate == null && replaysOnErrorSampleRate == null) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (replaysSessionSampleRate != null) {\n    finalOptions.sessionSampleRate = replaysSessionSampleRate;\n  }\n\n  if (replaysOnErrorSampleRate != null) {\n    finalOptions.errorSampleRate = replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\nfunction getReplay() {\n  const client = getClient();\n  return client && client.getIntegrationByName('Replay');\n}\n\nexport { getReplay, replayIntegration };\n//# sourceMappingURL=index.js.map\n","import { addXhrInstrumentationHandler, addPerformanceInstrumentationHandler, SENTRY_XHR_DATA_KEY } from '@sentry-internal/browser-utils';\nimport { instrumentFetchRequest, spanToJSON, hasTracingEnabled, setHttpStatus, getActiveSpan, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SentryNonRecordingSpan, getClient, getCurrentScope, getIsolationScope, spanToTraceHeader, getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromClient } from '@sentry/core';\nimport { addFetchInstrumentationHandler, parseUrl, browserPerformanceTimeOrigin, generateSentryTraceHeader, dynamicSamplingContextToSentryBaggageHeader, BAGGAGE_HEADER_NAME, stringMatchesSomePattern } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  const { traceFetch, traceXHR, shouldCreateSpanForRequest, enableHTTPTimings, tracePropagationTargets } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  const shouldAttachHeadersWithTargets = (url) => shouldAttachHeaders(url, tracePropagationTargets);\n\n  const spans = {};\n\n  if (traceFetch) {\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/') ;\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1] ;\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time = 0) {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * We only export this function for testing purposes.\n */\nfunction shouldAttachHeaders(\n  targetUrl,\n  tracePropagationTargets,\n) {\n  // window.location.href not being defined is an edge case in the browser but we need to handle it.\n  // Potentially dangerous situations where it may not be defined: Browser Extensions, Web Workers, patching of the location obj\n  const href = WINDOW.location && WINDOW.location.href;\n\n  if (!href) {\n    // If there is no window.location.origin, we default to only attaching tracing headers to relative requests, i.e. ones that start with `/`\n    // BIG DISCLAIMER: Users can call URLs with a double slash (fetch(\"//example.com/api\")), this is a shorthand for \"send to the same protocol\",\n    // so we need a to exclude those requests, because they might be cross origin.\n    const isRelativeSameOriginRequest = !!targetUrl.match(/^\\/(?!\\/)/);\n    if (!tracePropagationTargets) {\n      return isRelativeSameOriginRequest;\n    } else {\n      return stringMatchesSomePattern(targetUrl, tracePropagationTargets);\n    }\n  } else {\n    let resolvedUrl;\n    let currentOrigin;\n\n    // URL parsing may fail, we default to not attaching trace headers in that case.\n    try {\n      resolvedUrl = new URL(targetUrl, href);\n      currentOrigin = new URL(href).origin;\n    } catch (e) {\n      return false;\n    }\n\n    const isSameOriginRequest = resolvedUrl.origin === currentOrigin;\n    if (!tracePropagationTargets) {\n      return isSameOriginRequest;\n    } else {\n      return (\n        stringMatchesSomePattern(resolvedUrl.toString(), tracePropagationTargets) ||\n        (isSameOriginRequest && stringMatchesSomePattern(resolvedUrl.pathname, tracePropagationTargets))\n      );\n    }\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = hasTracingEnabled() && shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const hasParent = !!getActiveSpan();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? startInactiveSpan({\n          name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          attributes: {\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            'http.url': fullUrl,\n            url: sentryXhrData.url,\n            'server.address': host,\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new SentryNonRecordingSpan();\n\n  xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n  spans[xhr.__sentry_xhr_span_id__] = span;\n\n  const client = getClient();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    addTracingHeadersToXhrRequest(\n      xhr,\n      client,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      hasTracingEnabled() && hasParent ? span : undefined,\n    );\n  }\n\n  return span;\n}\n\nfunction addTracingHeadersToXhrRequest(xhr, client, span) {\n  const scope = getCurrentScope();\n  const isolationScope = getIsolationScope();\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader =\n    span && hasTracingEnabled() ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n    dsc || (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client)),\n  );\n\n  setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url) {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\nexport { defaultRequestInstrumentationOptions, extractNetworkProtocol, instrumentOutgoingRequests, shouldAttachHeaders, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { getActiveSpan, getRootSpan, spanToJSON, SPAN_STATUS_ERROR } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeSpan = getActiveSpan();\n      if (!activeSpan) {\n        return;\n      }\n\n      const rootSpan = getRootSpan(activeSpan);\n\n      if (WINDOW.document.hidden && rootSpan) {\n        const cancelledStatus = 'cancelled';\n\n        const { op, status } = spanToJSON(rootSpan);\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Tracing] Transaction: ${cancelledStatus} -> since tab moved to the background, op: ${op}`);\n        }\n\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          rootSpan.setStatus({ code: SPAN_STATUS_ERROR, message: cancelledStatus });\n        }\n\n        rootSpan.setAttribute('sentry.cancellation_reason', 'document.hidden');\n        rootSpan.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","import { startTrackingWebVitals, startTrackingINP, startTrackingLongTasks, startTrackingInteractions, addHistoryInstrumentationHandler, registerInpInteractionListener, addPerformanceEntries } from '@sentry-internal/browser-utils';\nimport { TRACING_DEFAULTS, registerSpanErrorInstrumentation, getClient, spanToJSON, getCurrentScope, getRootSpan, spanIsSampled, getDynamicSamplingContextFromSpan, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getActiveSpan, getIsolationScope, startIdleSpan, SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON } from '@sentry/core';\nimport { logger, propagationContextFromHeaders, browserPerformanceTimeOrigin, generatePropagationContext, getDomElement } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\n\n/* eslint-disable max-lines */\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ...TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableInp: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nconst browserTracingIntegration = ((_options = {}) => {\n  registerSpanErrorInstrumentation();\n\n  const {\n    enableInp,\n    enableLongTask,\n    _experiments: { enableInteractions },\n    beforeStartSpan,\n    idleTimeout,\n    finalTimeout,\n    childSpanTimeout,\n    markBackgroundSpan,\n    traceFetch,\n    traceXHR,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    instrumentPageLoad,\n    instrumentNavigation,\n  } = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = startTrackingWebVitals();\n\n  if (enableInp) {\n    startTrackingINP();\n  }\n\n  if (enableLongTask) {\n    startTrackingLongTasks();\n  }\n  if (enableInteractions) {\n    startTrackingInteractions();\n  }\n\n  const latestRoute = {\n    name: undefined,\n    source: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteSpan(client, startSpanOptions) {\n    const isPageloadTransaction = startSpanOptions.op === 'pageload';\n\n    const finalStartSpanOptions = beforeStartSpan\n      ? beforeStartSpan(startSpanOptions)\n      : startSpanOptions;\n\n    const attributes = finalStartSpanOptions.attributes || {};\n\n    // If `finalStartSpanOptions.name` is different than `startSpanOptions.name`\n    // it is because `beforeStartSpan` set a custom name. Therefore we set the source to 'custom'.\n    if (startSpanOptions.name !== finalStartSpanOptions.name) {\n      attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom';\n      finalStartSpanOptions.attributes = attributes;\n    }\n\n    latestRoute.name = finalStartSpanOptions.name;\n    latestRoute.source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n    const idleSpan = startIdleSpan(finalStartSpanOptions, {\n      idleTimeout,\n      finalTimeout,\n      childSpanTimeout,\n      // should wait for finish signal if it's a pageload transaction\n      disableAutoFinish: isPageloadTransaction,\n      beforeSpanEnd: span => {\n        _collectWebVitals();\n        addPerformanceEntries(span);\n      },\n    });\n\n    function emitFinish() {\n      if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n        client.emit('idleSpanEnableAutoFinish', idleSpan);\n      }\n    }\n\n    if (isPageloadTransaction && WINDOW.document) {\n      WINDOW.document.addEventListener('readystatechange', () => {\n        emitFinish();\n      });\n\n      emitFinish();\n    }\n\n    return idleSpan;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    afterAllSetup(client) {\n      let activeSpan;\n      let startingUrl = WINDOW.location && WINDOW.location.href;\n\n      client.on('startNavigationSpan', startSpanOptions => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        if (activeSpan) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current root span with op: ${spanToJSON(activeSpan).op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n        activeSpan = _createRouteSpan(client, {\n          op: 'navigation',\n          ...startSpanOptions,\n        });\n      });\n\n      client.on('startPageLoadSpan', (startSpanOptions, traceOptions = {}) => {\n        if (getClient() !== client) {\n          return;\n        }\n\n        if (activeSpan) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current root span with op: ${spanToJSON(activeSpan).op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n\n        const sentryTrace = traceOptions.sentryTrace || getMetaContent('sentry-trace');\n        const baggage = traceOptions.baggage || getMetaContent('baggage');\n\n        const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n        getCurrentScope().setPropagationContext(propagationContext);\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'pageload',\n          ...startSpanOptions,\n        });\n      });\n\n      // A trace should to stay the consistent over the entire time span of one route.\n      // Therefore, when the initial pageload or navigation root span ends, we update the\n      // scope's propagation context to keep span-specific attributes like the `sampled` decision and\n      // the dynamic sampling context valid, even after the root span has ended.\n      // This ensures that the trace data is consistent for the entire duration of the route.\n      client.on('spanEnd', span => {\n        const op = spanToJSON(span).op;\n        if (span !== getRootSpan(span) || (op !== 'navigation' && op !== 'pageload')) {\n          return;\n        }\n\n        const scope = getCurrentScope();\n        const oldPropagationContext = scope.getPropagationContext();\n\n        scope.setPropagationContext({\n          ...oldPropagationContext,\n          sampled: oldPropagationContext.sampled !== undefined ? oldPropagationContext.sampled : spanIsSampled(span),\n          dsc: oldPropagationContext.dsc || getDynamicSamplingContextFromSpan(span),\n        });\n      });\n\n      if (WINDOW.location) {\n        if (instrumentPageLoad) {\n          startBrowserTracingPageLoadSpan(client, {\n            name: WINDOW.location.pathname,\n            // pageload should always start at timeOrigin (and needs to be in s, not ms)\n            startTime: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser',\n            },\n          });\n        }\n\n        if (instrumentNavigation) {\n          addHistoryInstrumentationHandler(({ to, from }) => {\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n              startingUrl = undefined;\n              return;\n            }\n\n            if (from !== to) {\n              startingUrl = undefined;\n              startBrowserTracingNavigationSpan(client, {\n                name: WINDOW.location.pathname,\n                attributes: {\n                  [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.browser',\n                },\n              });\n            }\n          });\n        }\n      }\n\n      if (markBackgroundSpan) {\n        registerBackgroundTabDetection();\n      }\n\n      if (enableInteractions) {\n        registerInteractionListener(idleTimeout, finalTimeout, childSpanTimeout, latestRoute);\n      }\n\n      if (enableInp) {\n        registerInpInteractionListener(latestRoute);\n      }\n\n      instrumentOutgoingRequests({\n        traceFetch,\n        traceXHR,\n        tracePropagationTargets: client.getOptions().tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n  };\n}) ;\n\n/**\n * Manually start a page load span.\n * This will only do something if a browser tracing integration integration has been setup.\n *\n * If you provide a custom `traceOptions` object, it will be used to continue the trace\n * instead of the default behavior, which is to look it up on the <meta> tags.\n */\nfunction startBrowserTracingPageLoadSpan(\n  client,\n  spanOptions,\n  traceOptions,\n) {\n  client.emit('startPageLoadSpan', spanOptions, traceOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if a browser tracing integration has been setup.\n */\nfunction startBrowserTracingNavigationSpan(client, spanOptions) {\n  getIsolationScope().setPropagationContext(generatePropagationContext());\n  getCurrentScope().setPropagationContext(generatePropagationContext());\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  getCurrentScope().setTransactionName(spanOptions.name);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  idleTimeout,\n  finalTimeout,\n  childSpanTimeout,\n  latestRoute,\n) {\n  let inflightInteractionSpan;\n  const registerInteractionTransaction = () => {\n    const op = 'ui.action.click';\n\n    const activeSpan = getActiveSpan();\n    const rootSpan = activeSpan && getRootSpan(activeSpan);\n    if (rootSpan) {\n      const currentRootSpanOp = spanToJSON(rootSpan).op;\n      if (['navigation', 'pageload'].includes(currentRootSpanOp )) {\n        DEBUG_BUILD &&\n          logger.warn(`[Tracing] Did not create ${op} span because a pageload or navigation span is in progress.`);\n        return undefined;\n      }\n    }\n\n    if (inflightInteractionSpan) {\n      inflightInteractionSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'interactionInterrupted');\n      inflightInteractionSpan.end();\n      inflightInteractionSpan = undefined;\n    }\n\n    if (!latestRoute.name) {\n      DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    inflightInteractionSpan = startIdleSpan(\n      {\n        name: latestRoute.name,\n        op,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.source || 'url',\n        },\n      },\n      {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout,\n      },\n    );\n  };\n\n  if (WINDOW.document) {\n    addEventListener('click', registerInteractionTransaction, { once: false, capture: true });\n  }\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, browserTracingIntegration, getMetaContent, startBrowserTracingNavigationSpan, startBrowserTracingPageLoadSpan };\n//# sourceMappingURL=browserTracingIntegration.js.map\n","import { init as init$1, addEventProcessor } from '@sentry/browser';\nimport { applySdkMetadata } from '@sentry/core';\nimport { getDomElement } from '@sentry/utils';\n\n/**\n * Inits the Svelte SDK\n */\nfunction init(options) {\n  const opts = {\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'svelte');\n\n  const client = init$1(opts);\n\n  detectAndReportSvelteKit();\n\n  return client;\n}\n\n/**\n * Adds a global event processor to detect if the SDK is initialized in a SvelteKit frontend,\n * in which case we add SvelteKit an event.modules entry to outgoing events.\n * SvelteKit detection is performed only once, when the event processor is called for the\n * first time. We cannot perform this check upfront (directly when init is called) because\n * at this time, the HTML element might not yet be accessible.\n */\nfunction detectAndReportSvelteKit() {\n  let detectedSvelteKit = undefined;\n\n  const svelteKitProcessor = event => {\n    if (detectedSvelteKit === undefined) {\n      detectedSvelteKit = isSvelteKitApp();\n    }\n    if (detectedSvelteKit) {\n      event.modules = {\n        svelteKit: 'latest',\n        ...event.modules,\n      };\n    }\n    return event;\n  };\n  svelteKitProcessor.id = 'svelteKitProcessor';\n\n  addEventProcessor(svelteKitProcessor);\n}\n\n/**\n * To actually detect a SvelteKit frontend, we search the DOM for a special\n * div that's inserted by SvelteKit when the page is rendered. It's identifyed\n * by its id, 'svelte-announcer', and it's used to improve page accessibility.\n * This div is not present when only using Svelte without SvelteKit.\n *\n * @see https://github.com/sveltejs/kit/issues/307 for more information\n */\nfunction isSvelteKitApp() {\n  return getDomElement('div#svelte-announcer') !== null;\n}\n\nexport { detectAndReportSvelteKit, init, isSvelteKitApp };\n//# sourceMappingURL=sdk.js.map\n","import { page, navigating } from '$app/stores';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '@sentry/core';\nimport { browserTracingIntegration as browserTracingIntegration$1, WINDOW, startBrowserTracingPageLoadSpan, getCurrentScope, startBrowserTracingNavigationSpan, startInactiveSpan } from '@sentry/svelte';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * A custom `BrowserTracing` integration for SvelteKit.\n */\nfunction browserTracingIntegration(\n  options = {},\n) {\n  const integration = {\n    ...browserTracingIntegration$1({\n      ...options,\n      instrumentNavigation: false,\n      instrumentPageLoad: false,\n    }),\n  };\n\n  return {\n    ...integration,\n    afterAllSetup: client => {\n      integration.afterAllSetup(client);\n\n      if (options.instrumentPageLoad !== false) {\n        _instrumentPageload(client);\n      }\n\n      if (options.instrumentNavigation !== false) {\n        _instrumentNavigations(client);\n      }\n    },\n  };\n}\n\nfunction _instrumentPageload(client) {\n  const initialPath = WINDOW && WINDOW.location && WINDOW.location.pathname;\n\n  const pageloadSpan = startBrowserTracingPageLoadSpan(client, {\n    name: initialPath,\n    op: 'pageload',\n    attributes: {\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.sveltekit',\n      [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n    },\n  });\n  if (!pageloadSpan) {\n    return;\n  }\n\n  page.subscribe(page => {\n    if (!page) {\n      return;\n    }\n\n    const routeId = page.route && page.route.id;\n\n    if (routeId) {\n      pageloadSpan.updateName(routeId);\n      pageloadSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n      getCurrentScope().setTransactionName(routeId);\n    }\n  });\n}\n\n/**\n * Use the `navigating` store to start a transaction on navigations.\n */\nfunction _instrumentNavigations(client) {\n  let routingSpan;\n\n  navigating.subscribe(navigation => {\n    if (!navigation) {\n      // `navigating` emits a 'null' value when the navigation is completed.\n      // So in this case, we can finish the routing span. If the span was an idle span,\n      // it will finish automatically and if it was user-created users also need to finish it.\n      if (routingSpan) {\n        routingSpan.end();\n        routingSpan = undefined;\n      }\n      return;\n    }\n\n    const from = navigation.from;\n    const to = navigation.to;\n\n    // for the origin we can fall back to window.location.pathname because in this emission, it still is set to the origin path\n    const rawRouteOrigin = (from && from.url.pathname) || (WINDOW && WINDOW.location && WINDOW.location.pathname);\n\n    const rawRouteDestination = to && to.url.pathname;\n\n    // We don't want to create transactions for navigations of same origin and destination.\n    // We need to look at the raw URL here because parameterized routes can still differ in their raw parameters.\n    if (rawRouteOrigin === rawRouteDestination) {\n      return;\n    }\n\n    const parameterizedRouteOrigin = from && from.route.id;\n    const parameterizedRouteDestination = to && to.route.id;\n\n    if (routingSpan) {\n      // If a routing span is still open from a previous navigation, we finish it.\n      // This is important for e.g. redirects when a new navigation root span finishes\n      // the first root span. If we don't `.end()` the previous span, it will get\n      // status 'cancelled' which isn't entirely correct.\n      routingSpan.end();\n    }\n\n    const navigationInfo = dropUndefinedKeys({\n      //  `navigation.type` denotes the origin of the navigation. e.g.:\n      //   - link (clicking on a link)\n      //   - goto (programmatic via goto() or redirect())\n      //   - popstate (back/forward navigation)\n      'sentry.sveltekit.navigation.type': navigation.type,\n      'sentry.sveltekit.navigation.from': parameterizedRouteOrigin || undefined,\n      'sentry.sveltekit.navigation.to': parameterizedRouteDestination || undefined,\n    });\n\n    startBrowserTracingNavigationSpan(client, {\n      name: parameterizedRouteDestination || rawRouteDestination || 'unknown',\n      op: 'navigation',\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.sveltekit',\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: parameterizedRouteDestination ? 'route' : 'url',\n        ...navigationInfo,\n      },\n    });\n\n    routingSpan = startInactiveSpan({\n      op: 'ui.sveltekit.routing',\n      name: 'SvelteKit Route Change',\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.sveltekit',\n        ...navigationInfo,\n      },\n      onlyIfParent: true,\n    });\n  });\n}\n\nexport { browserTracingIntegration };\n//# sourceMappingURL=browserTracingIntegration.js.map\n","import { applySdkMetadata, setTag, hasTracingEnabled } from '@sentry/core';\nimport { init as init$1, getDefaultIntegrations as getDefaultIntegrations$1, WINDOW } from '@sentry/svelte';\nimport { browserTracingIntegration } from './browserTracingIntegration.js';\n\n/**\n * Initialize the client side of the Sentry SvelteKit SDK.\n *\n * @param options Configuration options for the SDK.\n */\nfunction init(options) {\n  const opts = {\n    defaultIntegrations: getDefaultIntegrations(options),\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'sveltekit', ['sveltekit', 'svelte']);\n\n  // 1. Switch window.fetch to our fetch proxy we injected earlier\n  const actualFetch = switchToFetchProxy();\n\n  // 2. Initialize the SDK which will instrument our proxy\n  const client = init$1(opts);\n\n  // 3. Restore the original fetch now that our proxy is instrumented\n  if (actualFetch) {\n    restoreFetch(actualFetch);\n  }\n\n  setTag('runtime', 'browser');\n\n  return client;\n}\n\nfunction getDefaultIntegrations(options) {\n  // This evaluates to true unless __SENTRY_TRACING__ is text-replaced with \"false\", in which case everything inside\n  // will get treeshaken away\n  if (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n    if (hasTracingEnabled(options)) {\n      return [...getDefaultIntegrations$1(options), browserTracingIntegration()];\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * During server-side page load, we injected a <script> that wraps `window.fetch` so that\n * before a `fetch` call is forwarded to the original `window.fetch`, a function we control\n * is also invoked. This function is put onto the global object (`window._sentryFetchProxy`)\n * so that we can access it here.\n *\n * In this function we briefly set our fetch proxy as `window.fetch` so that the SDK can\n * instrument it.\n *\n * After initializing the SDK, `restoreFetch` must be called to put back whatever was on `window.fetch` before.\n *\n * @see ../server/handle.ts (https://github.com/getsentry/sentry-javascript/blob/8d92180c900c2ac98fd127d53703a415c1f191dd/packages/sveltekit/src/server/handle.ts#L60-L81)\n *\n * @returns the function that was previously on `window.fetch`.\n */\nfunction switchToFetchProxy() {\n  const globalWithSentryFetchProxy = WINDOW ;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const actualFetch = globalWithSentryFetchProxy.fetch;\n\n  if (globalWithSentryFetchProxy._sentryFetchProxy && actualFetch) {\n    globalWithSentryFetchProxy.fetch = globalWithSentryFetchProxy._sentryFetchProxy;\n    return actualFetch;\n  }\n  return undefined;\n}\n\n/**\n * Restores the function @param actualFetch to `window.fetch`\n * and puts our fetch proxy back onto `window._sentryFetchProxy`.\n */\nfunction restoreFetch(actualFetch) {\n  const globalWithSentryFetchProxy = WINDOW ;\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  globalWithSentryFetchProxy._sentryFetchProxy = globalWithSentryFetchProxy.fetch;\n  globalWithSentryFetchProxy.fetch = actualFetch;\n}\n\nexport { init };\n//# sourceMappingURL=sdk.js.map\n","import { captureException } from '@sentry/svelte';\nimport { consoleSandbox } from '@sentry/utils';\n\n// The SvelteKit default error handler just logs the error to the console\n// see: https://github.com/sveltejs/kit/blob/369e7d6851f543a40c947e033bfc4a9506fdc0a8/packages/kit/src/core/sync/write_client_manifest.js#LL127C2-L127C2\nfunction defaultErrorHandler({ error }) {\n  consoleSandbox(() => {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  });\n}\n\n/**\n * Wrapper for the SvelteKit error handler that sends the error to Sentry.\n *\n * @param handleError The original SvelteKit error handler.\n */\nfunction handleErrorWithSentry(handleError = defaultErrorHandler) {\n  return (input) => {\n    // SvelteKit 2.0 offers a reliable way to check for a 404 error:\n    if (input.status !== 404) {\n      captureException(input.error, {\n        mechanism: {\n          type: 'sveltekit',\n          handled: false,\n        },\n      });\n    }\n\n    // We're extra cautious with SafeHandleServerErrorInput - this type is not compatible with HandleServerErrorInput\n    // @ts-expect-error - we're still passing the same object, just with a different (backwards-compatible) type\n    return handleError(input);\n  };\n}\n\nexport { handleErrorWithSentry };\n//# sourceMappingURL=handleError.js.map\n","import { init, handleErrorWithSentry, replayIntegration } from '@sentry/sveltekit';\nimport type { HandleClientError } from '@sveltejs/kit';\n\ninit({\n  dsn: 'https://55a4e626777e0b3cc8a1a49313c233e0@o4504770823061504.ingest.us.io/4507562211868672',\n  enabled: import.meta.env.PROD,\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 0.5,\n\n  // Optional: Initialize Session Replay:\n  integrations: [replayIntegration()],\n  replaysSessionSampleRate: 0.1,\n  replaysOnErrorSampleRate: 1.0\n});\n\nconst myErrorHandler: HandleClientError = ({ error, event }) => {\n  console.error('An error occurred on the client side:', error, event);\n};\n\nexport const handleError = handleErrorWithSentry(myErrorHandler);\n\n// or alternatively, if you don't have a custom error handler:\n// export const handleError = handleErrorWithSentry();\n","export const matchers = {};","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<svelte:options runes={true} />\n<script>\n\timport { setContext, onMount, tick } from 'svelte';\n\timport { browser } from '$app/environment';\n\n\t// stores\n\tlet { stores, page, constructors, components = [], form, data_0 = null, data_1 = null, data_2 = null } = $props();\n\n\tif (!browser) {\n\t\tsetContext('__svelte__', stores);\n\t}\n\n\tif (browser) {\n\t\t$effect.pre(() => stores.page.set(page));\n\t} else {\n\t\tstores.page.set(page);\n\t}\n\t$effect(() => {\n\t\tstores;page;constructors;components;form;data_0;data_1;data_2;\n\t\tstores.page.notify();\n\t});\n\n\tlet mounted = $state(false);\n\tlet navigated = $state(false);\n\tlet title = $state(null);\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttick().then(() => {\n\t\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if constructors[1]}\n\t<svelte:component this={constructors[0]} bind:this={components[0]} data={data_0}>\n\t\t{#if constructors[2]}\n\t\t\t<svelte:component this={constructors[1]} bind:this={components[1]} data={data_1}>\n\t\t\t\t<svelte:component this={constructors[2]} bind:this={components[2]} data={data_2} {form} />\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={constructors[1]} bind:this={components[1]} data={data_1} {form} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={constructors[0]} bind:this={components[0]} data={data_0} {form} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","import { asClassComponent } from 'svelte/legacy';\nimport Root from './root.svelte';\nexport default asClassComponent(Root);","import * as client_hooks from '../../../src/hooks.client.ts';\n\n\nexport { matchers } from './matchers.js';\n\nexport const nodes = [\n\t() => import('./nodes/0'),\n\t() => import('./nodes/1'),\n\t() => import('./nodes/2'),\n\t() => import('./nodes/3'),\n\t() => import('./nodes/4'),\n\t() => import('./nodes/5'),\n\t() => import('./nodes/6'),\n\t() => import('./nodes/7'),\n\t() => import('./nodes/8'),\n\t() => import('./nodes/9'),\n\t() => import('./nodes/10'),\n\t() => import('./nodes/11'),\n\t() => import('./nodes/12'),\n\t() => import('./nodes/13'),\n\t() => import('./nodes/14'),\n\t() => import('./nodes/15'),\n\t() => import('./nodes/16'),\n\t() => import('./nodes/17'),\n\t() => import('./nodes/18'),\n\t() => import('./nodes/19')\n];\n\nexport const server_loads = [];\n\nexport const dictionary = {\n\t\t\"/\": [~4],\n\t\t\"/(app)/dashboard\": [~5,[2]],\n\t\t\"/(app)/dashboard/[topic]\": [~6,[2]],\n\t\t\"/playground\": [~7,[3]],\n\t\t\"/playground/options-api\": [8,[3]],\n\t\t\"/playground/options-api/(pages)/brokerage-account\": [11,[3]],\n\t\t\"/playground/options-api/(pages)/brokerage\": [10,[3]],\n\t\t\"/playground/options-api/(pages)/broker\": [9,[3]],\n\t\t\"/playground/options-api/(pages)/cash-or-nothing-option\": [12,[3]],\n\t\t\"/playground/options-api/deploy\": [13,[3]],\n\t\t\"/playground/streams-api\": [14,[3]],\n\t\t\"/playground/streams-api/(pages)/data-stream\": [15,[3]],\n\t\t\"/playground/streams-api/deploy\": [19,[3]],\n\t\t\"/playground/streams-api/(pages)/session\": [16,[3]],\n\t\t\"/playground/streams-api/(pages)/simple-subscriber\": [17,[3]],\n\t\t\"/playground/streams-api/(pages)/subscription-batch\": [18,[3]]\n\t};\n\nexport const hooks = {\n\thandleError: client_hooks.handleError || (({ error }) => { console.error(error) }),\n\n\treroute: (() => {})\n};\n\nexport { default as root } from '../root.js';"],"file":"_app/immutable/entry/app.Dj5x6yxe.js"}