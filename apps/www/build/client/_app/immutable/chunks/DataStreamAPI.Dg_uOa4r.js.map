{"version":3,"file":"DataStreamAPI.Dg_uOa4r.js","sources":["../../../../../../src/routes/playground/streams-api/components/DataStreamAPI.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { Button } from '$lib/components/ui/button';\n  import { Input } from '$lib/components/ui/input';\n  import { Label } from '$lib/components/ui/label';\n  import { cn, formatOutputDate } from '$lib/utils';\n  import { createDataStream } from '$lib/wrappers';\n  import { Address, fromNano } from '@ton/core';\n  import { toast } from 'svelte-sonner';\n  import { derived, writable } from 'svelte/store';\n  import Output from '../../components/Output.svelte';\n  import Section from './Section.svelte';\n\n  const streamAddress = writable('');\n  const stream = createDataStream(streamAddress);\n\n  const shouldDisableActions = derived([streamAddress], ([$streamAddress]) => !$streamAddress);\n\n  let output = $state<{ date: string; message: string }[]>([]);\n\n  async function handleSessionAddressSubmit(\n    e: SubmitEvent & {\n      currentTarget: EventTarget & HTMLFormElement;\n    }\n  ) {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n\n    const subscriberAddress = formData.get('subscriberAddress') as string;\n\n    const result = await $stream.getSessionAddress(Address.parse(subscriberAddress));\n    output.unshift({\n      date: formatOutputDate(new Date()),\n      message: JSON.stringify(result, null, 2)\n    });\n  }\n\n  async function handleBatchAddressSubmit(\n    e: SubmitEvent & {\n      currentTarget: EventTarget & HTMLFormElement;\n    }\n  ) {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n\n    const batchId = formData.get('batchId') as string;\n\n    const result = await $stream.getBatchAddress(BigInt(batchId));\n    output.unshift({\n      date: formatOutputDate(new Date()),\n      message: JSON.stringify(result, null, 2)\n    });\n  }\n</script>\n\n<Section title=\"Data Stream\">\n  <Label class=\"grid gap-2 mt-4\">\n    Stream Address\n    <Input\n      type=\"text\"\n      placeholder=\"0QDCiYqpPo9esMDX35_BWYcsR1NKS7lbnPcPF6IMH8MNx2Lj\"\n      class=\"w-fit\"\n      bind:value={$streamAddress}\n    />\n  </Label>\n  <p class=\"mt-3 mb-8 text-ds-gray-900 max-w-[768px]\">\n    The Data Stream smart contract makes it easy to securely stream data and manage subscriptions on\n    the blockchain. Publishers can deploy data batches, handle sessions, and manage subscriptions\n    effortlessly. It ensures safe handling of deposits and notifications, offering a solid framework\n    for real-time data interaction. Key features include verifying publishers, creating batches,\n    deploying sessions, and automating notifications.\n    <br />\n    <br />\n    For more details, check out the\n    <a\n      class=\"underline\"\n      href=\"https://github.com/dreamqip/nenuma/blob/main/contracts/contracts/data_stream.tact\"\n      target=\"_blank\">contract code</a\n    > and its features here.\n  </p>\n  <div\n    class=\"flex gap-4 pb-6 items-end overflow-x-auto snap-x snap-mandatory [-webkit-overflow-scrolling:_touch] scroll-smooth\"\n  >\n    <a\n      class={cn('snap-start', $shouldDisableActions && 'cursor-not-allowed')}\n      href={`/playground/streams-api/deploy?contract=stream&title=${encodeURIComponent('Data Stream')}&subtitle=stream`}\n    >\n      <Button class=\"bg-ds-teal-800 hover:bg-ds-teal-700 text-white\">Deploy Stream</Button>\n    </a>\n\n    <a\n      class={cn('snap-start', $shouldDisableActions && 'cursor-not-allowed')}\n      href={$shouldDisableActions\n        ? undefined\n        : `/playground/streams-api/deploy?contract=batch&title=${encodeURIComponent('Subscription Batch')}&subtitle=batch&streamAddress=${$streamAddress}`}\n    >\n      <Button\n        disabled={$shouldDisableActions}\n        class=\"bg-ds-teal-800 hover:bg-ds-teal-700 text-white\">Deploy Batch</Button\n      >\n    </a>\n\n    <a\n      class={cn('snap-start', $shouldDisableActions && 'cursor-not-allowed')}\n      href={$shouldDisableActions\n        ? undefined\n        : `/playground/streams-api/deploy?contract=session&title=${encodeURIComponent('Session')}&subtitle=session&streamAddress=${$streamAddress}`}\n    >\n      <Button\n        disabled={$shouldDisableActions}\n        class=\"bg-ds-teal-800 hover:bg-ds-teal-700 text-white\">Deploy Session</Button\n      >\n    </a>\n\n    <a\n      class={cn('snap-start', $shouldDisableActions && 'cursor-not-allowed')}\n      href={$shouldDisableActions\n        ? undefined\n        : `/playground/streams-api/deploy?contract=candlestick&title=${encodeURIComponent('Candlestick')}&subtitle=candlestick&streamAddress=${$streamAddress}`}\n    >\n      <Button\n        disabled={$shouldDisableActions}\n        class=\"bg-ds-teal-800 hover:bg-ds-teal-700 text-white\">Publish Candlestick</Button\n      >\n    </a>\n\n    <Button\n      disabled={$shouldDisableActions}\n      class=\"bg-ds-blue-800 snap-start text-white hover:bg-ds-blue-700\"\n      onclick={async () => {\n        try {\n          const result = await $stream.getTopic();\n          output.unshift({\n            date: formatOutputDate(new Date()),\n            message: JSON.stringify(result, null, 2)\n          });\n        } catch (error) {\n          if (error instanceof Error) {\n            toast.error(error.message);\n          }\n        }\n      }}>Get Topic</Button\n    >\n\n    <Button\n      disabled={$shouldDisableActions}\n      class=\"bg-ds-blue-800 snap-start text-white hover:bg-ds-blue-700\"\n      onclick={async () => {\n        const result = await $stream.getBalance();\n        output.unshift({\n          date: formatOutputDate(new Date()),\n          message: JSON.stringify(`${fromNano(result)} TON`, null, 2)\n        });\n      }}>Get Balance</Button\n    >\n\n    <Button\n      disabled={$shouldDisableActions}\n      class=\"bg-ds-blue-800 snap-start text-white hover:bg-ds-blue-700\"\n      onclick={async () => {\n        const result = await $stream.getNextBatchId();\n        output.unshift({\n          date: formatOutputDate(new Date()),\n          message: JSON.stringify(result.toString(), null, 2)\n        });\n      }}>Get Next Batch Id</Button\n    >\n\n    <form class=\"flex snap-start flex-col gap-4\" onsubmit={handleSessionAddressSubmit}>\n      <Label class=\"grid gap-2\">\n        Subscriber Address\n        <Input\n          type=\"text\"\n          name=\"subscriberAddress\"\n          placeholder=\"Enter a subscriber address\"\n          required\n        />\n      </Label>\n      <Button\n        disabled={$shouldDisableActions}\n        type=\"submit\"\n        class=\"bg-ds-blue-800 text-white hover:bg-ds-blue-700\">Get Session Address</Button\n      >\n    </form>\n\n    <form class=\"flex snap-start flex-col gap-4\" onsubmit={handleBatchAddressSubmit}>\n      <Label class=\"grid gap-2\">\n        Batch ID\n        <Input type=\"number\" name=\"batchId\" placeholder=\"Enter a batch ID\" required />\n      </Label>\n      <Button\n        disabled={$shouldDisableActions}\n        type=\"submit\"\n        class=\"bg-ds-blue-800 text-white hover:bg-ds-blue-700\">Get Batch Address</Button\n      >\n    </form>\n\n    <Button\n      disabled={$shouldDisableActions}\n      class=\"bg-ds-blue-800 snap-start text-white hover:bg-ds-blue-700\"\n      onclick={async () => {\n        const result = await $stream.getBatches();\n\n        const batches: {\n          [key: string]: string;\n        }[] = [];\n        for (const [address, info] of result) {\n          batches.push({\n            [address.toString({ testOnly: true, bounceable: false })]:\n              info.subscriptionsCount.toString()\n          });\n        }\n\n        output.unshift({\n          date: formatOutputDate(new Date()),\n          message: JSON.stringify(batches, null, 2)\n        });\n      }}>Get Batches</Button\n    >\n  </div>\n\n  <Output bind:output />\n</Section>\n"],"names":["streamAddress","writable","stream","createDataStream","shouldDisableActions","derived","$streamAddress","output","$.source","$.proxy","handleSessionAddressSubmit","e","subscriberAddress","result","$stream","Address","formatOutputDate","handleBatchAddressSubmit","batchId","$.template_effect","$.set_class","a_1","cn","$shouldDisableActions","$.set_attribute","a_2","a_3","a_4","$.get","error","toast","fromNano","batches","address","info"],"mappings":"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"}