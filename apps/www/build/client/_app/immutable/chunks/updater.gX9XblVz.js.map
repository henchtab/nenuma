{"version":3,"file":"updater.gX9XblVz.js","sources":["../../../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/overridable.js","../../../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/store/toWritableStores.js","../../../../../../../../node_modules/.pnpm/bits-ui@0.21.12_svelte@5.0.0-next.166/node_modules/bits-ui/dist/internal/object.js","../../../../../../../../node_modules/.pnpm/bits-ui@0.21.12_svelte@5.0.0-next.166/node_modules/bits-ui/dist/internal/updater.js"],"sourcesContent":["import { withGet } from './withGet.js';\nexport const overridable = (_store, onChange) => {\n    const store = withGet(_store);\n    const update = (updater, sideEffect) => {\n        store.update((curr) => {\n            const next = updater(curr);\n            let res = next;\n            if (onChange) {\n                res = onChange({ curr, next });\n            }\n            sideEffect?.(res);\n            return res;\n        });\n    };\n    const set = (curr) => {\n        update(() => curr);\n    };\n    return {\n        ...store,\n        update,\n        set,\n    };\n};\n","import { writable } from 'svelte/store';\nimport { withGet } from '../withGet.js';\n/**\n * Given an object of properties, returns an object of writable stores\n * with the same properties and values.\n */\nexport function toWritableStores(properties) {\n    const result = {};\n    Object.keys(properties).forEach((key) => {\n        const propertyKey = key;\n        const value = properties[propertyKey];\n        result[propertyKey] = withGet(writable(value));\n    });\n    return result;\n}\n","export function removeUndefined(obj) {\n    const result = {};\n    for (const key in obj) {\n        const value = obj[key];\n        if (value !== undefined) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\n","export function getOptionUpdater(options) {\n    return function (key, value) {\n        if (value === undefined)\n            return;\n        const store = options[key];\n        if (store) {\n            store.set(value);\n        }\n    };\n}\n"],"names":["overridable","_store","onChange","store","withGet","update","updater","sideEffect","curr","next","res","toWritableStores","properties","result","key","propertyKey","value","writable","removeUndefined","obj","getOptionUpdater","options"],"mappings":"uYACY,MAACA,EAAc,CAACC,EAAQC,IAAa,CAC7C,MAAMC,EAAQC,EAAQH,CAAM,EACtBI,EAAS,CAACC,EAASC,IAAe,CACpCJ,EAAM,OAAQK,GAAS,CACnB,MAAMC,EAAOH,EAAQE,CAAI,EACzB,IAAIE,EAAMD,EACV,OAAIP,IACAQ,EAAMR,EAAS,CAAE,KAAAM,EAAM,KAAAC,CAAM,CAAA,GAEjCF,GAAA,MAAAA,EAAaG,GACNA,CACnB,CAAS,CACT,EAII,MAAO,CACH,GAAGP,EACH,OAAAE,EACA,IANSG,GAAS,CAClBH,EAAO,IAAMG,CAAI,CACzB,CAKA,CACA,EChBO,SAASG,EAAiBC,EAAY,CACzC,MAAMC,EAAS,CAAA,EACf,cAAO,KAAKD,CAAU,EAAE,QAASE,GAAQ,CACrC,MAAMC,EAAcD,EACdE,EAAQJ,EAAWG,CAAW,EACpCF,EAAOE,CAAW,EAAIX,EAAQa,EAASD,CAAK,CAAC,CACrD,CAAK,EACMH,CACX,CCdO,SAASK,EAAgBC,EAAK,CACjC,MAAMN,EAAS,CAAA,EACf,UAAWC,KAAOK,EAAK,CACnB,MAAMH,EAAQG,EAAIL,CAAG,EACjBE,IAAU,SACVH,EAAOC,CAAG,EAAIE,EAErB,CACD,OAAOH,CACX,CCTO,SAASO,EAAiBC,EAAS,CACtC,OAAO,SAAUP,EAAKE,EAAO,CACzB,GAAIA,IAAU,OACV,OACJ,MAAMb,EAAQkB,EAAQP,CAAG,EACrBX,GACAA,EAAM,IAAIa,CAAK,CAE3B,CACA"}