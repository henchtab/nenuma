{"version":3,"file":"index2-d8GdKNTl.js","sources":["../../../../../../node_modules/.pnpm/svelte@5.0.0-next.166/node_modules/svelte/src/store/index.js","../../../../../../node_modules/.pnpm/svelte@5.0.0-next.166/node_modules/svelte/src/internal/client/reactivity/equality.js"],"sourcesContent":["import { noop, run_all } from '../internal/shared/utils.js';\nimport { safe_not_equal } from '../internal/client/reactivity/equality.js';\nimport { subscribe_to_store } from './utils.js';\n\n/**\n * @type {Array<import('./private').SubscribeInvalidateTuple<any> | any>}\n */\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public').StartStopNotifier<T>} [start]\n * @returns {import('./public').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public').StartStopNotifier<T>} [start]\n * @returns {import('./public').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public').Unsubscriber | null} */\n\tlet stop = null;\n\n\t/** @type {Set<import('./private').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\n\t/**\n\t * @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(/** @type {T} */ (value)));\n\t}\n\n\t/**\n\t * @param {import('./public').Subscriber<T>} run\n\t * @param {import('./private').Invalidator<T>} [invalidate]\n\t * @returns {import('./public').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(/** @type {T} */ (value));\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\t/** @type {T[]} */\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = typeof result === 'function' ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe_to_store(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public').Readable<T>} store  - store to make readonly\n * @returns {import('./public').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\t// @ts-expect-error TODO i suspect the bind is unnecessary\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public').Readable<T>} store\n * @returns {T}\n */\nexport function get(store) {\n\tlet value;\n\tsubscribe_to_store(store, (_) => (value = _))();\n\t// @ts-expect-error\n\treturn value;\n}\n","/** @type {import('#client').Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/** @type {import('#client').Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n"],"names":["e"],"mappings":"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"}