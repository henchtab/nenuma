{"version":3,"file":"context-EGUegBOV.js","sources":["../../../../../../node_modules/.pnpm/@tanstack+svelte-query@5.51.1_svelte@5.0.0-next.166/node_modules/@tanstack/svelte-query/dist/context.js","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/query.ts","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/removable.ts","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/notifyManager.ts","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/retryer.ts","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/onlineManager.ts","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/focusManager.ts","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/utils.ts","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/subscribable.ts"],"sourcesContent":["import { getContext, setContext } from 'svelte';\nimport { readable } from 'svelte/store';\nconst _contextKey = '$$_queryClient';\n/** Retrieves a Client from Svelte's context */\nexport const getQueryClientContext = () => {\n    const client = getContext(_contextKey);\n    if (!client) {\n        throw new Error('No QueryClient was found in Svelte context. Did you forget to wrap your component with QueryClientProvider?');\n    }\n    return client;\n};\n/** Sets a QueryClient on Svelte's context */\nexport const setQueryClientContext = (client) => {\n    setContext(_contextKey, client);\n};\nconst _isRestoringContextKey = '$$_isRestoring';\n/** Retrieves a `isRestoring` from Svelte's context */\nexport const getIsRestoringContext = () => {\n    try {\n        const isRestoring = getContext(_isRestoringContextKey);\n        return isRestoring ? isRestoring : readable(false);\n    }\n    catch (error) {\n        return readable(false);\n    }\n};\n/** Sets a `isRestoring` on Svelte's context */\nexport const setIsRestoringContext = (isRestoring) => {\n    setContext(_isRestoringContextKey, isRestoring);\n};\n","import {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { canFetch, createRetryer, isCancelledError } from './retryer'\nimport { Removable } from './removable'\nimport type {\n  CancelOptions,\n  DefaultError,\n  FetchStatus,\n  InitialDataFunction,\n  OmitKeyof,\n  QueryFunction,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n} from './types'\nimport type { QueryCache } from './queryCache'\nimport type { QueryObserver } from './queryObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  cache: QueryCache\n  queryKey: TQueryKey\n  queryHash: string\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = DefaultError> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: FetchMeta | null\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n    query: Query,\n  ) => void\n}\n\nexport type FetchDirection = 'forward' | 'backward'\n\nexport interface FetchMeta {\n  fetchMore?: { direction: FetchDirection }\n}\n\nexport interface FetchOptions<TData = unknown> {\n  cancelRefetch?: boolean\n  meta?: FetchMeta\n  initialPromise?: Promise<TData>\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: FetchMeta\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state: QueryState<TData, TError>\n  isFetchingOptimistic?: boolean\n\n  #initialState: QueryState<TData, TError>\n  #revertState?: QueryState<TData, TError>\n  #cache: QueryCache\n  #retryer?: Retryer<TData>\n  observers: Array<QueryObserver<any, any, any, any, any>>\n  #defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  #abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.#abortSignalConsumed = false\n    this.#defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.#cache = config.cache\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.#initialState = config.state || getDefaultState(this.options)\n    this.state = this.#initialState\n    this.scheduleGc()\n  }\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  get promise(): Promise<TData> | undefined {\n    return this.#retryer?.promise\n  }\n\n  setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.#cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.#dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.#dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.#retryer?.promise\n    this.#retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.#initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false,\n    )\n  }\n\n  isDisabled(): boolean {\n    return this.getObserversCount() > 0 && !this.isActive()\n  }\n\n  isStale(): boolean {\n    if (this.state.isInvalidated) {\n      return true\n    }\n\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale,\n      )\n    }\n\n    return this.state.data === undefined\n  }\n\n  isStaleByTime(staleTime = 0): boolean {\n    return (\n      this.state.isInvalidated ||\n      this.state.data === undefined ||\n      !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n    )\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.#cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true })\n          } else {\n            this.#retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.#cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: 'invalidate' })\n    }\n  }\n\n  fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions<TQueryFnData>,\n  ): Promise<TData> {\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.data !== undefined && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetch\n        this.cancel({ silent: true })\n      } else if (this.#retryer) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.#retryer.continueRetry()\n        // Return current promise if we are already fetching\n        return this.#retryer.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = new AbortController()\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true\n          return abortController.signal\n        },\n      })\n    }\n\n    // Create fetch function\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions)\n\n      // Create query function context\n      const queryFnContext: OmitKeyof<\n        QueryFunctionContext<TQueryKey>,\n        'signal'\n      > = {\n        queryKey: this.queryKey,\n        meta: this.meta,\n      }\n\n      addSignalProperty(queryFnContext)\n\n      this.#abortSignalConsumed = false\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn as QueryFunction<any>,\n          queryFnContext as QueryFunctionContext<TQueryKey>,\n          this as unknown as Query,\n        )\n      }\n\n      return queryFn(queryFnContext as QueryFunctionContext<TQueryKey>)\n    }\n\n    // Trigger behavior hook\n    const context: OmitKeyof<\n      FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n      'signal'\n    > = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn,\n    }\n\n    addSignalProperty(context)\n\n    this.options.behavior?.onFetch(\n      context as FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n      this as unknown as Query,\n    )\n\n    // Store state in case the current fetch needs to be reverted\n    this.#revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.#dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    const onError = (error: TError | { silent?: boolean }) => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: 'error',\n          error: error as TError,\n        })\n      }\n\n      if (!isCancelledError(error)) {\n        // Notify cache callback\n        this.#cache.config.onError?.(\n          error as any,\n          this as Query<any, any, any, any>,\n        )\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error as any,\n          this as Query<any, any, any, any>,\n        )\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc()\n      }\n      this.isFetchingOptimistic = false\n    }\n\n    // Try to fetch the data\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise as\n        | Promise<TData>\n        | undefined,\n      fn: context.fetchFn as () => Promise<TData>,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === undefined) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n            )\n          }\n          onError(new Error(`${this.queryHash} data is undefined`) as any)\n          return\n        }\n\n        this.setData(data)\n\n        // Notify cache callback\n        this.#cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error as any,\n          this as Query<any, any, any, any>,\n        )\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc()\n        }\n        this.isFetchingOptimistic = false\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.#dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true,\n    })\n\n    return this.#retryer.start()\n  }\n\n  #dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null,\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n        case 'error':\n          const error = action.error as unknown\n\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: 'idle' }\n          }\n\n          return {\n            ...state,\n            error: error as TError,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error as TError,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate()\n      })\n\n      this.#cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nexport function fetchState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  data: TData | undefined,\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? 'fetching' : 'paused',\n    ...(data === undefined &&\n      ({\n        error: null,\n        status: 'pending',\n      } as const)),\n  } as const\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = data !== undefined\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'pending',\n    fetchStatus: 'idle',\n  }\n}\n","import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  gcTime!: number\n  #gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.gcTime)\n    }\n  }\n\n  protected updateGcTime(newGcTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no gcTime is set\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout)\n      this.#gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n","// TYPES\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn: ScheduleFunction = (cb) => setTimeout(cb, 0)\n\n  const setScheduler = (fn: ScheduleFunction) => {\n    scheduleFn = fn\n  }\n\n  const batch = <T>(callback: () => T): T => {\n    let result\n    transactions++\n    try {\n      result = callback()\n    } finally {\n      transactions--\n      if (!transactions) {\n        flush()\n      }\n    }\n    return result\n  }\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  const batchCalls = <T extends Array<unknown>>(\n    callback: BatchCallsCallback<T>,\n  ): BatchCallsCallback<T> => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args)\n      })\n    }\n  }\n\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  const setNotifyFunction = (fn: NotifyFunction) => {\n    notifyFn = fn\n  }\n\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  const setBatchNotifyFunction = (fn: BatchNotifyFunction) => {\n    batchNotifyFn = fn\n  }\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction,\n    setScheduler,\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n","import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { isServer, sleep } from './utils'\nimport type { CancelOptions, DefaultError, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = DefaultError> {\n  fn: () => TData | Promise<TData>\n  initialPromise?: Promise<TData>\n  abort?: () => void\n  onError?: (error: TError) => void\n  onSuccess?: (data: TData) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n  canRun: () => boolean\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n  canStart: () => boolean\n  start: () => Promise<TData>\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = DefaultError>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let isResolved = false\n  let continueFn: ((value?: unknown) => void) | undefined\n  let promiseResolve: (data: TData) => void\n  let promiseReject: (error: TError) => void\n\n  const promise = new Promise<TData>((outerResolve, outerReject) => {\n    promiseResolve = outerResolve\n    promiseReject = outerReject\n  })\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions))\n\n      config.abort?.()\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const canContinue = () =>\n    focusManager.isFocused() &&\n    (config.networkMode === 'always' || onlineManager.isOnline()) &&\n    config.canRun()\n\n  const canStart = () => canFetch(config.networkMode) && config.canRun()\n\n  const resolve = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onSuccess?.(value)\n      continueFn?.()\n      promiseResolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onError?.(value)\n      continueFn?.()\n      promiseReject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value)\n        }\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // we can re-use config.initialPromise on the first call of run()\n    const initialPromise =\n      failureCount === 0 ? config.initialPromise : undefined\n\n    // Execute query\n    try {\n      promiseOrValue = initialPromise ?? config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? (isServer ? 0 : 3)\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            return canContinue() ? undefined : pause()\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      continueFn?.()\n      return promise\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      // Start loop\n      if (canStart()) {\n        run()\n      } else {\n        pause().then(run)\n      }\n      return promise\n    },\n  }\n}\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line ts/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line ts/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line ts/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n","import type {\n  DefaultError,\n  Enabled,\n  FetchStatus,\n  MutationKey,\n  MutationStatus,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n  StaleTime,\n} from './types'\nimport type { Mutation } from './mutation'\nimport type { FetchOptions, Query } from './query'\n\n// TYPES\n\nexport interface QueryFilters {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: QueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (mutation: Mutation<any, any, any>) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Filter by mutation status\n   */\n  status?: MutationStatus\n}\n\nexport type Updater<TInput, TOutput> = TOutput | ((input: TInput) => TOutput)\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in globalThis\n\nexport function noop(): undefined {\n  return undefined\n}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as (_: TInput) => TOutput)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function resolveStaleTime<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  staleTime: undefined | StaleTime<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): number | undefined {\n  return typeof staleTime === 'function' ? staleTime(query) : staleTime\n}\n\nexport function resolveEnabled<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  enabled: undefined | Enabled<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): boolean | undefined {\n  return typeof enabled === 'function' ? enabled(query) : enabled\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, status, predicate, mutationKey } = filters\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (status && mutation.state.status !== status) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: Pick<QueryOptions<any, any, any, any>, 'queryKeyHashFn'>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query & mutation keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashKey(queryKey: QueryKey | MutationKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean\nexport function partialMatchKey(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]))\n  }\n\n  return false\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (array || (isPlainObject(a) && isPlainObject(b))) {\n    const aItems = array ? a : Object.keys(a)\n    const aSize = aItems.length\n    const bItems = array ? b : Object.keys(b)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      if (\n        ((!array && aItems.includes(key)) || array) &&\n        a[key] === undefined &&\n        b[key] === undefined\n      ) {\n        copy[key] = undefined\n        equalItems++\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key])\n        if (copy[key] === a[key] && a[key] !== undefined) {\n          equalItems++\n        }\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy\n  }\n\n  return b\n}\n\n/**\n * Shallow compare objects.\n */\nexport function shallowEqualObjects<T extends Record<string, any>>(\n  a: T,\n  b: T | undefined,\n): boolean {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown) {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Object {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has no constructor\n  const ctor = o.constructor\n  if (ctor === undefined) {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Handles Objects created by Object.create(<arbitrary prototype>)\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms)\n  })\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data) as TData\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n\nexport function keepPreviousData<T>(\n  previousData: T | undefined,\n): T | undefined {\n  return previousData\n}\n\nexport function addToEnd<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [...items, item]\n  return max && newItems.length > max ? newItems.slice(1) : newItems\n}\n\nexport function addToStart<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [item, ...items]\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems\n}\n\nexport const skipToken = Symbol()\nexport type SkipToken = typeof skipToken\n\nexport const ensureQueryFn = <\n  TQueryFnData = unknown,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: {\n    queryFn?: QueryFunction<TQueryFnData, TQueryKey> | SkipToken\n    queryHash?: string\n  },\n  fetchOptions?: FetchOptions<TQueryFnData>,\n): QueryFunction<TQueryFnData, TQueryKey> => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`,\n      )\n    }\n  }\n\n  // if we attempt to retry a fetch that was triggered from an initialPromise\n  // when we don't have a queryFn yet, we can't retry, so we just return the already rejected initialPromise\n  // if an observer has already mounted, we will be able to retry with that queryFn\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise!\n  }\n\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () =>\n      Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))\n  }\n\n  return options.queryFn\n}\n","type Listener = () => void\n\nexport class Subscribable<TListener extends Function = Listener> {\n  protected listeners: Set<TListener>\n\n  constructor() {\n    this.listeners = new Set()\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n"],"names":[],"mappings":"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"}