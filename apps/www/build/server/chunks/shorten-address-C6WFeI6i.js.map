{"version":3,"file":"shorten-address-C6WFeI6i.js","sources":["../../../../src/lib/shorten-address.ts","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/id.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/array.js","../../../../../../node_modules/.pnpm/@tanstack+svelte-query@5.51.1_svelte@5.0.0-next.166/node_modules/@tanstack/svelte-query/dist/createQuery.js","../../../../../../node_modules/.pnpm/@tanstack+svelte-query@5.51.1_svelte@5.0.0-next.166/node_modules/@tanstack/svelte-query/dist/createBaseQuery.js","../../../../../../node_modules/.pnpm/@tanstack+svelte-query@5.51.1_svelte@5.0.0-next.166/node_modules/@tanstack/svelte-query/dist/utils.js","../../../../../../node_modules/.pnpm/@tanstack+svelte-query@5.51.1_svelte@5.0.0-next.166/node_modules/@tanstack/svelte-query/dist/useQueryClient.js","../../../../../../node_modules/.pnpm/@tanstack+svelte-query@5.51.1_svelte@5.0.0-next.166/node_modules/@tanstack/svelte-query/dist/useIsRestoring.js","../../../../../node_modules/.pnpm/nanoid@5.0.7/node_modules/nanoid/non-secure/index.js","../../../../../node_modules/.pnpm/@tanstack+query-core@5.51.1/node_modules/@tanstack/query-core/src/queryObserver.ts"],"sourcesContent":["import { Address } from '@ton/ton';\n\nclass InvalidAddressError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAddressError';\n  }\n}\n\nconst addressFormatOptions = {\n  testOnly: true,\n  bounceable: false\n};\n\nfunction formatAddressString(\n  addressString: string,\n  prefixLength: number,\n  suffixLength: number\n): string {\n  return `${addressString.slice(0, prefixLength)}...${addressString.slice(-suffixLength)}`;\n}\n\nfunction getAddressString(address: string | Address): string {\n  if (Address.isAddress(address)) {\n    return address.toString(addressFormatOptions);\n  }\n\n  try {\n    return Address.parse(address).toString(addressFormatOptions);\n  } catch (error) {\n    throw new InvalidAddressError(`${address} is not a valid address.`);\n  }\n}\n\nexport function shortenAddress(\n  address: string | Address,\n  prefixLength: number = 6,\n  suffixLength: number = 6\n): string {\n  const addressString = getAddressString(address);\n  return formatAddressString(addressString, prefixLength, suffixLength);\n}\n","import { nanoid } from 'nanoid/non-secure';\n/**\n * A function that generates a random id\n * @returns An id\n */\nexport function generateId() {\n    return nanoid(10);\n}\nexport function generateIds(args) {\n    return args.reduce((acc, curr) => {\n        acc[curr] = generateId();\n        return acc;\n    }, {});\n}\nexport function stringifiedIdObjType(args) {\n    return `Record<${args.map((arg) => `\"${arg}\"`).join(' | ')}, string>`;\n}\n","import { dequal as deepEqual } from 'dequal';\n/**\n * Returns the element some number before the given index. If the target index is out of bounds:\n *   - If looping is disabled, the first element will be returned.\n *   - If looping is enabled, the last element will be returned.\n * @param array the array.\n * @param currentIndex the index of the current element.\n * @param increment the number of elements to move forward.\n * @param loop loop to the beginning of the array if the target index is out of bounds?\n */\nexport function back(array, index, increment, loop = true) {\n    const previousIndex = index - increment;\n    if (previousIndex <= 0) {\n        return loop ? array[array.length - 1] : array[0];\n    }\n    return array[previousIndex];\n}\n/**\n * Returns the element some number after the given index. If the target index is out of bounds:\n *   - If looping is disabled, the last element will be returned.\n *   - If looping is enabled, the first element will be returned.\n * @param array the array.\n * @param currentIndex the index of the current element.\n * @param increment the number of elements to move forward.\n * @param loop loop to the beginning of the array if the target index is out of bounds?\n */\nexport function forward(array, index, increment, loop = true) {\n    const nextIndex = index + increment;\n    if (nextIndex > array.length - 1) {\n        return loop ? array[0] : array[array.length - 1];\n    }\n    return array[nextIndex];\n}\n/**\n * Returns the array element after to the given index.\n * @param array the array.\n * @param currentIndex the index of the current element.\n * @param loop loop to the beginning of the array if the next index is out of bounds?\n */\nexport function next(array, index, loop = true) {\n    if (index === array.length - 1) {\n        return loop ? array[0] : array[index];\n    }\n    return array[index + 1];\n}\n/**\n * Returns the array element prior to the given index.\n * @param array the array.\n * @param currentIndex the index of the current element.\n * @param loop loop to the end of the array if the previous index is out of bounds?\n */\nexport function prev(array, currentIndex, loop = true) {\n    if (currentIndex <= 0) {\n        return loop ? array[array.length - 1] : array[0];\n    }\n    return array[currentIndex - 1];\n}\n/**\n * Returns the last element in an array.\n * @param array the array.\n */\nexport function last(array) {\n    return array[array.length - 1];\n}\n/**\n * Wraps an array around itself at a given starting index.\n * @example ```ts\n * wrapArray(['a', 'b', 'c', 'd'], 2);\n * // ['c', 'd', 'a', 'b']\n * ```\n * @see https://github.com/radix-ui/primitives\n */\nexport function wrapArray(array, startIndex) {\n    return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n/**\n * Toggles an item in an array. If the item is already in the array,\n * it is removed. Otherwise, it is added.\n * @param item The item to toggle.\n * @param array The array to toggle the item in.\n * @returns The updated array with the item toggled.\n * @template T The type of the items in the array.\n * @example ```typescript\n * const arr = [1, 2, 3];\n * const newArr = toggle(2, arr);\n * // newArr = [1, 3]\n * ```\n */\nexport function toggle(item, array, compare = deepEqual) {\n    const itemIdx = array.findIndex((innerItem) => compare(innerItem, item));\n    if (itemIdx !== -1) {\n        array.splice(itemIdx, 1);\n    }\n    else {\n        array.push(item);\n    }\n    return array;\n}\n/**\n * Splits an array into chunks of a given size.\n * @param arr The array to split.\n * @param size The size of each chunk.\n * @returns An array of arrays, where each sub-array has `size` elements from the original array.\n * @example ```ts\n * const arr = [1, 2, 3, 4, 5, 6, 7, 8];\n * const chunks = chunk(arr, 3);\n * // chunks = [[1, 2, 3], [4, 5, 6], [7, 8]]\n * ```\n */\nexport function chunk(arr, size) {\n    const result = [];\n    for (let i = 0; i < arr.length; i += size) {\n        result.push(arr.slice(i, i + size));\n    }\n    return result;\n}\n/**\n * Checks if the given index is valid for the given array.\n *\n * @param index - The index to check\n * @param arr - The array to check\n */\nexport function isValidIndex(index, arr) {\n    return index >= 0 && index < arr.length;\n}\n","import { QueryObserver } from '@tanstack/query-core';\nimport { createBaseQuery } from './createBaseQuery';\nexport function createQuery(options, queryClient) {\n    return createBaseQuery(options, QueryObserver, queryClient);\n}\n","import { derived, get, readable } from 'svelte/store';\nimport { notifyManager } from '@tanstack/query-core';\nimport { useIsRestoring } from './useIsRestoring';\nimport { useQueryClient } from './useQueryClient';\nimport { isSvelteStore } from './utils';\nexport function createBaseQuery(options, Observer, queryClient) {\n    /** Load query client */\n    const client = useQueryClient(queryClient);\n    const isRestoring = useIsRestoring();\n    /** Converts options to a svelte store if not already a store object */\n    const optionsStore = isSvelteStore(options) ? options : readable(options);\n    /** Creates a store that has the default options applied */\n    const defaultedOptionsStore = derived([optionsStore, isRestoring], ([$optionsStore, $isRestoring]) => {\n        const defaultedOptions = client.defaultQueryOptions($optionsStore);\n        defaultedOptions._optimisticResults = $isRestoring\n            ? 'isRestoring'\n            : 'optimistic';\n        return defaultedOptions;\n    });\n    /** Creates the observer */\n    const observer = new Observer(client, get(defaultedOptionsStore));\n    defaultedOptionsStore.subscribe(($defaultedOptions) => {\n        // Do not notify on updates because of changes in the options because\n        // these changes should already be reflected in the optimistic result.\n        observer.setOptions($defaultedOptions, { listeners: false });\n    });\n    const result = derived(isRestoring, ($isRestoring, set) => {\n        const unsubscribe = $isRestoring\n            ? () => undefined\n            : observer.subscribe(notifyManager.batchCalls(set));\n        observer.updateResult();\n        return unsubscribe;\n    });\n    /** Subscribe to changes in result and defaultedOptionsStore */\n    const { subscribe } = derived([result, defaultedOptionsStore], ([$result, $defaultedOptionsStore]) => {\n        $result = observer.getOptimisticResult($defaultedOptionsStore);\n        return !$defaultedOptionsStore.notifyOnChangeProps\n            ? observer.trackResult($result)\n            : $result;\n    });\n    return { subscribe };\n}\n","export function isSvelteStore(obj) {\n    return 'subscribe' in obj && typeof obj.subscribe === 'function';\n}\nexport function noop() { }\n","import { getQueryClientContext } from './context';\nexport function useQueryClient(queryClient) {\n    if (queryClient)\n        return queryClient;\n    return getQueryClientContext();\n}\n","import { getIsRestoringContext } from './context';\nexport function useIsRestoring() {\n    return getIsRestoringContext();\n}\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n","import {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { focusManager } from './focusManager'\nimport { Subscribable } from './subscribable'\nimport { fetchState } from './query'\nimport type { FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\nexport interface NotifyOptions {\n  listeners?: boolean\n}\n\nexport interface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  #client: QueryClient\n  #currentQuery: Query<TQueryFnData, TError, TQueryData, TQueryKey> = undefined!\n  #currentQueryInitialState: QueryState<TQueryData, TError> = undefined!\n  #currentResult: QueryObserverResult<TData, TError> = undefined!\n  #currentResultState?: QueryState<TQueryData, TError>\n  #currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  #selectError: TError | null\n  #selectFn?: (data: TQueryData) => TData\n  #selectResult?: TData\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData?: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  #staleTimeoutId?: ReturnType<typeof setTimeout>\n  #refetchIntervalId?: ReturnType<typeof setInterval>\n  #currentRefetchInterval?: number | false\n  #trackedProps = new Set<keyof QueryObserverResult>()\n\n  constructor(\n    client: QueryClient,\n    public options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.#selectError = null\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch()\n      } else {\n        this.updateResult()\n      }\n\n      this.#updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.#clearStaleTimeout()\n    this.#clearRefetchInterval()\n    this.#currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n    notifyOptions?: NotifyOptions,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.#currentQuery\n\n    this.options = this.#client.defaultQueryOptions(options)\n\n    if (\n      this.options.enabled !== undefined &&\n      typeof this.options.enabled !== 'boolean' &&\n      typeof this.options.enabled !== 'function' &&\n      typeof resolveEnabled(this.options.enabled, this.#currentQuery) !==\n        'boolean'\n    ) {\n      throw new Error(\n        'Expected enabled to be a boolean or a callback that returns a boolean',\n      )\n    }\n\n    this.#updateQuery()\n    this.#currentQuery.setOptions(this.options)\n\n    if (\n      prevOptions._defaulted &&\n      !shallowEqualObjects(this.options, prevOptions)\n    ) {\n      this.#client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.#currentQuery,\n        observer: this,\n      })\n    }\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.#currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.#executeFetch()\n    }\n\n    // Update result\n    this.updateResult(notifyOptions)\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        resolveStaleTime(this.options.staleTime, this.#currentQuery) !==\n          resolveStaleTime(prevOptions.staleTime, this.#currentQuery))\n    ) {\n      this.#updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.#computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        nextRefetchInterval !== this.#currentRefetchInterval)\n    ) {\n      this.#updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.#client.getQueryCache().build(this.#client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult every time\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.#currentResult = result\n      this.#currentResultOptions = this.options\n      this.#currentResultState = this.#currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.#currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n    onPropTracked?: (key: keyof QueryObserverResult) => void,\n  ): QueryObserverResult<TData, TError> {\n    const trackedResult = {} as QueryObserverResult<TData, TError>\n\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key as keyof QueryObserverResult)\n          onPropTracked?.(key as keyof QueryObserverResult)\n          return result[key as keyof QueryObserverResult]\n        },\n      })\n    })\n\n    return trackedResult\n  }\n\n  trackProp(key: keyof QueryObserverResult) {\n    this.#trackedProps.add(key)\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.#currentQuery\n  }\n\n  refetch({ ...options }: RefetchOptions = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.#client.defaultQueryOptions(options)\n\n    const query = this.#client\n      .getQueryCache()\n      .build(this.#client, defaultedOptions)\n    query.isFetchingOptimistic = true\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.#currentResult\n    })\n  }\n\n  #executeFetch(\n    fetchOptions?: Omit<ObserverFetchOptions, 'initialPromise'>,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.#updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.#currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  #updateStaleTimeout(): void {\n    this.#clearStaleTimeout()\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery,\n    )\n\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return\n    }\n\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime)\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  #computeRefetchInterval() {\n    return (\n      (typeof this.options.refetchInterval === 'function'\n        ? this.options.refetchInterval(this.#currentQuery)\n        : this.options.refetchInterval) ?? false\n    )\n  }\n\n  #updateRefetchInterval(nextInterval: number | false): void {\n    this.#clearRefetchInterval()\n\n    this.#currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      resolveEnabled(this.options.enabled, this.#currentQuery) === false ||\n      !isValidTimeout(this.#currentRefetchInterval) ||\n      this.#currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.#refetchIntervalId = setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.#executeFetch()\n      }\n    }, this.#currentRefetchInterval)\n  }\n\n  #updateTimers(): void {\n    this.#updateStaleTimeout()\n    this.#updateRefetchInterval(this.#computeRefetchInterval())\n  }\n\n  #clearStaleTimeout(): void {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId)\n      this.#staleTimeoutId = undefined\n    }\n  }\n\n  #clearRefetchInterval(): void {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId)\n      this.#refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.#currentQuery\n    const prevOptions = this.options\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.#currentResultState\n    const prevResultOptions = this.#currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.#currentQueryInitialState\n\n    const { state } = query\n    let newState = { ...state }\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options),\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        newState.fetchStatus = 'idle'\n      }\n    }\n\n    let { error, errorUpdatedAt, status } = newState\n\n    // Select data if needed\n    if (options.select && newState.data !== undefined) {\n      // Memoize select result\n      if (\n        prevResult &&\n        newState.data === prevResultState?.data &&\n        options.select === this.#selectFn\n      ) {\n        data = this.#selectResult\n      } else {\n        try {\n          this.#selectFn = options.select\n          data = options.select(newState.data)\n          data = replaceData(prevResult?.data, data, options)\n          this.#selectResult = data\n          this.#selectError = null\n        } catch (selectError) {\n          this.#selectError = selectError as TError\n        }\n      }\n    }\n    // Use query data\n    else {\n      data = newState.data as unknown as TData\n    }\n\n    // Show placeholder data if needed\n    if (\n      options.placeholderData !== undefined &&\n      data === undefined &&\n      status === 'pending'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n      } else {\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (\n                options.placeholderData as unknown as PlaceholderDataFunction<TQueryData>\n              )(\n                this.#lastQueryWithDefinedData?.state.data,\n                this.#lastQueryWithDefinedData as any,\n              )\n            : options.placeholderData\n        if (options.select && placeholderData !== undefined) {\n          try {\n            placeholderData = options.select(placeholderData)\n            this.#selectError = null\n          } catch (selectError) {\n            this.#selectError = selectError as TError\n          }\n        }\n      }\n\n      if (placeholderData !== undefined) {\n        status = 'success'\n        data = replaceData(\n          prevResult?.data,\n          placeholderData as unknown,\n          options,\n        ) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    if (this.#selectError) {\n      error = this.#selectError as any\n      data = this.#selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = newState.fetchStatus === 'fetching'\n    const isPending = status === 'pending'\n    const isError = status === 'error'\n\n    const isLoading = isPending && isFetching\n    const hasData = data !== undefined\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        newState.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === 'paused',\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n    }\n\n    return result as QueryObserverResult<TData, TError>\n  }\n\n  updateResult(notifyOptions?: NotifyOptions): void {\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.#currentQuery, this.options)\n    this.#currentResultState = this.#currentQuery.state\n    this.#currentResultOptions = this.options\n\n    if (this.#currentResultState.data !== undefined) {\n      this.#lastQueryWithDefinedData = this.#currentQuery\n    }\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.#currentResult = nextResult\n\n    // Determine which callbacks to trigger\n    const defaultNotifyOptions: NotifyOptions = {}\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.#trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps,\n      )\n\n      if (this.options.throwOnError) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey]\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true\n    }\n\n    this.#notify({ ...defaultNotifyOptions, ...notifyOptions })\n  }\n\n  #updateQuery(): void {\n    const query = this.#client.getQueryCache().build(this.#client, this.options)\n\n    if (query === this.#currentQuery) {\n      return\n    }\n\n    const prevQuery = this.#currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.#currentQuery = query\n    this.#currentQueryInitialState = query.state\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(): void {\n    this.updateResult()\n\n    if (this.hasListeners()) {\n      this.#updateTimers()\n    }\n  }\n\n  #notify(notifyOptions: NotifyOptions): void {\n    notifyManager.batch(() => {\n      // First, trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: 'observerResultsUpdated',\n      })\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.state.data === undefined &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.data !== undefined &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: (typeof options)['refetchOnMount'] &\n    (typeof options)['refetchOnWindowFocus'] &\n    (typeof options)['refetchOnReconnect'],\n) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    (query !== prevQuery ||\n      resolveEnabled(prevOptions.enabled, query) === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.isStaleByTime(resolveStaleTime(options.staleTime, query))\n  )\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n) {\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n"],"names":[],"mappings":"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"}