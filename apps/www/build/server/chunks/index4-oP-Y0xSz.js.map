{"version":3,"file":"index4-oP-Y0xSz.js","sources":["../../../../src/lib/components/ui/button/index.ts","../../../../src/lib/components/ui/button/button.svelte","../../../../../../node_modules/.pnpm/bits-ui@0.21.12_svelte@5.0.0-next.166/node_modules/bits-ui/dist/bits/button/components/button.svelte","../../../../../../node_modules/.pnpm/bits-ui@0.21.12_svelte@5.0.0-next.166/node_modules/bits-ui/dist/helpers/builders.js","../../../../../../node_modules/.pnpm/bits-ui@0.21.12_svelte@5.0.0-next.166/node_modules/bits-ui/dist/internal/attrs.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/builders/date-picker/create.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/builders/calendar/create.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/builders/hidden-input/create.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/actions/escape-keydown/action.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/actions/click-outside/action.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/store/effect.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/keyboard.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/withGet.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/object.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/lifecycle.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/event.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/callbacks.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/is.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/makeElement.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/store/lightable.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/attr.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/style.js"],"sourcesContent":["import type { Button as ButtonPrimitive } from 'bits-ui';\nimport { type VariantProps, tv } from 'tailwind-variants';\nimport Root from './button.svelte';\n\nconst buttonVariants = tv({\n  base: 'inline-flex items-center justify-center whitespace-nowrap select-none [transform:translateZ(0)] relative rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:bg-ds-gray-100 disabled:text-ds-gray-700 disabled:ring-1 disabled:ring-ds-gray-400',\n  variants: {\n    variant: {\n      default: 'bg-ds-gray-1000 text-ds-background-100 hover:bg-[#cacaca]',\n      secondary:\n        'bg-ds-background-100 ring-1 ring-ds-gray-400 text-ds-gray-1000 hover:bg-ds-gray-200 hover:text-ds-gray-1000',\n      destructive: 'bg-ds-red-800 text-white hover:bg-ds-red-700'\n    },\n    size: {\n      default: 'h-10 px-4 py-2',\n      sm: 'h-8 rounded-md px-3 text-xs',\n      lg: 'h-10 rounded-md px-8',\n      icon: 'h-9 w-9'\n    }\n  },\n  defaultVariants: {\n    variant: 'default',\n    size: 'default'\n  }\n});\n\ntype Variant = VariantProps<typeof buttonVariants>['variant'];\ntype Size = VariantProps<typeof buttonVariants>['size'];\n\ntype Props = ButtonPrimitive.Props & {\n  variant?: Variant;\n  size?: Size;\n};\n\ntype Events = ButtonPrimitive.Events;\n\nexport {\n  Root,\n  type Props,\n  type Events,\n  //\n  Root as Button,\n  type Props as ButtonProps,\n  type Events as ButtonEvents,\n  buttonVariants\n};\n","<script lang=\"ts\">\n\timport { Button as ButtonPrimitive } from \"bits-ui\";\n\timport { type Events, type Props, buttonVariants } from \"./index.js\";\n\timport { cn } from \"$lib/utils.js\";\n\n\ttype $$Props = Props;\n\ttype $$Events = Events;\n\n\tlet className: $$Props[\"class\"] = undefined;\n\texport let variant: $$Props[\"variant\"] = \"default\";\n\texport let size: $$Props[\"size\"] = \"default\";\n\texport let builders: $$Props[\"builders\"] = [];\n\texport { className as class };\n</script>\n\n<ButtonPrimitive.Root\n\t{builders}\n\tclass={cn(buttonVariants({ variant, size, className }))}\n\ttype=\"button\"\n\t{...$$restProps}\n\ton:click\n\ton:keydown\n>\n\t<slot />\n</ButtonPrimitive.Root>\n","<script>import { builderActions, getAttrs } from \"../../../helpers/index.js\";\nexport let href = void 0;\nexport let type = void 0;\nexport let builders = [];\nexport let el = void 0;\nconst attrs = {\n  \"data-button-root\": \"\"\n};\n</script>\n\n{#if builders && builders.length}\n\t<!-- svelte-ignore a11y-no-static-element-interactions a11y_no_static_element_interactions -->\n\t<svelte:element\n\t\tthis={href ? \"a\" : \"button\"}\n\t\tbind:this={el}\n\t\ttype={href ? undefined : type}\n\t\t{href}\n\t\ton:click\n\t\ton:change\n\t\ton:keydown\n\t\ton:keyup\n\t\ton:mouseenter\n\t\ton:mouseleave\n\t\ton:mousedown\n\t\ton:pointerdown\n\t\ton:mouseup\n\t\ton:pointerup\n\t\ttabindex=\"0\"\n\t\tuse:builderActions={{ builders }}\n\t\t{...getAttrs(builders)}\n\t\t{...$$restProps}\n\t\t{...attrs}\n\t>\n\t\t<slot />\n\t</svelte:element>\n{:else}\n\t<!-- svelte-ignore a11y-no-static-element-interactions a11y_no_static_element_interactions -->\n\t<svelte:element\n\t\tthis={href ? \"a\" : \"button\"}\n\t\tbind:this={el}\n\t\ttype={href ? undefined : type}\n\t\t{href}\n\t\ton:click\n\t\ton:change\n\t\ton:keydown\n\t\ton:keyup\n\t\ton:mouseenter\n\t\ton:mouseleave\n\t\ton:mousedown\n\t\ton:pointerdown\n\t\ton:mouseup\n\t\ton:pointerup\n\t\ttabindex=\"0\"\n\t\t{...$$restProps}\n\t\t{...attrs}\n\t>\n\t\t<slot />\n\t</svelte:element>\n{/if}\n","export function builderActions(node, params) {\n    const unsubs = [];\n    params.builders.forEach((builder) => {\n        const act = builder.action(node);\n        if (act) {\n            unsubs.push(act);\n        }\n    });\n    return {\n        destroy: () => {\n            unsubs.forEach((unsub) => {\n                if (unsub.destroy) {\n                    unsub.destroy();\n                }\n            });\n        },\n    };\n}\n// eslint-disable-next-line ts/no-explicit-any\nexport function getAttrs(builders) {\n    const attrs = {};\n    builders.forEach((builder) => {\n        Object.keys(builder).forEach((key) => {\n            if (key !== \"action\") {\n                attrs[key] = builder[key];\n            }\n        });\n    });\n    return attrs;\n}\n","export const bits = [\n    \"accordion\",\n    \"alert-dialog\",\n    \"aspect-ratio\",\n    \"avatar\",\n    \"button\",\n    \"calendar\",\n    \"checkbox\",\n    \"collapsible\",\n    \"combobox\",\n    \"context-menu\",\n    \"date-field\",\n    \"date-picker\",\n    \"date-range-field\",\n    \"date-range-picker\",\n    \"dialog\",\n    \"dropdown-menu\",\n    \"label\",\n    \"link-preview\",\n    \"menubar\",\n    \"pagination\",\n    \"pin-input\",\n    \"popover\",\n    \"progress\",\n    \"radio-group\",\n    \"range-calendar\",\n    \"scroll-area\",\n    \"select\",\n    \"separator\",\n    \"slider\",\n    \"switch\",\n    \"tabs\",\n    \"toggle\",\n    \"toggle-group\",\n    \"toolbar\",\n    \"tooltip\",\n];\nexport function createBitAttrs(bit, parts) {\n    const attrs = {};\n    parts.forEach((part) => {\n        attrs[part] = {\n            [`data-${bit}-${part}`]: \"\",\n        };\n    });\n    return (part) => attrs[part];\n}\nexport function disabledAttrs(disabled) {\n    return disabled\n        ? { \"aria-disabled\": \"true\", \"data-disabled\": \"\" }\n        : { \"aria-disabled\": undefined, \"data-disabled\": undefined };\n}\n","import { createCalendar, createDateField, createPopover } from '../index.js';\nimport { handleSegmentNavigation, isSegmentNavigationKey, } from '../../internal/helpers/date/index.js';\nimport { addMeltEventListener, makeElement, effect, omit, toWritableStores, } from '../../internal/helpers/index.js';\nimport { pickerOpenFocus } from '../../internal/helpers/date/focus.js';\nimport { createFormatter, dateStore, getDefaultDate } from '../../internal/helpers/date/index.js';\nimport { defaults as calendarDefaults } from '../calendar/create.js';\nconst defaults = {\n    isDateDisabled: undefined,\n    isDateUnavailable: undefined,\n    value: undefined,\n    positioning: {\n        placement: 'bottom',\n    },\n    closeOnEscape: true,\n    closeOnOutsideClick: true,\n    onOutsideClick: undefined,\n    preventScroll: false,\n    forceVisible: false,\n    locale: 'en',\n    granularity: undefined,\n    disabled: false,\n    readonly: false,\n    minValue: undefined,\n    maxValue: undefined,\n    weekdayFormat: 'narrow',\n    ...omit(calendarDefaults, 'isDateDisabled', 'isDateUnavailable', 'value', 'locale', 'disabled', 'readonly', 'minValue', 'maxValue', 'weekdayFormat'),\n};\nexport function createDatePicker(props) {\n    const withDefaults = { ...defaults, ...props };\n    const options = toWritableStores(omit(withDefaults, 'value', 'placeholder'));\n    const dateField = createDateField({\n        ...withDefaults,\n        ids: withDefaults.dateFieldIds,\n    });\n    const { states: { value, placeholder: dfPlaceholder }, } = dateField;\n    const calendar = createCalendar({\n        ...omit(withDefaults, 'onValueChange'),\n        placeholder: dfPlaceholder,\n        value: value,\n        ids: withDefaults.calendarIds,\n    });\n    const popover = createPopover({\n        positioning: withDefaults.positioning,\n        arrowSize: withDefaults.arrowSize,\n        defaultOpen: withDefaults.defaultOpen,\n        open: withDefaults.open,\n        disableFocusTrap: withDefaults.disableFocusTrap,\n        closeOnEscape: withDefaults.closeOnEscape,\n        preventScroll: withDefaults.preventScroll,\n        onOpenChange: withDefaults.onOpenChange,\n        closeOnOutsideClick: withDefaults.closeOnOutsideClick,\n        portal: withDefaults.portal,\n        forceVisible: withDefaults.forceVisible,\n        openFocus: pickerOpenFocus,\n        ids: withDefaults.popoverIds,\n        onOutsideClick: withDefaults.onOutsideClick,\n    });\n    const trigger = makeElement('popover-trigger', {\n        stores: [popover.elements.trigger, options.disabled],\n        returned: ([$trigger, $disabled]) => {\n            return {\n                ...omit($trigger, 'action'),\n                'aria-label': 'Open date picker',\n                'data-segment': 'trigger',\n                disabled: $disabled ? true : undefined,\n            };\n        },\n        action: (node) => {\n            const unsubKeydown = addMeltEventListener(node, 'keydown', handleTriggerKeydown);\n            const { destroy } = popover.elements.trigger(node);\n            return {\n                destroy() {\n                    destroy?.();\n                    unsubKeydown();\n                },\n            };\n        },\n    });\n    const formatter = createFormatter(options.locale.get());\n    effect([options.locale], ([$locale]) => {\n        dateField.options.locale.set($locale);\n        calendar.options.locale.set($locale);\n        if (formatter.getLocale() === $locale)\n            return;\n        formatter.setLocale($locale);\n    });\n    effect([options.weekdayFormat], ([$weekdayFormat]) => {\n        calendar.options.weekdayFormat.set($weekdayFormat);\n    });\n    effect([options.disabled], ([$disabled]) => {\n        dateField.options.disabled.set($disabled);\n        calendar.options.disabled.set($disabled);\n    });\n    effect([options.readonly], ([$readonly]) => {\n        dateField.options.readonly.set($readonly);\n        calendar.options.readonly.set($readonly);\n    });\n    effect([options.minValue], ([$minValue]) => {\n        dateField.options.minValue.set($minValue);\n        calendar.options.minValue.set($minValue);\n    });\n    effect([options.maxValue], ([$maxValue]) => {\n        dateField.options.maxValue.set($maxValue);\n        calendar.options.maxValue.set($maxValue);\n    });\n    effect([options.numberOfMonths], ([$numberOfMonths]) => {\n        calendar.options.numberOfMonths.set($numberOfMonths);\n    });\n    effect([options.fixedWeeks], ([$fixedWeeks]) => {\n        calendar.options.fixedWeeks.set($fixedWeeks);\n    });\n    effect([options.weekStartsOn], ([$weekStartsOn]) => {\n        calendar.options.weekStartsOn.set($weekStartsOn);\n    });\n    const dateFieldOptions = omit(dateField.options, 'locale', 'disabled', 'readonly', 'minValue', 'maxValue');\n    const calendarOptions = omit(calendar.options, 'locale', 'disabled', 'readonly', 'minValue', 'maxValue');\n    const { states: { open }, } = popover;\n    const defaultDate = getDefaultDate({\n        defaultPlaceholder: withDefaults.defaultPlaceholder,\n        defaultValue: withDefaults.defaultValue,\n        granularity: withDefaults.granularity,\n    });\n    const placeholder = dateStore(dfPlaceholder, withDefaults.defaultPlaceholder ?? defaultDate);\n    effect([open], ([$open]) => {\n        if (!$open) {\n            const $value = value.get();\n            if ($value) {\n                placeholder.set($value);\n            }\n            else {\n                placeholder.reset();\n            }\n        }\n    });\n    function handleTriggerKeydown(e) {\n        if (isSegmentNavigationKey(e.key)) {\n            e.preventDefault();\n            handleSegmentNavigation(e, dateField.ids.field.get());\n        }\n    }\n    return {\n        elements: {\n            ...calendar.elements,\n            ...dateField.elements,\n            ...popover.elements,\n            trigger,\n        },\n        states: {\n            ...dateField.states,\n            ...calendar.states,\n            placeholder: placeholder.toWritable(),\n            value,\n            ...popover.states,\n        },\n        helpers: {\n            ...calendar.helpers,\n        },\n        options: {\n            ...dateFieldOptions,\n            ...calendarOptions,\n            ...options,\n            ...popover.options,\n        },\n        ids: {\n            dateField: dateField.ids,\n            calendar: calendar.ids,\n            popover: popover.ids,\n        },\n    };\n}\n","import { addMeltEventListener, makeElement, createElHelpers, effect, executeCallbacks, generateIds, isBrowser, isHTMLElement, isValidIndex, kbd, omit, overridable, styleToString, toWritableStores, withGet, } from '../../internal/helpers/index.js';\nimport { createFormatter, createMonths, dateStore, getAnnouncer, getDefaultDate, getSelectableCells, isAfter, isBefore, isCalendarCell, parseStringToDateValue, setPlaceholderToNodeValue, toDate, } from '../../internal/helpers/date/index.js';\nimport { getLocalTimeZone, isSameDay, isSameMonth, isToday, } from '@internationalized/date';\nimport { tick } from 'svelte';\nimport { derived, writable } from 'svelte/store';\nexport const defaults = {\n    isDateDisabled: undefined,\n    isDateUnavailable: undefined,\n    value: undefined,\n    preventDeselect: false,\n    numberOfMonths: 1,\n    pagedNavigation: false,\n    weekStartsOn: 0,\n    fixedWeeks: false,\n    calendarLabel: 'Event Date',\n    locale: 'en',\n    minValue: undefined,\n    maxValue: undefined,\n    disabled: false,\n    readonly: false,\n    weekdayFormat: 'narrow',\n};\nconst { name } = createElHelpers('calendar');\nexport const calendarIdParts = ['calendar', 'accessibleHeading'];\nexport function createCalendar(props) {\n    const withDefaults = { ...defaults, ...props };\n    const options = toWritableStores({\n        ...omit(withDefaults, 'value', 'placeholder', 'multiple', 'ids'),\n        multiple: withDefaults.multiple ?? false,\n    });\n    const { preventDeselect, numberOfMonths, pagedNavigation, weekStartsOn, fixedWeeks, calendarLabel, locale, minValue, maxValue, multiple, isDateUnavailable, disabled, readonly, weekdayFormat, } = options;\n    const ids = toWritableStores({ ...generateIds(calendarIdParts), ...withDefaults.ids });\n    const defaultDate = getDefaultDate({\n        defaultPlaceholder: withDefaults.defaultPlaceholder,\n        defaultValue: withDefaults.defaultValue,\n    });\n    const formatter = createFormatter(withDefaults.locale);\n    const valueWritable = withDefaults.value ?? writable(withDefaults.defaultValue);\n    const value = overridable(valueWritable, withDefaults.onValueChange);\n    const placeholderWritable = withDefaults.placeholder ?? writable(withDefaults.defaultPlaceholder ?? defaultDate);\n    const placeholder = dateStore(overridable(placeholderWritable, withDefaults.onPlaceholderChange), withDefaults.defaultPlaceholder ?? defaultDate);\n    /**\n     * A store containing the months to display in the calendar.\n     */\n    const months = withGet(writable(createMonths({\n        dateObj: placeholder.get(),\n        weekStartsOn: withDefaults.weekStartsOn,\n        locale: withDefaults.locale,\n        fixedWeeks: withDefaults.fixedWeeks,\n        numberOfMonths: withDefaults.numberOfMonths,\n    })));\n    /**\n     * A derived store that maintains the currently visible months in the calendar,\n     * which we use to determine how keyboard navigation and if we should apply\n     * `data-outside-month` to cells.\n     */\n    const visibleMonths = withGet.derived([months], ([$months]) => {\n        return $months.map((month) => {\n            return month.value;\n        });\n    });\n    const isOutsideVisibleMonths = derived([visibleMonths], ([$visibleMonths]) => {\n        return (date) => {\n            return !$visibleMonths.some((month) => isSameMonth(date, month));\n        };\n    });\n    const isNextButtonDisabled = withGet.derived([months, maxValue, disabled], ([$months, $maxValue, $disabled]) => {\n        if (!$maxValue || !$months.length)\n            return false;\n        if ($disabled)\n            return true;\n        const lastMonthInView = $months[$months.length - 1].value;\n        const firstMonthOfNextPage = lastMonthInView.add({ months: 1 }).set({ day: 1 });\n        return isAfter(firstMonthOfNextPage, $maxValue);\n    });\n    const isPrevButtonDisabled = withGet.derived([months, minValue, disabled], ([$months, $minValue, $disabled]) => {\n        if (!$minValue || !$months.length)\n            return false;\n        if ($disabled)\n            return true;\n        const firstMonthInView = $months[0].value;\n        const lastMonthOfPrevPage = firstMonthInView.subtract({ months: 1 }).set({ day: 35 });\n        return isBefore(lastMonthOfPrevPage, $minValue);\n    });\n    /**\n     * A derived store function that determines if a date is disabled based\n     * on the `isDateDisabled` prop, `minValue`, and `maxValue` props.\n     */\n    const isDateDisabled = withGet.derived([options.isDateDisabled, minValue, maxValue, disabled], ([$isDateDisabled, $minValue, $maxValue, $disabled]) => {\n        return (date) => {\n            if ($isDateDisabled?.(date) || $disabled)\n                return true;\n            if ($minValue && isBefore(date, $minValue))\n                return true;\n            if ($maxValue && isBefore($maxValue, date))\n                return true;\n            return false;\n        };\n    });\n    const isDateSelected = derived([value], ([$value]) => {\n        return (date) => {\n            if (Array.isArray($value)) {\n                return $value.some((d) => isSameDay(d, date));\n            }\n            else if (!$value) {\n                return false;\n            }\n            else {\n                return isSameDay($value, date);\n            }\n        };\n    });\n    /**\n     * A derived helper store that evaluates to true if a currently selected date is invalid.\n     */\n    const isInvalid = derived([value, isDateDisabled, options.isDateUnavailable], ([$value, $isDateDisabled, $isDateUnavailable]) => {\n        if (Array.isArray($value)) {\n            if (!$value.length)\n                return false;\n            for (const date of $value) {\n                if ($isDateDisabled?.(date))\n                    return true;\n                if ($isDateUnavailable?.(date))\n                    return true;\n            }\n        }\n        else {\n            if (!$value)\n                return false;\n            if ($isDateDisabled?.($value))\n                return true;\n            if ($isDateUnavailable?.($value))\n                return true;\n        }\n        return false;\n    });\n    /**\n     * Initialize the announcer, which currently remains inactive in this context since it will\n     * be server-side rendered, but we'll initialize it in the calendar's action.\n     *\n     * The announcer is in charge of providing `aria-live` announcements for the calendar,\n     * such as when a date is selected.\n     */\n    let announcer = getAnnouncer();\n    /**\n     * The current heading value for the calendar, meant to be utilized with\n     * the {@link heading} builder.\n     * It renders the current displayed month and year, formatted for the current locale.\n     * This value updates automatically as the user navigates the calendar, even when\n     * displaying multiple months using the `numberOfMonths` prop.\n     */\n    const headingValue = withGet.derived([months, locale], ([$months, $locale]) => {\n        if (!$months.length)\n            return '';\n        if ($locale !== formatter.getLocale()) {\n            formatter.setLocale($locale);\n        }\n        if ($months.length === 1) {\n            const month = $months[0].value;\n            return `${formatter.fullMonthAndYear(toDate(month))}`;\n        }\n        const startMonth = toDate($months[0].value);\n        const endMonth = toDate($months[$months.length - 1].value);\n        const startMonthName = formatter.fullMonth(startMonth);\n        const endMonthName = formatter.fullMonth(endMonth);\n        const startMonthYear = formatter.fullYear(startMonth);\n        const endMonthYear = formatter.fullYear(endMonth);\n        const content = startMonthYear === endMonthYear\n            ? `${startMonthName} - ${endMonthName} ${endMonthYear}`\n            : `${startMonthName} ${startMonthYear} - ${endMonthName} ${endMonthYear}`;\n        return content;\n    });\n    /**\n     * The accessible heading label for the calendar, generated by combining the `calendarLabel`\n     * prop and the `headingValue` store to create a label like `Event Date, January 2021`.\n     */\n    const fullCalendarLabel = withGet.derived([headingValue, calendarLabel], ([$headingValue, $calendarLabel]) => {\n        return `${$calendarLabel}, ${$headingValue}`;\n    });\n    /**\n     * The root element of the calendar, capable of housing multiple grids/months\n     * when using paged navigation.\n     */\n    const calendar = makeElement(name(), {\n        stores: [fullCalendarLabel, isInvalid, disabled, readonly, ids.calendar],\n        returned: ([$fullCalendarLabel, $isInvalid, $disabled, $readonly, $calendarId]) => {\n            return {\n                id: $calendarId,\n                role: 'application',\n                'aria-label': $fullCalendarLabel,\n                'data-invalid': $isInvalid ? '' : undefined,\n                'data-disabled': $disabled ? '' : undefined,\n                'data-readonly': $readonly ? '' : undefined,\n            };\n        },\n        action: (node) => {\n            /**\n             * Generates the accessible calendar heading when the grid is mounted.\n             * The label is dynamically updated through an effect whenever there\n             * are changes in the active date or label.\n             */\n            createAccessibleHeading(node, fullCalendarLabel.get());\n            announcer = getAnnouncer();\n            const unsubKb = addMeltEventListener(node, 'keydown', handleCalendarKeydown);\n            return {\n                destroy() {\n                    unsubKb();\n                },\n            };\n        },\n    });\n    /**\n     * The calendar heading, visually displaying the current month and year. This heading\n     * is hidden from screen readers as an accessible heading is automatically generated\n     * for the calendar.\n     *\n     * To customize the accessible heading's prefix, use the `calendarLabel` prop. By default,\n     * the accessible heading reads as `Event Date, January 2021` for January 2021. If you set\n     * the `calendarLabel` prop to 'Booking Date', the accessible heading will be 'Booking Date,\n     * January 2021' for the same month and year.\n     */\n    const heading = makeElement(name('heading'), {\n        stores: [disabled],\n        returned: ([$disabled]) => {\n            return {\n                'aria-hidden': true,\n                'data-disabled': $disabled ? '' : undefined,\n            };\n        },\n    });\n    /**\n     * A grid element that serves as a container for a single month in the calendar.\n     * Grids should be rendered for each month present in the `months` store returned\n     * by the `createCalendar` builder.\n     *\n     * For more details about the structure of the month object, refer to {@link Month}.\n     */\n    const grid = makeElement(name('grid'), {\n        stores: [readonly, disabled],\n        returned: ([$readonly, $disabled]) => {\n            return {\n                tabindex: -1,\n                role: 'grid',\n                'aria-readonly': $readonly ? 'true' : undefined,\n                'aria-disabled': $disabled ? 'true' : undefined,\n                'data-readonly': $readonly ? '' : undefined,\n                'data-disabled': $disabled ? '' : undefined,\n            };\n        },\n    });\n    /**\n     * The 'prev' button for the calendar, enabling navigation to the\n     * previous page. In paged navigation mode, it moves the calendar\n     * back by the number of months specified in the `numberOfMonths` prop.\n     * In non-paged mode, it shifts the calendar back by one month.\n     */\n    const prevButton = makeElement(name('prevButton'), {\n        stores: [isPrevButtonDisabled],\n        returned: ([$isPrevButtonDisabled]) => {\n            const disabled = $isPrevButtonDisabled;\n            return {\n                role: 'button',\n                type: 'button',\n                'aria-label': 'Previous',\n                'aria-disabled': disabled ? 'true' : undefined,\n                'data-disabled': disabled ? '' : undefined,\n                disabled: disabled ? true : undefined,\n            };\n        },\n        action: (node) => {\n            const unsub = executeCallbacks(addMeltEventListener(node, 'click', () => {\n                if (isPrevButtonDisabled.get())\n                    return;\n                prevPage();\n            }));\n            return {\n                destroy: unsub,\n            };\n        },\n    });\n    /**\n     * A button element designed for navigating to the next page of the calendar.\n     * If using paged navigation, it advances the calendar by the number of months\n     * specified in the `numberOfMonths` prop. If not using paged navigation, it\n     * moves the calendar forward by one month.\n     */\n    const nextButton = makeElement(name('nextButton'), {\n        stores: [isNextButtonDisabled],\n        returned: ([$isNextButtonDisabled]) => {\n            const disabled = $isNextButtonDisabled;\n            return {\n                role: 'button',\n                type: 'button',\n                'aria-label': 'Next',\n                'aria-disabled': disabled ? 'true' : undefined,\n                'data-disabled': disabled ? '' : undefined,\n                disabled: disabled ? true : undefined,\n            };\n        },\n        action: (node) => {\n            const unsub = executeCallbacks(addMeltEventListener(node, 'click', () => {\n                if (isNextButtonDisabled.get())\n                    return;\n                nextPage();\n            }));\n            return {\n                destroy: unsub,\n            };\n        },\n    });\n    /**\n     * Represents an individual date cell in the calendar grid,\n     * signifying a single day within the month. Configured with\n     * essential attributes and event handlers for accessibility\n     * and interactivity.\n     */\n    const cell = makeElement(name('cell'), {\n        stores: [\n            isDateSelected,\n            isDateDisabled,\n            isDateUnavailable,\n            isOutsideVisibleMonths,\n            placeholder,\n        ],\n        returned: ([$isDateSelected, $isDateDisabled, $isDateUnavailable, $isOutsideVisibleMonths, $placeholder,]) => {\n            /**\n             * Applies the appropriate attributes to each date cell in the calendar.\n             *\n             * @params cellValue - The `DateValue` for the current cell.\n             * @params monthValue - The `DateValue` for the current month, which is used\n             * to determine if the current cell is outside the current month.\n             */\n            return (cellValue, monthValue) => {\n                const cellDate = toDate(cellValue);\n                const isDisabled = $isDateDisabled?.(cellValue);\n                const isUnavailable = $isDateUnavailable?.(cellValue);\n                const isDateToday = isToday(cellValue, getLocalTimeZone());\n                const isOutsideMonth = !isSameMonth(cellValue, monthValue);\n                const isOutsideVisibleMonths = $isOutsideVisibleMonths(cellValue);\n                const isFocusedDate = isSameDay(cellValue, $placeholder);\n                const isSelectedDate = $isDateSelected(cellValue);\n                const labelText = formatter.custom(cellDate, {\n                    weekday: 'long',\n                    month: 'long',\n                    day: 'numeric',\n                    year: 'numeric',\n                });\n                return {\n                    role: 'button',\n                    'aria-label': labelText,\n                    'aria-selected': isSelectedDate ? true : undefined,\n                    'aria-disabled': isOutsideMonth || isDisabled || isUnavailable ? true : undefined,\n                    'data-selected': isSelectedDate ? true : undefined,\n                    'data-value': cellValue.toString(),\n                    'data-disabled': isDisabled || isOutsideMonth ? '' : undefined,\n                    'data-unavailable': isUnavailable ? '' : undefined,\n                    'data-today': isDateToday ? '' : undefined,\n                    'data-outside-month': isOutsideMonth ? '' : undefined,\n                    'data-outside-visible-months': isOutsideVisibleMonths ? '' : undefined,\n                    'data-focused': isFocusedDate ? '' : undefined,\n                    tabindex: isFocusedDate ? 0 : isOutsideMonth || isDisabled ? undefined : -1,\n                };\n            };\n        },\n        action: (node) => {\n            const getElArgs = () => {\n                const value = node.getAttribute('data-value');\n                const label = node.getAttribute('data-label');\n                const disabled = node.hasAttribute('data-disabled');\n                return {\n                    value,\n                    label: label ?? node.textContent ?? null,\n                    disabled: disabled ? true : false,\n                };\n            };\n            const unsub = executeCallbacks(addMeltEventListener(node, 'click', () => {\n                const args = getElArgs();\n                if (args.disabled)\n                    return;\n                if (!args.value)\n                    return;\n                handleCellClick(parseStringToDateValue(args.value, placeholder.get()));\n            }));\n            return {\n                destroy: unsub,\n            };\n        },\n    });\n    /**\n     * Synchronize the locale used within the formatter to ensure\n     * dynamic updates are reflected in the calendar.\n     */\n    effect([locale], ([$locale]) => {\n        if (formatter.getLocale() === $locale)\n            return;\n        formatter.setLocale($locale);\n    });\n    /**\n     * Updates the displayed months based on changes in the placeholder value,\n     * which determines the months to show in the calendar.\n     */\n    effect([placeholder], ([$placeholder]) => {\n        if (!isBrowser || !$placeholder)\n            return;\n        const $visibleMonths = visibleMonths.get();\n        /**\n         * If the placeholder's month is already in the visible months,\n         * we don't need to do anything.\n         */\n        if ($visibleMonths.some((month) => isSameMonth(month, $placeholder))) {\n            return;\n        }\n        const $weekStartsOn = weekStartsOn.get();\n        const $locale = locale.get();\n        const $fixedWeeks = fixedWeeks.get();\n        const $numberOfMonths = numberOfMonths.get();\n        const defaultMonthProps = {\n            weekStartsOn: $weekStartsOn,\n            locale: $locale,\n            fixedWeeks: $fixedWeeks,\n            numberOfMonths: $numberOfMonths,\n        };\n        months.set(createMonths({\n            ...defaultMonthProps,\n            dateObj: $placeholder,\n        }));\n    });\n    /**\n     * Updates the displayed months based on changes in the the options values,\n     * which determines the months to show in the calendar.\n     */\n    effect([weekStartsOn, locale, fixedWeeks, numberOfMonths], ([$weekStartsOn, $locale, $fixedWeeks, $numberOfMonths]) => {\n        const $placeholder = placeholder.get();\n        if (!isBrowser || !$placeholder)\n            return;\n        const defaultMonthProps = {\n            weekStartsOn: $weekStartsOn,\n            locale: $locale,\n            fixedWeeks: $fixedWeeks,\n            numberOfMonths: $numberOfMonths,\n        };\n        months.set(createMonths({\n            ...defaultMonthProps,\n            dateObj: $placeholder,\n        }));\n    });\n    /**\n     * Update the accessible heading's text content when the\n     * `fullCalendarLabel` store changes.\n     */\n    effect([fullCalendarLabel], ([$fullCalendarLabel]) => {\n        if (!isBrowser)\n            return;\n        const node = document.getElementById(ids.accessibleHeading.get());\n        if (!isHTMLElement(node))\n            return;\n        node.textContent = $fullCalendarLabel;\n    });\n    /**\n     * Synchronizing the placeholder value with the current value.\n     */\n    effect([value], ([$value]) => {\n        if (Array.isArray($value) && $value.length) {\n            const lastValue = $value[$value.length - 1];\n            if (lastValue && placeholder.get() !== lastValue) {\n                placeholder.set(lastValue);\n            }\n        }\n        else if (!Array.isArray($value) && $value && placeholder.get() !== $value) {\n            placeholder.set($value);\n        }\n    });\n    /**\n     * This derived store holds an array of localized day names for the current\n     * locale and calendar view. It dynamically syncs with the 'weekStartsOn' option,\n     * updating its content when the option changes. Using this store to render the\n     * calendar's days of the week is strongly recommended, as it guarantees that\n     * the days are correctly formatted for the current locale and calendar view.\n     *\n     * @example\n     * ```svelte\n     * <table use:melt={$grid} class=\"w-full\">\n     * \t<thead aria-hidden=\"true\">\n     * \t\t<tr>\n     * \t\t\t{#each $weekdays as day}\n     * \t\t\t\t<th class=\"text-sm font-semibold text-magnum-800\">\n     * \t\t\t\t\t<div class=\"flex h-6 w-6 items-center justify-center p-4\">\n     * \t\t\t\t\t\t{day}\n     * \t\t\t\t\t</div>\n     * \t\t\t\t</th>\n     * \t\t\t{/each}\n     * \t\t</tr>\n     * \t</thead>\n     * \t<!-- ... -->\n     * </table>\n     * ```\n     *\n     * If you prefer to format/render the days of the week yourself,\n     * you can do so by accessing the first week of the first month,\n     * and mapping over the dates to get/format each day of the week.\n     *\n     * @example\n     * ```svelte\n     * {#each $months as month}\n     * \t<table use:melt={$grid} class=\"w-full\">\n     * \t\t<thead aria-hidden=\"true\">\n     * \t\t\t<tr>\n     * \t\t\t\t{#each month.weeks[0] as dayOfWeek}\n     * \t\t\t\t\t<th class=\"text-sm font-semibold text-magnum-800\">\n     * \t\t\t\t\t\t<div class=\"flex h-6 w-6 items-center justify-center p-4\">\n     * \t\t\t\t\t\t\t{new Intl.DateTimeFormat('en', { weekday: 'long' }).format\n     * \t\t\t\t\t\t\t(dayOfWeek)}\n     * \t\t\t\t\t\t</div>\n     * \t\t\t\t\t</th>\n     * \t\t\t\t{/each}\n     * \t\t\t</tr>\n     * \t\t</thead>\n     * \t\t<!-- ... -->\n     * \t</table>\n     * {/each}\n     * ```\n     *\n     */\n    const weekdays = derived([months, weekdayFormat, locale], ([$months, $weekdayFormat, _]) => {\n        if (!$months.length)\n            return [];\n        return $months[0].weeks[0].map((date) => {\n            return formatter.dayOfWeek(toDate(date), $weekdayFormat);\n        });\n    });\n    /**\n     * Creates an accessible heading for the calendar, ensuring that\n     * when it is focused by a screen reader, the displayed date range\n     * is announced. This approach maintains accessibility for screen\n     * readers while keeping the heading hidden from the visual design\n     * of the calendar.\n     */\n    function createAccessibleHeading(node, label) {\n        if (!isBrowser)\n            return;\n        const div = document.createElement('div');\n        div.style.cssText = styleToString({\n            border: '0px',\n            clip: 'rect(0px, 0px, 0px, 0px)',\n            'clip-path': 'inset(50%)',\n            height: '1px',\n            margin: '-1px',\n            overflow: 'hidden',\n            padding: '0px',\n            position: 'absolute',\n            'white-space': 'nowrap',\n            width: '1px',\n        });\n        const h2 = document.createElement('div');\n        h2.textContent = label;\n        h2.id = ids.accessibleHeading.get();\n        h2.role = 'heading';\n        h2.ariaLevel = '2';\n        node.insertBefore(div, node.firstChild);\n        div.appendChild(h2);\n    }\n    /**\n     * Navigate to the next page of the calendar.\n     *\n     * @remarks\n     * If using paged navigation, this will move the calendar forward\n     * by the number of months specified in the `numberOfMonths` prop.\n     * If not using paged navigation, this will move the calendar forward\n     * by one month.\n     *\n     * @example\n     * ```svelte\n     * <script>\n     * \timport { createCalendar } from '@melt-ui/svelte';\n     * \tconst { { ... }, helpers: { nextPage } } = createCalendar()\n     * </script>\n     *\n     * <button on:click={nextPage} aria-label=\"Next page\">▶️</button>\n     * ```\n     */\n    function nextPage() {\n        const $months = months.get();\n        const $numberOfMonths = numberOfMonths.get();\n        if (pagedNavigation.get()) {\n            const firstMonth = $months[0].value;\n            placeholder.set(firstMonth.add({ months: $numberOfMonths }));\n        }\n        else {\n            const firstMonth = $months[0].value;\n            const newMonths = createMonths({\n                dateObj: firstMonth.add({ months: 1 }),\n                weekStartsOn: weekStartsOn.get(),\n                locale: locale.get(),\n                fixedWeeks: fixedWeeks.get(),\n                numberOfMonths: $numberOfMonths,\n            });\n            months.set(newMonths);\n            placeholder.set(newMonths[0].value.set({ day: 1 }));\n        }\n    }\n    /**\n     * Navigate to the previous page of the calendar.\n     *\n     * @remarks\n     * A helper function to navigate to the previous page of the calendar.\n     * If using paged navigation, this will move the calendar backwards\n     * by the number of months specified in the `numberOfMonths` prop.\n     * If not using paged navigation, this will move the calendar backwards\n     * by one month.\n     *\n     * @example\n     * ```svelte\n     * <script>\n     * \timport { createCalendar } from '@melt-ui/svelte';\n     * \tconst { { ... }, helpers: { prevPage } } = createCalendar()\n     * </script>\n     *\n     * <button on:click={prevPage} aria-label=\"Previous page\">◀️</button>\n     * ```\n     */\n    function prevPage() {\n        const $months = months.get();\n        const $numberOfMonths = numberOfMonths.get();\n        if (pagedNavigation.get()) {\n            const firstMonth = $months[0].value;\n            placeholder.set(firstMonth.subtract({ months: $numberOfMonths }));\n        }\n        else {\n            const firstMonth = $months[0].value;\n            const newMonths = createMonths({\n                dateObj: firstMonth.subtract({ months: 1 }),\n                weekStartsOn: weekStartsOn.get(),\n                locale: locale.get(),\n                fixedWeeks: fixedWeeks.get(),\n                numberOfMonths: $numberOfMonths,\n            });\n            months.set(newMonths);\n            placeholder.set(newMonths[0].value.set({ day: 1 }));\n        }\n    }\n    /**\n     * Navigate to the next year in the calendar.\n     *\n     * @remarks\n     * A helper function to navigate to the next year in the calendar,\n     * which is useful if you want to extend the calendar to have buttons\n     * to navigate to the next/prev year.\n     *\n     * @example\n     * ```svelte\n     * <script>\n     * \timport { createCalendar } from '@melt-ui/svelte';\n     * \tconst { { ... }, helpers: { nextYear, prevYear } } = createCalendar()\n     * </script>\n     *\n     * <button on:click={prevYear} aria-label=\"Previous year\">◀️</button>\n     * <button on:click={nextYear} aria-label=\"Next year\">▶️</button>\n     *\n     * ```\n     */\n    function nextYear() {\n        placeholder.add({ years: 1 });\n    }\n    /**\n     * A helper function to navigate to the previous year in the calendar,\n     * which is useful if you want to extend the calendar to have buttons\n     * to navigate to the next/prev year.\n     *\n     * @example\n     * ```svelte\n     * <script>\n     * \timport { createCalendar } from '@melt-ui/svelte';\n     * \tconst { { ... }, helpers: { nextYear, prevYear } } = createCalendar()\n     * </script>\n     *\n     * <button on:click={prevYear} aria-label=\"Previous year\">◀️</button>\n     * <button on:click={nextYear} aria-label=\"Next year\">▶️</button>\n     *\n     * ```\n     */\n    function prevYear() {\n        placeholder.subtract({ years: 1 });\n    }\n    const ARROW_KEYS = [kbd.ARROW_DOWN, kbd.ARROW_UP, kbd.ARROW_LEFT, kbd.ARROW_RIGHT];\n    /**\n     * Set the year of the calendar to the specified year.\n     *\n     * @remarks\n     * This is useful if you want to extend the calendar to have\n     * alternative ways to change the year, such as a select input.\n     *\n     * @example\n     * ```svelte\n     * <script>\n     * \timport { createCalendar } from '@melt-ui/svelte';\n     * \tconst { { ... }, helpers: { setYear } } = createCalendar()\n     *\n     * \tlet selectValue = 2023;\n     * \t$: setYear(selectValue);\n     * </script>\n     *\n     * <select bind:value={selectValue} aria-label='Select a year'>\n     * \t<option value={2023}>2023</option>\n     * \t<option value={2024}>2024</option>\n     * \t<option value={2025}>2025</option>\n     * \t<!-- ... -->\n     * </select>\n     * ```\n     */\n    function setYear(year) {\n        placeholder.setDate({ year: year });\n    }\n    /**\n     * Set the month of the calendar to the specified month.\n     *\n     * @remarks\n     * This is useful if you want to extend the calendar to have\n     * alternative ways to change the month, such as a select input.\n     *\n     * @example\n     * ```svelte\n     * <script>\n     * \timport { createCalendar } from '@melt-ui/svelte';\n     * \tconst { { ... }, helpers: { setMonth } } = createCalendar()\n     *\n     * \tlet selectValue = 1;\n     * \t$: setMonth(selectValue);\n     * </script>\n     *\n     * <select bind:value={selectValue} aria-label='Select a month'>\n     * \t<option value={1}>January</option>\n     * \t<option value={2}>February</option>\n     * \t<option value={3}>March</option>\n     * \t<!-- ... -->\n     * </select>\n     * ```\n     */\n    function setMonth(month) {\n        placeholder.setDate({ month: month });\n    }\n    function handleCellClick(date) {\n        const $readonly = readonly.get();\n        if ($readonly)\n            return;\n        const $isDateDisabled = isDateDisabled.get();\n        const $isUnavailable = options.isDateUnavailable.get();\n        if ($isDateDisabled?.(date) || $isUnavailable?.(date))\n            return;\n        value.update((prev) => {\n            const $multiple = multiple.get();\n            if ($multiple) {\n                return handleMultipleUpdate(prev, date);\n            }\n            else {\n                const next = handleSingleUpdate(prev, date);\n                if (!next) {\n                    announcer.announce('Selected date is now empty.', 'polite', 5000);\n                }\n                else {\n                    announcer.announce(`Selected Date: ${formatter.selectedDate(next, false)}`, 'polite');\n                }\n                return next;\n            }\n        });\n    }\n    function handleSingleUpdate(prev, date) {\n        if (Array.isArray(prev))\n            throw new Error('Invalid value for multiple prop.');\n        if (!prev)\n            return date;\n        const $preventDeselect = preventDeselect.get();\n        if (!$preventDeselect && isSameDay(prev, date)) {\n            placeholder.set(date);\n            return undefined;\n        }\n        return date;\n    }\n    function handleMultipleUpdate(prev, date) {\n        if (!prev)\n            return [date];\n        if (!Array.isArray(prev))\n            throw new Error('Invalid value for multiple prop.');\n        const index = prev.findIndex((d) => isSameDay(d, date));\n        const $preventDeselect = preventDeselect.get();\n        if (index === -1) {\n            return [...prev, date];\n        }\n        else if ($preventDeselect) {\n            return prev;\n        }\n        else {\n            const next = prev.filter((d) => !isSameDay(d, date));\n            if (!next.length) {\n                placeholder.set(date);\n                return undefined;\n            }\n            return next;\n        }\n    }\n    const SELECT_KEYS = [kbd.ENTER, kbd.SPACE];\n    function handleCalendarKeydown(e) {\n        const currentCell = e.target;\n        if (!isCalendarCell(currentCell))\n            return;\n        if (!ARROW_KEYS.includes(e.key) && !SELECT_KEYS.includes(e.key))\n            return;\n        e.preventDefault();\n        // the cell that is currently focused\n        if (e.key === kbd.ARROW_DOWN) {\n            shiftFocus(currentCell, 7);\n        }\n        if (e.key === kbd.ARROW_UP) {\n            shiftFocus(currentCell, -7);\n        }\n        if (e.key === kbd.ARROW_LEFT) {\n            shiftFocus(currentCell, -1);\n        }\n        if (e.key === kbd.ARROW_RIGHT) {\n            shiftFocus(currentCell, 1);\n        }\n        if (e.key === kbd.SPACE || e.key === kbd.ENTER) {\n            const cellValue = currentCell.getAttribute('data-value');\n            if (!cellValue)\n                return;\n            handleCellClick(parseStringToDateValue(cellValue, placeholder.get()));\n        }\n    }\n    function shiftFocus(node, add) {\n        const candidateCells = getSelectableCells(ids.calendar.get());\n        if (!candidateCells.length)\n            return;\n        const index = candidateCells.indexOf(node);\n        const nextIndex = index + add;\n        /**\n         * If the next cell is within the bounds of the\n         * displayed/rendered cells, easy day, just focus it.\n         */\n        if (isValidIndex(nextIndex, candidateCells)) {\n            const nextCell = candidateCells[nextIndex];\n            setPlaceholderToNodeValue(nextCell, placeholder);\n            return nextCell.focus();\n        }\n        /**\n         * When the next cell falls outside the displayed/rendered cells range,\n         * we update the focus to the previous or next month based on the direction,\n         * and then focus on the relevant cell.\n         */\n        if (nextIndex < 0) {\n            /**\n             * To handle negative index values, we rewind by one month,\n             * retrieve candidate cells for that month, and shift the focus\n             * by the difference between the nextIndex starting from the end\n             * of the array.\n             */\n            // shift the calendar back a month unless previous month is disabled\n            if (isPrevButtonDisabled.get())\n                return;\n            const $months = months.get();\n            const firstMonth = $months[0].value;\n            const $numberOfMonths = numberOfMonths.get();\n            placeholder.set(firstMonth.subtract({ months: $numberOfMonths }));\n            // Without a tick here, it seems to be too fast for\n            // the DOM to update, with the tick it works great\n            tick().then(() => {\n                const newCandidateCells = getSelectableCells(ids.calendar.get());\n                if (!newCandidateCells.length) {\n                    return;\n                }\n                /**\n                 * Starting at the end of the array, shift focus by the\n                 * difference between the nextIndex and the length of the\n                 * array, since the nextIndex is negative.\n                 */\n                const newIndex = newCandidateCells.length - Math.abs(nextIndex);\n                if (isValidIndex(newIndex, newCandidateCells)) {\n                    const newCell = newCandidateCells[newIndex];\n                    setPlaceholderToNodeValue(newCell, placeholder);\n                    return newCell.focus();\n                }\n            });\n        }\n        if (nextIndex >= candidateCells.length) {\n            /**\n             * Since we're in the positive index range, we need to\n             * go forward a month, refetch the candidate cells within that\n             * month, and then starting at the beginning of that array,\n             * shift focus by the nextIndex amount.\n             */\n            // shift the calendar forward a month unless next month is disabled\n            if (isNextButtonDisabled.get())\n                return;\n            const $months = months.get();\n            const firstMonth = $months[0].value;\n            const $numberOfMonths = numberOfMonths.get();\n            placeholder.set(firstMonth.add({ months: $numberOfMonths }));\n            tick().then(() => {\n                const newCandidateCells = getSelectableCells(ids.calendar.get());\n                if (!newCandidateCells.length) {\n                    return;\n                }\n                /**\n                 * We need to determine how far into the next month we need to go\n                 * to get the next index. So if we only went over the previous\n                 * month by 1, we need to go into the next month by 1 to get the\n                 * right index.\n                 */\n                const newIndex = nextIndex - candidateCells.length;\n                if (isValidIndex(newIndex, newCandidateCells)) {\n                    const nextCell = newCandidateCells[newIndex];\n                    return nextCell.focus();\n                }\n            });\n        }\n    }\n    /**\n     * A helper function to determine if a date cell is disabled,\n     * which uses the `Matcher`(s) provided via the `isDisabled`\n     * prop, as well as other internal logic, such as if it's\n     * outside of the month, or if it's before/after the min/max\n     * values.\n     *\n     * Although we set attributes on the cells themselves, for\n     * easy styling this function is useful when you want to\n     * conditionally handle something outside of the cell,\n     * such as its wrapping element.\n     *\n     * @example\n     * ```svelte\n     * {#each dates as date}\n     * \t<td role=\"gridcell\" aria-disabled={$isDisabled(date)}>\n     * \t\t<!-- ... -->\n     * \t</td>\n     * {/each}\n     * ```\n     *\n     * @param date - The `DateValue` to check\n     * @returns `true` if the date is disabled, `false` otherwise\n     */\n    const _isDateDisabled = derived([isDateDisabled, placeholder, minValue, maxValue, disabled], ([$isDateDisabled, $placeholder, $minValue, $maxValue, $disabled]) => {\n        return (date) => {\n            if ($isDateDisabled?.(date) || $disabled)\n                return true;\n            if ($minValue && isBefore(date, $minValue))\n                return true;\n            if ($maxValue && isAfter(date, $maxValue))\n                return true;\n            if (!isSameMonth(date, $placeholder))\n                return true;\n            return false;\n        };\n    });\n    /**\n     * A helper function to determine if a date is unavailable,\n     * which uses the `Matcher`(s) provided via the `unavailable`\n     * prop.\n     *\n     * Although we set attributes on the cells themselves, this\n     * function is useful when you want to conditionally handle\n     * something outside of the cell, such as its wrapping element.\n     *\n     * @example\n     * ```svelte\n     * {#each dates as date}\n     * \t<td role=\"gridcell\">\n     * \t\t{#if $isUnavailable(date)}\n     * \t\t\t<span>X</span>\n     * \t\t{/if}\n     * \t\t<!-- ... -->\n     * \t</td>\n     * {/each}\n     * ```\n     *\n     * @param date - The `DateValue` to check\n     * @returns `true` if the date is disabled, `false` otherwise\n     */\n    const _isDateUnavailable = derived(isDateUnavailable, ($isDateUnavailable) => {\n        return (date) => $isDateUnavailable?.(date);\n    });\n    return {\n        elements: {\n            calendar,\n            heading,\n            grid,\n            cell,\n            nextButton,\n            prevButton,\n        },\n        states: {\n            placeholder: placeholder.toWritable(),\n            months,\n            value,\n            weekdays,\n            headingValue,\n        },\n        helpers: {\n            nextPage,\n            prevPage,\n            nextYear,\n            prevYear,\n            setYear,\n            setMonth,\n            isDateDisabled: _isDateDisabled,\n            isDateSelected,\n            isDateUnavailable: _isDateUnavailable,\n        },\n        options,\n        ids,\n    };\n}\n","import { createElHelpers, makeElement } from '../../internal/helpers/makeElement.js';\nimport { readable } from 'svelte/store';\nimport { styleToString } from '../../internal/helpers/style.js';\nimport { toReadableStores } from '../../internal/helpers/store/toReadableStores.js';\nimport { omit } from '../../internal/helpers/object.js';\nimport { removeUndefined } from '../../internal/helpers/object.js';\nconst defaults = {\n    prefix: '',\n    disabled: readable(false),\n    required: readable(false),\n    name: readable(undefined),\n};\nexport function createHiddenInput(props) {\n    const withDefaults = {\n        ...defaults,\n        ...removeUndefined(props),\n    };\n    const { name: elName } = createElHelpers(withDefaults.prefix);\n    const { value, name, disabled, required } = toReadableStores(omit(withDefaults, 'prefix'));\n    const nameStore = name; // TODO: Remove this cast when types are fixed\n    const hiddenInput = makeElement(elName('hidden-input'), {\n        stores: [value, nameStore, disabled, required],\n        returned: ([$value, $name, $disabled, $required]) => {\n            return {\n                name: $name,\n                value: $value?.toString(),\n                'aria-hidden': 'true',\n                hidden: true,\n                disabled: $disabled,\n                required: $required,\n                tabIndex: -1,\n                style: styleToString({\n                    position: 'absolute',\n                    opacity: 0,\n                    'pointer-events': 'none',\n                    margin: 0,\n                    transform: 'translateX(-100%)',\n                }),\n            };\n        },\n        action: (node) => {\n            // When value changes, emit a change event\n            const unsub = value.subscribe((newValue) => {\n                node.value = newValue;\n                node.dispatchEvent(new Event('change', { bubbles: true }));\n            });\n            return {\n                destroy: unsub,\n            };\n        },\n    });\n    return hiddenInput;\n}\n","import { addEventListener } from '../../helpers/event.js';\nimport { isFunction, isHTMLElement, isReadable } from '../../helpers/is.js';\nimport { get, readable } from 'svelte/store';\nimport { effect, executeCallbacks, kbd, noop } from '../../helpers/index.js';\n/**\n * Creates a readable store that tracks the latest Escape Keydown that occurred on the document.\n *\n * @returns A function to unsubscribe from the event listener and stop tracking keydown events.\n */\nconst documentEscapeKeyStore = readable(undefined, (set) => {\n    /**\n     * Event handler for keydown events on the document.\n     * Updates the store's value with the latest Escape Keydown event and then resets it to undefined.\n     */\n    function keydown(event) {\n        if (event && event.key === kbd.ESCAPE) {\n            set(event);\n        }\n        // New subscriptions will not trigger immediately\n        set(undefined);\n    }\n    // Adds a keydown event listener to the document, calling the keydown function when triggered.\n    const unsubscribe = addEventListener(document, 'keydown', keydown, {\n        passive: false,\n    });\n    // Returns a function to unsubscribe from the event listener and stop tracking keydown events.\n    return unsubscribe;\n});\nexport const useEscapeKeydown = ((node, config = {}) => {\n    let unsub = noop;\n    function update(config = {}) {\n        unsub();\n        const options = { enabled: true, ...config };\n        const enabled = (isReadable(options.enabled) ? options.enabled : readable(options.enabled));\n        unsub = executeCallbacks(\n        // Handle escape keydowns\n        documentEscapeKeyStore.subscribe((e) => {\n            if (!e || !get(enabled))\n                return;\n            const target = e.target;\n            if (!isHTMLElement(target) || target.closest('[data-escapee]') !== node) {\n                return;\n            }\n            e.preventDefault();\n            // If an ignore function is passed, check if it returns true\n            if (options.ignore) {\n                if (isFunction(options.ignore)) {\n                    if (options.ignore(e))\n                        return;\n                }\n                // If an ignore array is passed, check if any elements in the array match the target\n                else if (Array.isArray(options.ignore)) {\n                    if (options.ignore.length > 0 &&\n                        options.ignore.some((ignoreEl) => {\n                            return ignoreEl && target === ignoreEl;\n                        }))\n                        return;\n                }\n            }\n            // If none of the above conditions are met, call the handler\n            options.handler?.(e);\n        }), effect(enabled, ($enabled) => {\n            if ($enabled) {\n                node.dataset.escapee = '';\n            }\n            else {\n                delete node.dataset.escapee;\n            }\n        }));\n    }\n    update(config);\n    return {\n        update,\n        destroy() {\n            node.removeAttribute('data-escapee');\n            unsub();\n        },\n    };\n});\n","// Modified from Grail UI v0.9.6 (2023-06-10)\n// Source: https://github.com/grail-ui/grail-ui\n// https://github.com/grail-ui/grail-ui/tree/master/packages/grail-ui/src/clickOutside/clickOutside.ts\nimport { readable } from 'svelte/store';\nimport { addEventListener } from '../../helpers/event.js';\nimport { get } from 'svelte/store';\nimport { isFunction } from '../../helpers/is.js';\n/**\n * Creates a readable store that tracks the latest PointerEvent that occurred on the document.\n *\n * @returns A function to unsubscribe from the event listener and stop tracking pointer events.\n */\nconst documentClickStore = readable(undefined, (set) => {\n    /**\n     * Event handler for pointerdown events on the document.\n     * Updates the store's value with the latest PointerEvent and then resets it to undefined.\n     */\n    function clicked(event) {\n        set(event);\n        // New subscriptions will not trigger immediately\n        set(undefined);\n    }\n    // Adds a pointerdown event listener to the document, calling the clicked function when triggered.\n    const unsubscribe = addEventListener(document, 'pointerup', clicked, {\n        passive: false,\n        capture: true,\n    });\n    // Returns a function to unsubscribe from the event listener and stop tracking pointer events.\n    return unsubscribe;\n});\nexport const useClickOutside = (node, config = {}) => {\n    let options = { enabled: true, ...config };\n    // Returns true if the click outside handler is enabled\n    function isEnabled() {\n        return typeof options.enabled === 'boolean' ? options.enabled : get(options.enabled);\n    }\n    // Handle document clicks\n    const unsubscribe = documentClickStore.subscribe((e) => {\n        // If the click outside handler is disabled, or if the event is null or the node itself, return early\n        if (!isEnabled() || !e || e.target === node) {\n            return;\n        }\n        const composedPath = e.composedPath();\n        // If the target is in the node, return early\n        if (composedPath.includes(node))\n            return;\n        // If an ignore function is passed, check if it returns true\n        if (options.ignore) {\n            if (isFunction(options.ignore)) {\n                if (options.ignore(e))\n                    return;\n            }\n            // If an ignore array is passed, check if any elements in the array match the target\n            else if (Array.isArray(options.ignore)) {\n                if (options.ignore.length > 0 &&\n                    options.ignore.some((ignoreEl) => {\n                        return ignoreEl && (e.target === ignoreEl || composedPath.includes(ignoreEl));\n                    }))\n                    return;\n            }\n        }\n        // If none of the above conditions are met, call the handler\n        options.handler?.(e);\n    });\n    return {\n        update(params) {\n            options = { ...options, ...params };\n        },\n        destroy() {\n            unsubscribe();\n        },\n    };\n};\n","import { derived } from 'svelte/store';\nimport { noop } from '../index.js';\nimport { safeOnDestroy } from '../lifecycle.js';\n/**\n * A utility function that creates an effect from a set of stores and a function.\n * The effect is automatically cleaned up when the component is destroyed.\n *\n * @template S - The type of the stores object\n * @param stores - The stores object to derive from\n * @param fn - The function to run when the stores change\n * @returns A function that can be used to unsubscribe the effect\n */\nexport function effect(stores, fn) {\n    let cb = undefined;\n    // Create a derived store that contains the stores object and an onUnsubscribe function\n    const destroy = derived(stores, (stores) => {\n        cb?.();\n        cb = fn(stores);\n    }).subscribe(noop);\n    const unsub = () => {\n        destroy();\n        cb?.();\n    };\n    // Automatically unsubscribe the effect when the component is destroyed\n    safeOnDestroy(unsub);\n    return unsub;\n}\n","/**\n * A constant object that maps commonly used keyboard keys to their corresponding string values.\n * This object can be used in other parts of the application to handle keyboard input and prevent\n * hard-coded strings throughout.\n */\nexport const kbd = {\n    ALT: 'Alt',\n    ARROW_DOWN: 'ArrowDown',\n    ARROW_LEFT: 'ArrowLeft',\n    ARROW_RIGHT: 'ArrowRight',\n    ARROW_UP: 'ArrowUp',\n    BACKSPACE: 'Backspace',\n    CAPS_LOCK: 'CapsLock',\n    CONTROL: 'Control',\n    DELETE: 'Delete',\n    END: 'End',\n    ENTER: 'Enter',\n    ESCAPE: 'Escape',\n    F1: 'F1',\n    F10: 'F10',\n    F11: 'F11',\n    F12: 'F12',\n    F2: 'F2',\n    F3: 'F3',\n    F4: 'F4',\n    F5: 'F5',\n    F6: 'F6',\n    F7: 'F7',\n    F8: 'F8',\n    F9: 'F9',\n    HOME: 'Home',\n    META: 'Meta',\n    PAGE_DOWN: 'PageDown',\n    PAGE_UP: 'PageUp',\n    SHIFT: 'Shift',\n    SPACE: ' ',\n    TAB: 'Tab',\n    CTRL: 'Control',\n    ASTERISK: '*',\n    A: 'a',\n    P: 'p',\n};\n/** Key sets for navigation within lists, such as select, menu, and combobox. */\nexport const FIRST_KEYS = [kbd.ARROW_DOWN, kbd.PAGE_UP, kbd.HOME];\nexport const LAST_KEYS = [kbd.ARROW_UP, kbd.PAGE_DOWN, kbd.END];\nexport const FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nexport const SELECTION_KEYS = [kbd.ENTER, kbd.SPACE];\nexport const getNextKey = (dir = 'ltr', orientation = 'horizontal') => {\n    return {\n        horizontal: dir === 'rtl' ? kbd.ARROW_LEFT : kbd.ARROW_RIGHT,\n        vertical: kbd.ARROW_DOWN,\n    }[orientation];\n};\nexport const getPrevKey = (dir = 'ltr', orientation = 'horizontal') => {\n    return {\n        horizontal: dir === 'rtl' ? kbd.ARROW_RIGHT : kbd.ARROW_LEFT,\n        vertical: kbd.ARROW_UP,\n    }[orientation];\n};\nexport const getDirectionalKeys = (dir = 'ltr', orientation = 'horizontal') => {\n    return {\n        nextKey: getNextKey(dir, orientation),\n        prevKey: getPrevKey(dir, orientation),\n    };\n};\n","import { get, writable } from 'svelte/store';\n/**\n * Transforms an existing store into a store with a `get` method.\n * Uses subscriptions to keep the value up to date, so make sure to call `destroy` when you're done with it.\n * @date 20/01/2024 - 16:38:39\n *\n * @export\n * @template {Readable<unknown>} T\n * @param {T} store\n * @returns {WithGet<T>}\n */\nexport function withGet(store) {\n    return {\n        ...store,\n        get: () => get(store),\n    };\n}\nwithGet.writable = function (initial) {\n    const internal = writable(initial);\n    let value = initial;\n    return {\n        subscribe: internal.subscribe,\n        set(newValue) {\n            internal.set(newValue);\n            value = newValue;\n        },\n        update(updater) {\n            const newValue = updater(value);\n            internal.set(newValue);\n            value = newValue;\n        },\n        get() {\n            return value;\n        },\n    };\n};\nwithGet.derived = function (stores, fn) {\n    const subscribers = new Map();\n    const get = () => {\n        const values = Array.isArray(stores) ? stores.map((store) => store.get()) : stores.get();\n        return fn(values);\n    };\n    const subscribe = (subscriber) => {\n        const unsubscribers = [];\n        const storesArr = Array.isArray(stores) ? stores : [stores];\n        storesArr.forEach((store) => {\n            unsubscribers.push(store.subscribe(() => {\n                subscriber(get());\n            }));\n        });\n        subscriber(get());\n        subscribers.set(subscriber, unsubscribers);\n        return () => {\n            const unsubscribers = subscribers.get(subscriber);\n            if (unsubscribers) {\n                for (const unsubscribe of unsubscribers) {\n                    unsubscribe();\n                }\n            }\n            subscribers.delete(subscriber);\n        };\n    };\n    return {\n        get,\n        subscribe,\n    };\n};\nexport function addGetToStores(stores) {\n    return Object.keys(stores).reduce((acc, key) => {\n        return {\n            ...acc,\n            [key]: withGet(stores[key]),\n        };\n    }, {});\n}\n","import { dequal } from 'dequal';\nexport function omit(obj, ...keys) {\n    const result = {};\n    for (const key of Object.keys(obj)) {\n        if (!keys.includes(key)) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\nexport function stripValues(inputObject, toStrip, recursive) {\n    return Object.fromEntries(Object.entries(inputObject).filter(([_, value]) => !dequal(value, toStrip)));\n}\nexport function removeUndefined(obj) {\n    const result = {};\n    for (const key in obj) {\n        const value = obj[key];\n        if (value !== undefined) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\n","import { onDestroy, onMount } from 'svelte';\nexport const safeOnMount = (fn) => {\n    try {\n        onMount(fn);\n    }\n    catch {\n        return fn;\n    }\n};\nexport const safeOnDestroy = (fn) => {\n    try {\n        onDestroy(fn);\n    }\n    catch {\n        return fn;\n    }\n};\n","import { noop } from './callbacks.js';\nimport { isHTMLElement } from './is.js';\n/**\n * Adds an event listener to the specified target element(s) for the given event(s), and returns a function to remove it.\n * @param target The target element(s) to add the event listener to.\n * @param event The event(s) to listen for.\n * @param handler The function to be called when the event is triggered.\n * @param options An optional object that specifies characteristics about the event listener.\n * @returns A function that removes the event listener from the target element(s).\n */\nexport function addEventListener(target, event, handler, options) {\n    const events = Array.isArray(event) ? event : [event];\n    // Add the event listener to each specified event for the target element(s).\n    events.forEach((_event) => target.addEventListener(_event, handler, options));\n    // Return a function that removes the event listener from the target element(s).\n    return () => {\n        events.forEach((_event) => target.removeEventListener(_event, handler, options));\n    };\n}\nexport function addMeltEventListener(target, event, handler, options) {\n    const events = Array.isArray(event) ? event : [event];\n    if (typeof handler === 'function') {\n        const handlerWithMelt = withMelt((_event) => handler(_event));\n        // Add the event listener to each specified event for the target element(s).\n        events.forEach((_event) => target.addEventListener(_event, handlerWithMelt, options));\n        // Return a function that removes the event listener from the target element(s).\n        return () => {\n            events.forEach((_event) => target.removeEventListener(_event, handlerWithMelt, options));\n        };\n    }\n    return () => noop();\n}\nexport function dispatchMeltEvent(originalEvent) {\n    const node = originalEvent.currentTarget;\n    if (!isHTMLElement(node))\n        return null;\n    const customMeltEvent = new CustomEvent(`m-${originalEvent.type}`, {\n        detail: {\n            originalEvent,\n        },\n        cancelable: true,\n    });\n    node.dispatchEvent(customMeltEvent);\n    return customMeltEvent;\n}\nexport function withMelt(handler) {\n    return (event) => {\n        const customEvent = dispatchMeltEvent(event);\n        if (customEvent?.defaultPrevented)\n            return;\n        return handler(event);\n    };\n}\n","/**\n * Executes an array of callback functions with the same arguments.\n * @template T The types of the arguments that the callback functions take.\n * @param n array of callback functions to execute.\n * @returns A new function that executes all of the original callback functions with the same arguments.\n */\nexport function executeCallbacks(...callbacks) {\n    return (...args) => {\n        for (const callback of callbacks) {\n            if (typeof callback === 'function') {\n                callback(...args);\n            }\n        }\n    };\n}\n/**\n * A no operation function (does nothing)\n */\nexport function noop() {\n    //\n}\n","export const isBrowser = typeof document !== 'undefined';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isFunction = (v) => typeof v === 'function';\nexport const isLetter = (key) => /^[a-z]$/i.test(key);\nexport function isDocument(element) {\n    return element instanceof Document;\n}\nexport function isElement(element) {\n    return element instanceof Element;\n}\nexport function isHTMLElement(element) {\n    return element instanceof HTMLElement;\n}\nexport function isHTMLInputElement(element) {\n    return element instanceof HTMLInputElement;\n}\nexport function isHTMLLabelElement(element) {\n    return element instanceof HTMLLabelElement;\n}\nexport function isHTMLButtonElement(element) {\n    return element instanceof HTMLButtonElement;\n}\nexport function isElementDisabled(element) {\n    const ariaDisabled = element.getAttribute('aria-disabled');\n    const disabled = element.getAttribute('disabled');\n    const dataDisabled = element.hasAttribute('data-disabled');\n    if (ariaDisabled === 'true' || disabled !== null || dataDisabled) {\n        return true;\n    }\n    return false;\n}\nexport function isTouch(event) {\n    return event.pointerType === 'touch';\n}\nexport function isLeftClick(event) {\n    return event.button === 0 && event.ctrlKey === false && event.metaKey === false;\n}\nexport function isFocusVisible(element) {\n    return element.matches(':focus-visible');\n}\nexport function isContentEditable(element) {\n    if (!isHTMLElement(element))\n        return false;\n    return element.isContentEditable;\n}\nexport function isNull(value) {\n    return value === null;\n}\nexport function isNumberString(value) {\n    if (isNaN(parseInt(value)))\n        return false;\n    return true;\n}\nexport function isObject(value) {\n    return value !== null && typeof value === 'object';\n}\nexport function isReadable(value) {\n    return isObject(value) && 'subscribe' in value;\n}\nexport function isWritable(value) {\n    return isReadable(value) && 'set' in value;\n}\n","import { derived } from 'svelte/store';\nimport { isBrowser, isHTMLElement, noop } from './index.js';\nimport { lightable } from './store/lightable.js';\nexport function getElementByMeltId(id) {\n    if (!isBrowser)\n        return null;\n    const el = document.querySelector(`[data-melt-id=\"${id}\"]`);\n    return isHTMLElement(el) ? el : null;\n}\nexport const hiddenAction = (obj) => {\n    return new Proxy(obj, {\n        get(target, prop, receiver) {\n            return Reflect.get(target, prop, receiver);\n        },\n        ownKeys(target) {\n            return Reflect.ownKeys(target).filter((key) => key !== 'action');\n        },\n    });\n};\nconst isFunctionWithParams = (fn) => {\n    return typeof fn === 'function';\n};\nexport const emptyMeltElement = makeElement('empty');\nexport function makeElement(name, args) {\n    const { stores, action, returned } = args ?? {};\n    const derivedStore = (() => {\n        if (stores && returned) {\n            // If stores are provided, create a derived store from them\n            return derived(stores, (values) => {\n                const result = returned(values);\n                if (isFunctionWithParams(result)) {\n                    const fn = (...args) => {\n                        return hiddenAction({\n                            ...result(...args),\n                            [`data-melt-${name}`]: '',\n                            action: action ?? noop,\n                        });\n                    };\n                    fn.action = action ?? noop;\n                    return fn;\n                }\n                return hiddenAction({\n                    ...result,\n                    [`data-melt-${name}`]: '',\n                    action: action ?? noop,\n                });\n            });\n        }\n        else {\n            // If stores are not provided, return a lightable store, for consistency\n            const returnedFn = returned;\n            const result = returnedFn?.();\n            if (isFunctionWithParams(result)) {\n                const resultFn = (...args) => {\n                    return hiddenAction({\n                        ...result(...args),\n                        [`data-melt-${name}`]: '',\n                        action: action ?? noop,\n                    });\n                };\n                resultFn.action = action ?? noop;\n                return lightable(resultFn);\n            }\n            return lightable(hiddenAction({\n                ...result,\n                [`data-melt-${name}`]: '',\n                action: action ?? noop,\n            }));\n        }\n    })();\n    const actionFn = (action ??\n        (() => {\n            /** noop */\n        }));\n    actionFn.subscribe = derivedStore.subscribe;\n    return actionFn;\n}\nexport function makeElementArray(name, args) {\n    const { stores, returned, action } = args;\n    const { subscribe } = derived(stores, (values) => returned(values).map((value) => hiddenAction({\n        ...value,\n        [`data-melt-${name}`]: '',\n        action: action ?? noop,\n    })));\n    const actionFn = (action ??\n        (() => {\n            /** noop */\n        }));\n    actionFn.subscribe = subscribe;\n    return actionFn;\n}\nexport function createElHelpers(prefix) {\n    const name = (part) => (part ? `${prefix}-${part}` : prefix);\n    const attribute = (part) => `data-melt-${prefix}${part ? `-${part}` : ''}`;\n    const selector = (part) => `[data-melt-${prefix}${part ? `-${part}` : ''}]`;\n    const getEl = (part) => document.querySelector(selector(part));\n    return {\n        name,\n        attribute,\n        selector,\n        getEl,\n    };\n}\n","export function lightable(value) {\n    function subscribe(run) {\n        run(value);\n        return () => {\n            // don't need to unsub from anything\n        };\n    }\n    return { subscribe };\n}\n","import { styleToString } from './style.js';\nexport function disabledAttr(disabled) {\n    return disabled ? true : undefined;\n}\nexport const hiddenInputAttrs = {\n    type: 'hidden',\n    'aria-hidden': true,\n    hidden: true,\n    tabIndex: -1,\n    style: styleToString({\n        position: 'absolute',\n        opacity: 0,\n        'pointer-events': 'none',\n        margin: 0,\n        transform: 'translateX(-100%)',\n    }),\n};\n/**\n * @param portal The value of the `portal` option store.\n * @returns the value of the `data-portal` attribute.\n */\nexport function portalAttr(portal) {\n    if (portal !== null) {\n        return '';\n    }\n    return undefined;\n}\n","/**\n * A utility function that converts a style object to a string.\n *\n * @param style - The style object to convert\n * @returns The style object as a string\n */\nexport function styleToString(style) {\n    return Object.keys(style).reduce((str, key) => {\n        if (style[key] === undefined)\n            return str;\n        return str + `${key}:${style[key]};`;\n    }, '');\n}\n"],"names":["$.value_or_fallback","calendarDefaults","config","stores","get","unsubscribers","element","args"],"mappings":"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B;AACgB,EACZ,WADJ,EACiB,YADjB;AACiB,EACb,QADJ,EACc,SADd;AACc,EACV,SADJ,EACe,WADf;AACe,EACX,SADJ,EACe,UADf;AACe,EACX,OADJ,EACa,SADb;AACa,EACT,MADJ,EACY,QADZ;AACY,EACR,GADJ,EACS,KADT;AACS,EACL,KADJ,EACW,OADX;AACW,EACP,MADJ,EACY,QADZ;AACY,EACR,EADJ,EACQ,IADR;AACQ,EACJ,GADJ,EACS,KADT;AACS,EACL,GADJ,EACS,KADT;AACS,EACL,GADJ,EACS,KADT;AACS,EACL,EADJ,EACQ,IADR;AACQ,EACJ,EADJ,EACQ,IADR;AACQ,EACJ,EADJ,EACQ,IADR;AACQ,EACJ,EADJ,EACQ,IADR;AACQ,EACJ,EADJ,EACQ,IADR;AACQ,EACJ,EADJ,EACQ,IADR;AACQ,EACJ,EADJ,EACQ,IADR;AACQ,EACJ,EADJ,EACQ,IADR;AACQ,EACJ,IADJ,EACU,MADV;AACU,EACN,IADJ,EACU,MADV;AACU,EACN,SADJ,EACe,UADf;AACe,EACX,OADJ,EACa,QADb;AACa,EACT,KADJ,EACW,OADX;AACW,EACP,KADJ,EACW,GADX;AACW,EACP,GADJ,EACS,KADT;AACS,EACL,IADJ,EACU,SADV;AACU,EACN,QADJ,EACc,GADd;AACc,EACV,CADJ,EACO,GADP;AACO,EACH,CADJ,EACO,GADP;AAEA,EAAA;AAMO,MAAM,UAAb,GAA0B,CAAC,GAA3B,GAAiC,KAAjC,EAAwC,WAAxC,GAAsD,YAAtD,KAAuE;AACnE,EAAJ,OAAW;AAAA,IACH,UADR,EACoB,GADpB,KAC4B,KAD5B,GACoC,GADpC,CACwC,UADxC,GACqD,GADrD,CACyD,WADzD;AACyD,IACjD,QADR,EACkB,GADlB,CACsB,UADtB;AACsB,GAAtB,CACM,WAAW,CADjB,CAAA;AAEA,CAAA,CAAA;AACO,MAAM,UAAb,GAA0B,CAAC,GAA3B,GAAiC,KAAjC,EAAwC,WAAxC,GAAsD,YAAtD,KAAuE;AACnE,EAAJ,OAAW;AAAA,IACH,UADR,EACoB,GADpB,K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5B;AAEA,CAAA,EAAA;ADNO,MAAM,QAAb,GAAwB;AAAA,EACpB,cADJ,EACoB,KADpB,CAAA;AACoB,EAChB,iBADJ,EACuB,KADvB,CAAA;AACuB,EACnB,KADJ,EACW,KADX,CAAA;AACW,EACP,eADJ,EACqB,KADrB;AACqB,EACjB,cADJ,EACoB,CADpB;AACoB,EAChB,eADJ,EACqB,KADrB;AACqB,EACjB,YADJ,EACkB,CADlB;AACkB,EACd,UADJ,EACgB,KADhB;AACgB,EACZ,aADJ,EACmB,YADnB;AACmB,EACf,MADJ,EACY,IADZ;AACY,EACR,QADJ,EACc,KADd,CAAA;AACc,EACV,QADJ,EACc,KADd,CAAA;AACc,EACV,QADJ,EACc,KADd;AACc,EACV,QADJ,EACc,KADd;AACc,EACV,aADJ,EACmB,QADnB;AAEA,CAAA,CAAA;AAAA,CDfiB;AAAA,EACb,cADJ,EACoB,KADpB,CAAA;AACoB,EAChB,iBADJ,EACuB,KADvB,CAAA;AACuB,EACnB,KADJ,EACW,KADX,CAAA;AACW,EACP,WADJ,EACiB;AAAA,IACT,SADR,EACmB,QADnB;AACmB,GAAnB;AACK,EACD,aADJ,EACmB,IADnB;AACmB,EACf,mBADJ,EACyB,IADzB;AACyB,EACrB,cADJ,EACoB,KADpB,CAAA;AACoB,EAChB,aADJ,EACmB,KADnB;AACmB,EACf,YADJ,EACkB,KADlB;AACkB,EACd,MADJ,EACY,IADZ;AACY,EACR,WADJ,EACiB,KADjB,CAAA;AACiB,EACb,QADJ,EACc,KADd;AACc,EACV,QADJ,EACc,KADd;AACc,EACV,QADJ,EACc,KADd,CAAA;AACc,EACV,QADJ,EACc,KADd,CAAA;AACc,EACV,aADJ,EACmB,QADnB;AACmB,EACf,GAAG,IADP,CACYD,QADZ,EAC8B,gBAD9B,EACgD,mBADhD,EACqE,OADrE,EAC8E,QAD9E,EACwF,UADxF,EACoG,UADpG,EACgH,UADhH,EAC4H,UAD5H,EACwI,eAAe,CADvJ;AAEA,CAAA,EAAA;ADWO,SAAS,cAAhB,CAA+B,GAA/B,EAAoC,KAAp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"}