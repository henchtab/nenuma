{"version":3,"file":"hooks.server-BXPpe_L1.js","sources":["../../../../src/hooks.server.ts","../../../../../../node_modules/.pnpm/@sveltejs+kit@2.5.18_@sveltejs+vite-plugin-svelte@3.1.1_svelte@5.0.0-next.166_vite@5.3.3_@typ_l7s4kbzeuezsxg5pbotw34oaba/node_modules/@sveltejs/kit/src/exports/hooks/sequence.js"],"sourcesContent":["import { ACCESS_TOKEN_COOKIE } from '$lib/constants';\nimport { handleErrorWithSentry, init, sentryHandle } from '@sentry/sveltekit';\nimport { error, HandleServerError, redirect, type Handle } from '@sveltejs/kit';\nimport { sequence } from '@sveltejs/kit/hooks';\n\ninit({\n  dsn: 'https://55a4e626777e0b3cc8a1a49313c233e0@o4504770823061504.ingest.us.sentry.io/4507562211868672',\n  enabled: import.meta.env.PROD,\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0\n});\n\nconst AUTH_ROUTE = '/';\nconst PROTECTED_ROUTES_PREFIX = '/(app)';\nconst DASHBOARD_ROUTE = '/dashboard';\n\nconst myHandle: Handle = async ({ event, resolve }) => {\n  const routeId = event.route.id;\n\n  if (routeId === null) {\n    throw error(404, 'The route does not exist');\n  }\n\n  // let canAccess = false;\n\n  // if (routeId.startsWith(PROTECTED_ROUTES_PREFIX)) {\n  //   const accessToken = event.cookies.get(ACCESS_TOKEN_COOKIE);\n\n  //   // TODO: Validate access token\n\n  //   canAccess = !!accessToken;\n  // } else {\n  //   canAccess = true;\n  // }\n\n  // if (!canAccess) {\n  //   redirect(307, AUTH_ROUTE);\n  // }\n\n  return resolve(event);\n};\n\nexport const handle = sequence(sentryHandle(), myHandle);\n\nconst myErrorHandler: HandleServerError = ({ error, event }) => {\n  console.error('An error occurred on the server side:', error, event);\n};\n\nexport const handleError = handleErrorWithSentry(myErrorHandler);\n","/**\n * A helper function for sequencing multiple `handle` calls in a middleware-like manner.\n * The behavior for the `handle` options is as follows:\n * - `transformPageChunk` is applied in reverse order and merged\n * - `preload` is applied in forward order, the first option \"wins\" and no `preload` options after it are called\n * - `filterSerializedResponseHeaders` behaves the same as `preload`\n *\n * ```js\n * /// file: src/hooks.server.js\n * import { sequence } from '@sveltejs/kit/hooks';\n *\n * /// type: import('@sveltejs/kit').Handle\n * async function first({ event, resolve }) {\n * \tconsole.log('first pre-processing');\n * \tconst result = await resolve(event, {\n * \t\ttransformPageChunk: ({ html }) => {\n * \t\t\t// transforms are applied in reverse order\n * \t\t\tconsole.log('first transform');\n * \t\t\treturn html;\n * \t\t},\n * \t\tpreload: () => {\n * \t\t\t// this one wins as it's the first defined in the chain\n * \t\t\tconsole.log('first preload');\n * \t\t}\n * \t});\n * \tconsole.log('first post-processing');\n * \treturn result;\n * }\n *\n * /// type: import('@sveltejs/kit').Handle\n * async function second({ event, resolve }) {\n * \tconsole.log('second pre-processing');\n * \tconst result = await resolve(event, {\n * \t\ttransformPageChunk: ({ html }) => {\n * \t\t\tconsole.log('second transform');\n * \t\t\treturn html;\n * \t\t},\n * \t\tpreload: () => {\n * \t\t\tconsole.log('second preload');\n * \t\t},\n * \t\tfilterSerializedResponseHeaders: () => {\n * \t\t\t// this one wins as it's the first defined in the chain\n *    \t\tconsole.log('second filterSerializedResponseHeaders');\n * \t\t}\n * \t});\n * \tconsole.log('second post-processing');\n * \treturn result;\n * }\n *\n * export const handle = sequence(first, second);\n * ```\n *\n * The example above would print:\n *\n * ```\n * first pre-processing\n * first preload\n * second pre-processing\n * second filterSerializedResponseHeaders\n * second transform\n * first transform\n * second post-processing\n * first post-processing\n * ```\n *\n * @param {...import('@sveltejs/kit').Handle} handlers The chain of `handle` functions\n * @returns {import('@sveltejs/kit').Handle}\n */\nexport function sequence(...handlers) {\n\tconst length = handlers.length;\n\tif (!length) return ({ event, resolve }) => resolve(event);\n\n\treturn ({ event, resolve }) => {\n\t\treturn apply_handle(0, event, {});\n\n\t\t/**\n\t\t * @param {number} i\n\t\t * @param {import('@sveltejs/kit').RequestEvent} event\n\t\t * @param {import('@sveltejs/kit').ResolveOptions | undefined} parent_options\n\t\t * @returns {import('types').MaybePromise<Response>}\n\t\t */\n\t\tfunction apply_handle(i, event, parent_options) {\n\t\t\tconst handle = handlers[i];\n\n\t\t\treturn handle({\n\t\t\t\tevent,\n\t\t\t\tresolve: (event, options) => {\n\t\t\t\t\t/** @type {import('@sveltejs/kit').ResolveOptions['transformPageChunk']} */\n\t\t\t\t\tconst transformPageChunk = async ({ html, done }) => {\n\t\t\t\t\t\tif (options?.transformPageChunk) {\n\t\t\t\t\t\t\thtml = (await options.transformPageChunk({ html, done })) ?? '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (parent_options?.transformPageChunk) {\n\t\t\t\t\t\t\thtml = (await parent_options.transformPageChunk({ html, done })) ?? '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn html;\n\t\t\t\t\t};\n\n\t\t\t\t\t/** @type {import('@sveltejs/kit').ResolveOptions['filterSerializedResponseHeaders']} */\n\t\t\t\t\tconst filterSerializedResponseHeaders =\n\t\t\t\t\t\tparent_options?.filterSerializedResponseHeaders ??\n\t\t\t\t\t\toptions?.filterSerializedResponseHeaders;\n\n\t\t\t\t\t/** @type {import('@sveltejs/kit').ResolveOptions['preload']} */\n\t\t\t\t\tconst preload = parent_options?.preload ?? options?.preload;\n\n\t\t\t\t\treturn i < length - 1\n\t\t\t\t\t\t? apply_handle(i + 1, event, {\n\t\t\t\t\t\t\t\ttransformPageChunk,\n\t\t\t\t\t\t\t\tfilterSerializedResponseHeaders,\n\t\t\t\t\t\t\t\tpreload\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t: resolve(event, { transformPageChunk, filterSerializedResponseHeaders, preload });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n"],"names":["error","event","handle"],"mappings":"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"}