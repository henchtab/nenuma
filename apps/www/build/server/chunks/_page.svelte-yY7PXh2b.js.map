{"version":3,"file":"_page.svelte-yY7PXh2b.js","sources":["../../../../src/routes/playground/options-api/deploy/+page.svelte","../../../../src/routes/playground/options-api/deploy/components/OptionForm.svelte","../../../../src/routes/playground/options-api/deploy/components/BrokerDepositForm.svelte","../../../../src/routes/playground/options-api/deploy/components/BrokerOptionForm.svelte","../../../../src/lib/components/ui/toggle-group/index.ts","../../../../src/lib/components/ui/toggle-group/toggle-group-item.svelte","../../../../src/lib/components/ui/toggle/index.ts","../../../../src/lib/components/ui/toggle-group/toggle-group.svelte","../../../../../../node_modules/.pnpm/bits-ui@0.21.12_svelte@5.0.0-next.166/node_modules/bits-ui/dist/bits/toggle-group/components/toggle-group-item.svelte","../../../../../../node_modules/.pnpm/bits-ui@0.21.12_svelte@5.0.0-next.166/node_modules/bits-ui/dist/bits/toggle-group/components/toggle-group.svelte","../../../../../../node_modules/.pnpm/bits-ui@0.21.12_svelte@5.0.0-next.166/node_modules/bits-ui/dist/bits/toggle-group/ctx.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/builders/toggle-group/create.js","../../../../../../node_modules/.pnpm/@melt-ui+svelte@0.76.2_svelte@5.0.0-next.166/node_modules/@melt-ui/svelte/dist/internal/helpers/rovingFocus.js"],"sourcesContent":["<script lang=\"ts\">\n  import { backButton } from '$lib/stores/tma';\n  import { page } from '$app/stores';\n  import { onMount } from 'svelte';\n  import { BrokerOptionForm, BrokerDepositForm, OptionForm } from './components';\n  import { derived } from 'svelte/store';\n\n  type ComponentKey = keyof ComponentMap;\n\n  // Define the contract to component mapping type\n  type ComponentMap = {\n    brokerOption: typeof BrokerOptionForm;\n    brokerDeposit: typeof BrokerDepositForm;\n    option: typeof OptionForm;\n  };\n\n  const contractToComponent: ComponentMap = {\n    brokerOption: BrokerOptionForm,\n    brokerDeposit: BrokerDepositForm,\n    option: OptionForm\n  };\n\n  const contractType = derived(page, ($page) => {\n    const type = $page.url.searchParams.get('contract') || 'option';\n\n    return (type in contractToComponent ? type : 'option') as ComponentKey;\n  });\n\n  const title = $page.url.searchParams.get('title') || 'Fill out the form';\n  // TODO: What to do with subtitle?\n  const subtitle = $page.url.searchParams.get('subtitle') || '';\n  const shouldForceTitle = $page.url.searchParams.get('forceTitle') === 'true';\n\n  onMount(() => {\n    $backButton.show();\n\n    const unsubscribe = $backButton.on('click', () => {\n      history.back();\n    });\n\n    return () => {\n      unsubscribe();\n      $backButton.hide();\n    };\n  });\n</script>\n\n<svelte:head>\n  <title>\n    {shouldForceTitle ? title : `Deploy ${title}`}\n  </title>\n  <meta name=\"robots\" content=\"noindex, nofollow\" />\n</svelte:head>\n\n<div class=\"bg-ds-background-100 border-b\">\n  <div class=\"container py-6 grid gap-1.5\">\n    <h1 class=\"text-lg font-medium text-center text-balance\">\n      {shouldForceTitle ? title : `Deploy ${title}`}\n    </h1>\n    <p class=\"text-ds-gray-900 text-center text-balance\">Fill out the form below</p>\n  </div>\n</div>\n\n<svelte:component this={contractToComponent[$contractType]} />\n","<script lang=\"ts\">\n  import { Button } from '$lib/components/ui/button';\n  import { Input } from '$lib/components/ui/input';\n  import { Label } from '$lib/components/ui/label';\n  import * as ToggleGroup from '$lib/components/ui/toggle-group';\n  import { hapticFeedback, mainButton } from '$lib/stores/tma';\n  import { formatTime, randomize } from '$lib/utils';\n  import { createCashOrNothingOption } from '$lib/wrappers';\n  import { Address, toNano } from '@ton/core';\n  import ChevronDown from 'lucide-svelte/icons/chevron-down';\n  import TrendingDown from 'lucide-svelte/icons/trending-down';\n  import TrendingUp from 'lucide-svelte/icons/trending-up';\n  import { onMount } from 'svelte';\n  import { toast } from 'svelte-sonner';\n  import { page } from '$app/stores';\n  import { writable } from 'svelte/store';\n  import { tonConnectUI } from '$lib/stores/ton-connect';\n\n  const searchParams = $page.url.searchParams;\n  const stream = searchParams.get('stream') || '';\n\n  const option = createCashOrNothingOption(writable(stream));\n\n  let form = $state<HTMLFormElement>();\n  let writer = $state<string>();\n\n  let optionId = $state<number>();\n  let queryId = $state<number>();\n  let initiation = $state(initiationTime(3));\n  let optionType = $state<string>();\n\n  $effect(() => {\n    if ($mainButton && form) {\n      $mainButton.setText('Deploy Option').enable().show();\n\n      const unsubscribe = $mainButton.on('click', () => {\n        form?.requestSubmit();\n        $hapticFeedback.impactOccurred('heavy');\n      });\n\n      return unsubscribe;\n    } else {\n      $mainButton.hide().disable();\n    }\n  });\n\n  onMount(() => {\n    if (!$option) {\n      toast.error('There is no option. Please try again');\n    }\n\n    $tonConnectUI.connectionRestored.then(() => {\n      const account = $tonConnectUI.account;\n\n      if (account) {\n        writer = Address.parse(account.address).toString({\n          testOnly: true,\n          bounceable: false\n        });\n      }\n    });\n\n    const interval = setInterval(() => {\n      if (initiation < initiationTime(3)) {\n        initiation = initiationTime(3);\n      }\n    }, 1000 * 30);\n\n    return () => {\n      $mainButton.hide().disable();\n      clearInterval(interval);\n    };\n  });\n\n  function initiationTime(numberOfMinutes: number) {\n    return formatTime(new Date(Date.now() + 1000 * 60 * numberOfMinutes));\n  }\n\n  async function handleSubmit(\n    e: SubmitEvent & {\n      currentTarget: EventTarget & HTMLFormElement;\n    }\n  ) {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    formData.set('optionType', optionType as string);\n\n    for (const [_, value] of formData) {\n      if (!value) {\n        $hapticFeedback.notificationOccurred('error');\n        toast.error('Please fill in all the fields');\n        return;\n      }\n    }\n\n    const intitiationTime = formData.get('initiation') as string;\n    const initiation = BigInt(new Date(`${new Date().toDateString()} ${intitiationTime}`).getTime() / 1000);\n\n    try {\n      const args = {\n        optionId: BigInt(formData.get('optionId') as string),\n        queryId: BigInt(formData.get('queryId') as string),\n        agreement: {\n          holder: Address.parse((formData.get('holder') as string).trim()),\n          writer: Address.parse((formData.get('writer') as string).trim()),\n          initiation,\n          expiration: BigInt(initiation + BigInt(formData.get('expiration') as string) * 60n),\n          optionType: Boolean(formData.get('optionType') as string),\n          investment: toNano(formData.get('investment') as string),\n          payout: toNano(formData.get('payout') as string)\n        }\n      };\n\n      await $option.deploy(args);\n    } catch (error) {\n      $hapticFeedback.notificationOccurred('error');\n\n      console.log(error);\n\n      if (error instanceof Error) {\n        toast.error(error.message);\n      } else {\n        toast.error('An error occurred while deploying the option');\n      }\n    }\n  }\n</script>\n\n<form\n  bind:this={form}\n  class=\"flex container py-6 flex-col gap-4 overflow-auto\"\n  onsubmit={handleSubmit}\n>\n  <div class=\"grid gap-2\">\n    <Label for=\"optionId\" class=\"w-fit\">Option ID</Label>\n    <div\n      class=\"flex relative ring-1 ring-ds-gray-400 rounded-md transition-all duration-300 focus-within:ring-2 focus-within:ring-ds-gray-600\"\n    >\n      <Input\n        id=\"optionId\"\n        type=\"number\"\n        name=\"optionId\"\n        placeholder=\"101\"\n        required\n        bind:value={optionId}\n        class=\"rounded-r-none border-0 border-r focus-visible:ring-0 appearance-none\"\n      />\n      <Button\n        variant=\"secondary\"\n        class=\"text-sm rounded-l-none ring-0\"\n        onclick={() => (optionId = randomize())}>Randomize</Button\n      >\n    </div>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"queryId\" class=\"w-fit\">Query ID</Label>\n    <div\n      class=\"flex relative ring-1 ring-ds-gray-400 rounded-md transition-all duration-300 focus-within:ring-2 focus-within:ring-ds-gray-600\"\n    >\n      <Input\n        id=\"queryId\"\n        type=\"number\"\n        name=\"queryId\"\n        placeholder=\"101\"\n        required\n        bind:value={queryId}\n        class=\"rounded-r-none border-0 border-r focus-visible:ring-0 appearance-none\"\n      />\n      <Button\n        variant=\"secondary\"\n        class=\"text-sm rounded-l-none ring-0\"\n        onclick={() => (queryId = randomize())}>Randomize</Button\n      >\n    </div>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"holder\" class=\"w-fit\">Holder</Label>\n    <Input\n      id=\"holder\"\n      type=\"text\"\n      name=\"holder\"\n      placeholder=\"0QAXeOTnpkBx_A6zKVxAYNDYqNuWPyrZkYZySJRZ_-zV4gLV\"\n      required\n    />\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"writer\" class=\"w-fit\">Writer</Label>\n    <Input\n      id=\"writer\"\n      type=\"text\"\n      name=\"writer\"\n      bind:value={writer}\n      placeholder=\"0QAXeOTnpkBx_A6zKVxAYNDYqNuWPyrZkYZySJRZ_-zV4gLV\"\n      required\n    />\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"initiation\" class=\"w-fit\">Initiation</Label>\n    <Input\n      id=\"initiation\"\n      type=\"time\"\n      name=\"initiation\"\n      min={initiation}\n      bind:value={initiation}\n      required\n      onchange={() => $hapticFeedback.selectionChanged()}\n    />\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"expiration\" class=\"w-fit\">Expiration</Label>\n    <div class=\"relative flex items-center\">\n      <select\n        class=\"flex h-9 w-full rounded-md border bg-transparent px-3 py-1 text-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-ds-gray-900 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ds-gray-600 disabled:cursor-not-allowed disabled:opacity-50 appearance-none\"\n        id=\"expiration\"\n        name=\"expiration\"\n        required\n        onchange={() => $hapticFeedback.selectionChanged()}\n      >\n        <option value=\"2\">2 minutes</option>\n        <option value=\"3\">3 minutes</option>\n        <option value=\"4\">4 minutes</option>\n        <option value=\"5\">5 minutes</option>\n      </select>\n      <ChevronDown size={16} stroke-width={1.5} class=\"absolute right-2 text-ds-gray-900\" />\n    </div>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"optionType\" class=\"w-fit\">Option Type</Label>\n    <ToggleGroup.Root\n      type=\"single\"\n      id=\"optionType\"\n      aria-required\n      bind:value={optionType}\n      onValueChange={() => $hapticFeedback.selectionChanged()}\n    >\n      <ToggleGroup.Item value=\"true\">\n        <TrendingUp size={16} stroke-width={1.5} class=\"mr-2\" />\n        Call\n      </ToggleGroup.Item>\n      <ToggleGroup.Item value=\"false\">\n        <TrendingDown size={16} stroke-width={1.5} class=\"mr-2\" />\n        Put\n      </ToggleGroup.Item>\n    </ToggleGroup.Root>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"investment\" class=\"w-fit\">Investment</Label>\n    <div class=\"relative flex items-center\">\n      <Input\n        class=\"pr-12\"\n        id=\"investment\"\n        type=\"number\"\n        name=\"investment\"\n        placeholder=\"100\"\n        step=\"any\"\n        required\n      />\n      <span class=\"absolute right-3 select-none text-sm font-medium text-ds-gray-1000\">TON</span>\n    </div>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"payout\" class=\"w-fit\">Payout</Label>\n    <div class=\"relative flex items-center\">\n      <Input\n        class=\"pr-12\"\n        id=\"payout\"\n        type=\"number\"\n        name=\"payout\"\n        placeholder=\"100\"\n        step=\"any\"\n        required\n      />\n      <span class=\"absolute right-3 select-none text-sm font-medium text-ds-gray-1000\">TON</span>\n    </div>\n  </div>\n</form>\n","<script lang=\"ts\">\n  import { page } from '$app/stores';\n  import { Button } from '$lib/components/ui/button';\n  import { Input } from '$lib/components/ui/input';\n  import { Label } from '$lib/components/ui/label';\n  import { hapticFeedback, mainButton } from '$lib/stores/tma';\n  import { formatTime, randomize } from '$lib/utils';\n  import { useBroker } from '$lib/wrappers';\n  import { toNano } from '@ton/core';\n  import { onMount } from 'svelte';\n  import { toast } from 'svelte-sonner';\n  import { writable } from 'svelte/store';\n\n  const searchParams = $page.url.searchParams;\n  const brokerAddress = searchParams.get('broker') || '';\n\n  const broker = useBroker(writable(brokerAddress));\n\n  let form = $state<HTMLFormElement>();\n\n  let queryId = $state<number>();\n  let initiation = $state(initiationTime(3));\n  let optionType = $state<string>();\n\n  $effect(() => {\n    if ($mainButton && form) {\n      $mainButton.setText('Deposit').enable().show();\n\n      const unsubscribe = $mainButton.on('click', () => {\n        form?.requestSubmit();\n        $hapticFeedback.impactOccurred('heavy');\n      });\n\n      return unsubscribe;\n    } else {\n      $mainButton.hide().disable();\n    }\n  });\n\n  onMount(() => {\n    const interval = setInterval(() => {\n      if (initiation < initiationTime(3)) {\n        initiation = initiationTime(3);\n      }\n    }, 1000 * 30);\n\n    return () => {\n      $mainButton.hide().disable();\n      clearInterval(interval);\n    };\n  });\n\n  function initiationTime(numberOfMinutes: number) {\n    return formatTime(new Date(Date.now() + 1000 * 60 * numberOfMinutes));\n  }\n\n  async function handleSubmit(\n    e: SubmitEvent & {\n      currentTarget: EventTarget & HTMLFormElement;\n    }\n  ) {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    formData.set('optionType', optionType as string);\n\n    for (const [_, value] of formData) {\n      if (!value) {\n        $hapticFeedback.notificationOccurred('error');\n        toast.error('Please fill in all the fields');\n        return;\n      }\n    }\n\n    try {\n      const args = {\n        queryId: BigInt(formData.get('queryId') as string),\n        deposit : toNano(formData.get('deposit') as string)\n      };\n\n      await $broker.deposit(args);\n    } catch (error) {\n      $hapticFeedback.notificationOccurred('error');\n\n      console.log(error);\n\n      if (error instanceof Error) {\n        toast.error(error.message);\n      } else {\n        toast.error('An error occurred while deploying the option');\n      }\n    }\n  }\n</script>\n\n<form\n  bind:this={form}\n  class=\"flex container py-6 flex-col gap-4 overflow-auto\"\n  onsubmit={handleSubmit}\n>\n  <div class=\"grid gap-2\">\n    <Label for=\"queryId\" class=\"w-fit\">Query ID</Label>\n    <div\n      class=\"flex relative ring-1 ring-ds-gray-400 rounded-md transition-all duration-300 focus-within:ring-2 focus-within:ring-ds-gray-600\"\n    >\n      <Input\n        id=\"queryId\"\n        type=\"number\"\n        name=\"queryId\"\n        placeholder=\"101\"\n        required\n        bind:value={queryId}\n        class=\"rounded-r-none border-0 border-r focus-visible:ring-0 appearance-none\"\n      />\n      <Button\n        variant=\"secondary\"\n        class=\"text-sm rounded-l-none ring-0\"\n        onclick={() => (queryId = randomize())}>Randomize</Button\n      >\n    </div>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"deposit\" class=\"w-fit\">Deposit</Label>\n    <div class=\"relative flex items-center\">\n      <Input\n        class=\"pr-12\"\n        id=\"deposit\"\n        type=\"number\"\n        name=\"deposit\"\n        placeholder=\"100\"\n        step=\"any\"\n        required\n      />\n      <span class=\"absolute right-3 select-none text-sm font-medium text-ds-gray-1000\">TON</span>\n    </div>\n  </div>\n</form>\n","<script lang=\"ts\">\n  import { page } from '$app/stores';\n  import { Button } from '$lib/components/ui/button';\n  import { Input } from '$lib/components/ui/input';\n  import { Label } from '$lib/components/ui/label';\n  import * as ToggleGroup from '$lib/components/ui/toggle-group';\n  import { hapticFeedback, mainButton } from '$lib/stores/tma';\n  import { formatTime, randomize } from '$lib/utils';\n  import { useBroker } from '$lib/wrappers';\n  import { Address, toNano } from '@ton/core';\n  import ChevronDown from 'lucide-svelte/icons/chevron-down';\n  import TrendingDown from 'lucide-svelte/icons/trending-down';\n  import TrendingUp from 'lucide-svelte/icons/trending-up';\n  import { onMount } from 'svelte';\n  import { toast } from 'svelte-sonner';\n  import { writable } from 'svelte/store';\n\n  const searchParams = $page.url.searchParams;\n  const brokerAddress = searchParams.get('broker') || '';\n\n  const broker = useBroker(writable(brokerAddress));\n\n  let form = $state<HTMLFormElement>();\n\n  let queryId = $state<number>();\n  let initiation = $state(initiationTime(3));\n  let optionType = $state<string>();\n\n  $effect(() => {\n    if ($mainButton && form) {\n      $mainButton.setText('Deploy Option').enable().show();\n\n      const unsubscribe = $mainButton.on('click', () => {\n        form?.requestSubmit();\n        $hapticFeedback.impactOccurred('heavy');\n      });\n\n      return unsubscribe;\n    } else {\n      $mainButton.hide().disable();\n    }\n  });\n\n  onMount(() => {\n    const interval = setInterval(() => {\n      if (initiation < initiationTime(3)) {\n        initiation = initiationTime(3);\n      }\n    }, 1000 * 30);\n\n    return () => {\n      $mainButton.hide().disable();\n      clearInterval(interval);\n    };\n  });\n\n  function initiationTime(numberOfMinutes: number) {\n    return formatTime(new Date(Date.now() + 1000 * 60 * numberOfMinutes));\n  }\n\n  async function handleSubmit(\n    e: SubmitEvent & {\n      currentTarget: EventTarget & HTMLFormElement;\n    }\n  ) {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    formData.set('optionType', optionType as string);\n\n    for (const [_, value] of formData) {\n      if (!value) {\n        $hapticFeedback.notificationOccurred('error');\n        toast.error('Please fill in all the fields');\n        return;\n      }\n    }\n\n    const intitiationTime = formData.get('initiation') as string;\n    const initiation = BigInt(\n      new Date(`${new Date().toDateString()} ${intitiationTime}`).getTime() / 1000\n    );\n\n    try {\n      const args = {\n        queryId: BigInt(formData.get('queryId') as string),\n        draft: {\n          holder: Address.parse((formData.get('holder') as string).trim()),\n          initiation,\n          expiration: BigInt(initiation + BigInt(formData.get('expiration') as string) * 60n),\n          optionType: Boolean(formData.get('optionType') as string),\n          investment: toNano(formData.get('investment') as string)\n        }\n      };\n\n      await $broker.deployOption(args);\n    } catch (error) {\n      $hapticFeedback.notificationOccurred('error');\n\n      console.log(error);\n\n      if (error instanceof Error) {\n        toast.error(error.message);\n      } else {\n        toast.error('An error occurred while deploying the option');\n      }\n    }\n  }\n</script>\n\n<form\n  bind:this={form}\n  class=\"flex container py-6 flex-col gap-4 overflow-auto\"\n  onsubmit={handleSubmit}\n>\n  <div class=\"grid gap-2\">\n    <Label for=\"queryId\" class=\"w-fit\">Query ID</Label>\n    <div\n      class=\"flex relative ring-1 ring-ds-gray-400 rounded-md transition-all duration-300 focus-within:ring-2 focus-within:ring-ds-gray-600\"\n    >\n      <Input\n        id=\"queryId\"\n        type=\"number\"\n        name=\"queryId\"\n        placeholder=\"101\"\n        required\n        bind:value={queryId}\n        class=\"rounded-r-none border-0 border-r focus-visible:ring-0 appearance-none\"\n      />\n      <Button\n        variant=\"secondary\"\n        class=\"text-sm rounded-l-none ring-0\"\n        onclick={() => (queryId = randomize())}>Randomize</Button\n      >\n    </div>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"holder\" class=\"w-fit\">Holder</Label>\n    <Input\n      id=\"holder\"\n      type=\"text\"\n      name=\"holder\"\n      placeholder=\"0QAXeOTnpkBx_A6zKVxAYNDYqNuWPyrZkYZySJRZ_-zV4gLV\"\n      required\n    />\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"initiation\" class=\"w-fit\">Initiation</Label>\n    <Input\n      id=\"initiation\"\n      type=\"time\"\n      name=\"initiation\"\n      min={initiation}\n      bind:value={initiation}\n      required\n      onchange={() => $hapticFeedback.selectionChanged()}\n    />\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"expiration\" class=\"w-fit\">Expiration</Label>\n    <div class=\"relative flex items-center\">\n      <select\n        class=\"flex h-9 w-full rounded-md border bg-transparent px-3 py-1 text-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-ds-gray-900 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ds-gray-600 disabled:cursor-not-allowed disabled:opacity-50 appearance-none\"\n        id=\"expiration\"\n        name=\"expiration\"\n        required\n        onchange={() => $hapticFeedback.selectionChanged()}\n      >\n        <option value=\"2\">2 minutes</option>\n        <option value=\"3\">3 minutes</option>\n        <option value=\"4\">4 minutes</option>\n        <option value=\"5\">5 minutes</option>\n      </select>\n      <ChevronDown size={16} stroke-width={1.5} class=\"absolute right-2 text-ds-gray-900\" />\n    </div>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"optionType\" class=\"w-fit\">Option Type</Label>\n    <ToggleGroup.Root\n      type=\"single\"\n      id=\"optionType\"\n      aria-required\n      bind:value={optionType}\n      onValueChange={() => $hapticFeedback.selectionChanged()}\n    >\n      <ToggleGroup.Item value=\"true\">\n        <TrendingUp size={16} stroke-width={1.5} class=\"mr-2\" />\n        Call\n      </ToggleGroup.Item>\n      <ToggleGroup.Item value=\"false\">\n        <TrendingDown size={16} stroke-width={1.5} class=\"mr-2\" />\n        Put\n      </ToggleGroup.Item>\n    </ToggleGroup.Root>\n  </div>\n\n  <div class=\"grid gap-2\">\n    <Label for=\"investment\" class=\"w-fit\">Investment</Label>\n    <div class=\"relative flex items-center\">\n      <Input\n        class=\"pr-12\"\n        id=\"investment\"\n        type=\"number\"\n        name=\"investment\"\n        placeholder=\"100\"\n        step=\"any\"\n        required\n      />\n      <span class=\"absolute right-3 select-none text-sm font-medium text-ds-gray-1000\">TON</span>\n    </div>\n  </div>\n</form>\n","import type { VariantProps } from \"tailwind-variants\";\nimport { getContext, setContext } from \"svelte\";\nimport Root from \"./toggle-group.svelte\";\nimport Item from \"./toggle-group-item.svelte\";\nimport type { toggleVariants } from \"$lib/components/ui/toggle/index.js\";\n\nexport type ToggleVariants = VariantProps<typeof toggleVariants>;\n\nexport function setToggleGroupCtx(props: ToggleVariants) {\n\tsetContext(\"toggleGroup\", props);\n}\n\nexport function getToggleGroupCtx() {\n\treturn getContext<ToggleVariants>(\"toggleGroup\");\n}\n\nexport {\n\tRoot,\n\tItem,\n\t//\n\tRoot as ToggleGroup,\n\tItem as ToggleGroupItem,\n};\n","<script lang=\"ts\">\n\timport { ToggleGroup as ToggleGroupPrimitive } from \"bits-ui\";\n\timport { type ToggleVariants, getToggleGroupCtx } from \"./index.js\";\n\timport { cn } from \"$lib/utils.js\";\n\timport { toggleVariants } from \"$lib/components/ui/toggle/index.js\";\n\n\ttype $$Props = ToggleGroupPrimitive.ItemProps & ToggleVariants;\n\n\tlet className: string | undefined | null = undefined;\n\n\texport { className as class };\n\texport let variant: $$Props[\"variant\"] = \"default\";\n\texport let size: $$Props[\"size\"] = \"default\";\n\texport let value: $$Props[\"value\"];\n\n\tconst ctx = getToggleGroupCtx();\n</script>\n\n<ToggleGroupPrimitive.Item\n\tclass={cn(\n\t\ttoggleVariants({\n\t\t\tvariant: ctx.variant || variant,\n\t\t\tsize: ctx.size || size,\n\t\t}),\n\t\tclassName\n\t)}\n\t{value}\n\t{...$$restProps}\n>\n\t<slot />\n</ToggleGroupPrimitive.Item>\n","import { type VariantProps, tv } from 'tailwind-variants';\nimport Root from './toggle.svelte';\n\nexport const toggleVariants = tv({\n  base: 'inline-flex items-center border-r first:rounded-l-md last:border-r-0 last:rounded-r-md justify-center text-sm font-medium transition-colors hover:bg-ds-gray-100 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ds-gray-600 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-ds-blue-200 data-[state=on]:text-ds-blue-900',\n  variants: {\n    variant: {\n      default: 'bg-transparent'\n    },\n    size: {\n      default: 'h-9 px-3',\n      sm: 'h-8 px-2',\n      lg: 'h-10 px-3'\n    }\n  },\n  defaultVariants: {\n    variant: 'default',\n    size: 'default'\n  }\n});\n\nexport type Variant = VariantProps<typeof toggleVariants>['variant'];\nexport type Size = VariantProps<typeof toggleVariants>['size'];\n\nexport {\n  Root,\n  //\n  Root as Toggle\n};\n","<script lang=\"ts\">\n\timport type { VariantProps } from \"tailwind-variants\";\n\timport { ToggleGroup as ToggleGroupPrimitive } from \"bits-ui\";\n\timport { setToggleGroupCtx } from \"./index.js\";\n\timport type { toggleVariants } from \"$lib/components/ui/toggle/index.js\";\n\timport { cn } from \"$lib/utils.js\";\n\n\ttype T = $$Generic<\"single\" | \"multiple\">;\n\ttype $$Props = ToggleGroupPrimitive.Props<T> & VariantProps<typeof toggleVariants>;\n\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n\texport let variant: $$Props[\"variant\"] = \"default\";\n\texport let size: $$Props[\"size\"] = \"default\";\n\texport let value: $$Props[\"value\"] = undefined;\n\n\tsetToggleGroupCtx({\n\t\tvariant,\n\t\tsize,\n\t});\n</script>\n\n<ToggleGroupPrimitive.Root\n\tclass={cn(\"flex items-center border rounded-md w-fit justify-center\", className)}\n\tbind:value\n\t{...$$restProps}\n\tlet:builder\n>\n\t<slot {builder} />\n</ToggleGroupPrimitive.Root>\n","<script>import { melt } from \"@melt-ui/svelte\";\nimport { getCtx } from \"../ctx.js\";\nimport { createDispatcher } from \"../../../internal/index.js\";\nexport let value;\nexport let disabled = false;\nexport let asChild = false;\nexport let el = void 0;\nconst {\n  elements: { item },\n  getAttrs\n} = getCtx();\nconst dispatch = createDispatcher();\nconst attrs = getAttrs(\"item\");\n$:\n  builder = $item({ value, disabled });\n$:\n  Object.assign(builder, attrs);\n</script>\n\n{#if asChild}\n\t<slot {builder} />\n{:else}\n\t<button\n\t\tbind:this={el}\n\t\t{...builder} use:builder.action\n\t\t{...$$restProps}\n\t\ton:m-click={dispatch}\n\t\ton:m-keydown={dispatch}\n\t>\n\t\t<slot {builder} />\n\t</button>\n{/if}\n","<script>import { melt } from \"@melt-ui/svelte\";\nimport { setCtx } from \"../ctx.js\";\nimport { arraysAreEqual } from \"../../../internal/arrays.js\";\nexport let type = \"single\";\nexport let disabled = void 0;\nexport let loop = void 0;\nexport let value = void 0;\nexport let orientation = void 0;\nexport let onValueChange = void 0;\nexport let asChild = false;\nexport let el = void 0;\nconst {\n  elements: { root },\n  states: { value: localValue },\n  updateOption,\n  getAttrs\n} = setCtx({\n  disabled,\n  type,\n  defaultValue: value,\n  loop,\n  orientation,\n  onValueChange: ({ next }) => {\n    if (Array.isArray(next)) {\n      if (!Array.isArray(value) || !arraysAreEqual(value, next)) {\n        onValueChange?.(next);\n        value = next;\n        return next;\n      }\n      return next;\n    }\n    if (value !== next) {\n      onValueChange?.(next);\n      value = next;\n    }\n    return next;\n  }\n});\nconst attrs = getAttrs(\"root\");\n$:\n  value !== void 0 && localValue.set(Array.isArray(value) ? [...value] : value);\n$:\n  updateOption(\"disabled\", disabled);\n$:\n  updateOption(\"loop\", loop);\n$:\n  updateOption(\"type\", type);\n$:\n  updateOption(\"orientation\", orientation);\n$:\n  builder = $root;\n$:\n  Object.assign(builder, attrs);\n</script>\n\n{#if asChild}\n\t<slot {builder} />\n{:else}\n\t<div bind:this={el} {...builder} use:builder.action {...$$restProps}>\n\t\t<slot {builder} />\n\t</div>\n{/if}\n","import { createToggleGroup } from \"@melt-ui/svelte\";\nimport { getContext, setContext } from \"svelte\";\nimport { createBitAttrs, getOptionUpdater, removeUndefined } from \"../../internal/index.js\";\nfunction getToggleGroupData() {\n    const NAME = \"toggle-group\";\n    const PARTS = [\"root\", \"item\"];\n    return {\n        NAME,\n        PARTS,\n    };\n}\nexport function setCtx(props) {\n    const { NAME, PARTS } = getToggleGroupData();\n    const getAttrs = createBitAttrs(NAME, PARTS);\n    const toggleGroup = { ...createToggleGroup(removeUndefined(props)), getAttrs };\n    setContext(NAME, toggleGroup);\n    return {\n        ...toggleGroup,\n        updateOption: getOptionUpdater(toggleGroup.options),\n    };\n}\nexport function getCtx() {\n    const { NAME } = getToggleGroupData();\n    return getContext(NAME);\n}\n","import { addMeltEventListener, makeElement, createElHelpers, disabledAttr, executeCallbacks, getElemDirection, handleRovingFocus, isHTMLElement, kbd, noop, omit, overridable, toWritableStores, } from '../../internal/helpers/index.js';\nimport { derived, writable } from 'svelte/store';\nconst defaults = {\n    type: 'single',\n    orientation: 'horizontal',\n    loop: true,\n    rovingFocus: true,\n    disabled: false,\n    defaultValue: '',\n};\nconst { name, selector } = createElHelpers('toggle-group');\nexport const createToggleGroup = (props) => {\n    const withDefaults = { ...defaults, ...props };\n    const options = toWritableStores(omit(withDefaults, 'value'));\n    const { type, orientation, loop, rovingFocus, disabled } = options;\n    const defaultValue = withDefaults.defaultValue\n        ? withDefaults.defaultValue\n        : withDefaults.type === 'single'\n            ? undefined\n            : [];\n    const valueWritable = withDefaults.value ?? writable(defaultValue);\n    const value = overridable(valueWritable, withDefaults?.onValueChange);\n    const root = makeElement(name(), {\n        stores: orientation,\n        returned: ($orientation) => {\n            return {\n                role: 'group',\n                'data-orientation': $orientation,\n            };\n        },\n    });\n    const item = makeElement(name('item'), {\n        stores: [value, disabled, orientation, type],\n        returned: ([$value, $disabled, $orientation, $type]) => {\n            return (props) => {\n                const itemValue = typeof props === 'string' ? props : props.value;\n                const argDisabled = typeof props === 'string' ? false : !!props.disabled;\n                const disabled = $disabled || argDisabled;\n                const pressed = Array.isArray($value) ? $value.includes(itemValue) : $value === itemValue;\n                const isSingle = $type === 'single';\n                const isMultiple = $type === 'multiple' || $type === undefined;\n                return {\n                    disabled: disabledAttr(disabled),\n                    pressed,\n                    'data-orientation': $orientation,\n                    'data-disabled': disabledAttr(disabled),\n                    'data-state': pressed ? 'on' : 'off',\n                    'data-value': itemValue,\n                    'aria-pressed': isMultiple ? pressed : undefined,\n                    'aria-checked': isSingle ? pressed : undefined,\n                    type: 'button',\n                    role: isSingle ? 'radio' : undefined,\n                    tabindex: pressed ? 0 : -1,\n                };\n            };\n        },\n        action: (node) => {\n            let unsub = noop;\n            const parentGroup = node.closest(selector());\n            if (!isHTMLElement(parentGroup))\n                return {};\n            const items = Array.from(parentGroup.querySelectorAll(selector('item')));\n            const $value = value.get();\n            const anyPressed = Array.isArray($value) ? $value.length > 0 : $value ? true : false;\n            if (!anyPressed && items[0] === node) {\n                node.tabIndex = 0;\n            }\n            function getNodeProps() {\n                const itemValue = node.dataset.value;\n                const disabled = node.dataset.disabled === 'true';\n                return { value: itemValue, disabled };\n            }\n            function handleValueUpdate() {\n                const { value: itemValue, disabled } = getNodeProps();\n                if (itemValue === undefined || disabled)\n                    return;\n                value.update(($value) => {\n                    if (Array.isArray($value)) {\n                        if ($value.includes(itemValue)) {\n                            return $value.filter((i) => i !== itemValue);\n                        }\n                        return [...$value, itemValue];\n                    }\n                    return $value === itemValue ? undefined : itemValue;\n                });\n            }\n            unsub = executeCallbacks(addMeltEventListener(node, 'click', () => {\n                handleValueUpdate();\n            }), addMeltEventListener(node, 'keydown', (e) => {\n                if (e.key === kbd.SPACE || e.key === kbd.ENTER) {\n                    e.preventDefault();\n                    handleValueUpdate();\n                    return;\n                }\n                if (!rovingFocus.get())\n                    return;\n                const el = e.currentTarget;\n                if (!isHTMLElement(el))\n                    return;\n                const root = el.closest(selector());\n                if (!isHTMLElement(root))\n                    return;\n                const items = Array.from(root.querySelectorAll(selector('item') + ':not([data-disabled])')).filter((item) => isHTMLElement(item));\n                const currentIndex = items.indexOf(el);\n                const dir = getElemDirection(el);\n                const $orientation = orientation.get();\n                const nextKey = {\n                    horizontal: dir === 'rtl' ? kbd.ARROW_LEFT : kbd.ARROW_RIGHT,\n                    vertical: kbd.ARROW_DOWN,\n                }[$orientation ?? 'horizontal'];\n                const prevKey = {\n                    horizontal: dir === 'rtl' ? kbd.ARROW_RIGHT : kbd.ARROW_LEFT,\n                    vertical: kbd.ARROW_UP,\n                }[$orientation ?? 'horizontal'];\n                const $loop = loop.get();\n                if (e.key === nextKey) {\n                    e.preventDefault();\n                    const nextIndex = currentIndex + 1;\n                    if (nextIndex >= items.length && $loop) {\n                        handleRovingFocus(items[0]);\n                    }\n                    else {\n                        handleRovingFocus(items[nextIndex]);\n                    }\n                }\n                else if (e.key === prevKey) {\n                    e.preventDefault();\n                    const prevIndex = currentIndex - 1;\n                    if (prevIndex < 0 && $loop) {\n                        handleRovingFocus(items[items.length - 1]);\n                    }\n                    else {\n                        handleRovingFocus(items[prevIndex]);\n                    }\n                }\n                else if (e.key === kbd.HOME) {\n                    e.preventDefault();\n                    handleRovingFocus(items[0]);\n                }\n                else if (e.key === kbd.END) {\n                    e.preventDefault();\n                    handleRovingFocus(items[items.length - 1]);\n                }\n            }));\n            return {\n                destroy: unsub,\n            };\n        },\n    });\n    const isPressed = derived(value, ($value) => {\n        return (itemValue) => {\n            return Array.isArray($value) ? $value.includes(itemValue) : $value === itemValue;\n        };\n    });\n    return {\n        elements: {\n            root,\n            item,\n        },\n        states: {\n            value,\n        },\n        helpers: {\n            isPressed,\n        },\n        options,\n    };\n};\n","import { isBrowser, isHTMLElement } from './is.js';\nimport { sleep } from './sleep.js';\n/**\n * Manage roving focus between elements. Sets the current active element to\n * tabindex -1 and the next element to tabindex 0.\n *\n * @param nextElement The element to focus on\n */\nexport function handleRovingFocus(nextElement) {\n    if (!isBrowser)\n        return;\n    sleep(1).then(() => {\n        const currentFocusedElement = document.activeElement;\n        if (!isHTMLElement(currentFocusedElement) || currentFocusedElement === nextElement)\n            return;\n        currentFocusedElement.tabIndex = -1;\n        if (nextElement) {\n            nextElement.tabIndex = 0;\n            nextElement.focus();\n        }\n    });\n}\nfunction getFocusableElements() {\n    return Array.from(document.querySelectorAll('a[href]:not([tabindex=\"-1\"]), button:not([disabled]):not([tabindex=\"-1\"]), input:not([disabled]):not([tabindex=\"-1\"]), select:not([disabled]):not([tabindex=\"-1\"]), textarea:not([disabled]):not([tabindex=\"-1\"]), [tabindex]:not([tabindex=\"-1\"])'));\n}\nexport function getNextFocusable(currentElement) {\n    const focusableElements = getFocusableElements();\n    const currentIndex = focusableElements.indexOf(currentElement);\n    const nextIndex = currentIndex + 1;\n    const nextElement = focusableElements[nextIndex];\n    if (nextIndex < focusableElements.length && isHTMLElement(nextElement)) {\n        return nextElement;\n    }\n    return null;\n}\nexport function getPreviousFocusable(currentElement) {\n    const focusableElements = getFocusableElements();\n    const currentIndex = focusableElements.indexOf(currentElement);\n    const previousIndex = currentIndex - 1;\n    const prevElement = focusableElements[previousIndex];\n    if (previousIndex >= 0 && isHTMLElement(prevElement)) {\n        return prevElement;\n    }\n    return null;\n}\n"],"names":["$.store_get","$page","TrendingDown","$$payload","TrendingUp","$.value_or_fallback","$.spread_attributes","items","root","item","$value","disabled","props"],"mappings":"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"}